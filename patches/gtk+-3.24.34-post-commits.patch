diff --git a/configure.ac b/configure.ac
index e9ded998fc..a665921783 100644
--- a/configure.ac
+++ b/configure.ac
@@ -1963,13 +1963,14 @@ win32/config-msvc.mak
 win32/vs9/Makefile
 win32/vs9/gtk3-version-paths.vsprops
 win32/vs10/Makefile
-win32/vs10/gtk3-version-paths.props
 win32/vs11/Makefile
 win32/vs12/Makefile
 win32/vs14/Makefile
 win32/vs15/Makefile
 win32/vs16/Makefile
 win32/vs17/Makefile
+win32/vs1x-props/Makefile
+win32/vs1x-props/gtk3-version-paths.props
 gdk/Makefile
 gdk/broadway/Makefile
 gdk/x11/Makefile
diff --git a/demos/gtk-demo/Makefile.am b/demos/gtk-demo/Makefile.am
index 9aa106257a..06167986ef 100644
--- a/demos/gtk-demo/Makefile.am
+++ b/demos/gtk-demo/Makefile.am
@@ -61,22 +61,21 @@ demos.h: $(demos) geninclude.pl
 demos.h.win32: $(demos_base) geninclude.pl
 	 $(AM_V_GEN) (here=`pwd` ; cd $(srcdir) && $(PERL) $$here/geninclude.pl $(demos_base)) > demos.h.win32
 
-nodist_gtk3_demo_SOURCES = demos.h
+nodist_gtk3_demo_SOURCES = demos.h demo_resources.c
 
 gtk3_demo_SOURCES = 		\
 	$(demos)		\
 	gtkfishbowl.c		\
 	gtkfishbowl.h		\
-	demo_resources.c	\
 	main.c
 
 gtk3_demo_DEPENDENCIES = $(DEPS)
 gtk3_demo_LDADD = $(LDADDS)
 gtk3_demo_LDFLAGS = -export-dynamic
 
-gtk3_demo_application_SOURCES = \
-	application.c 		\
-	demo_resources.c
+nodist_gtk3_demo_application_SOURCES = demo_resources.c
+
+gtk3_demo_application_SOURCES = application.c
 
 gtk3_demo_application_LDADD = $(LDADDS)
 
@@ -130,6 +129,6 @@ dist-hook: \
 	$(top_builddir)/win32/vs9/gtk3-demo.vcproj	\
 	$(top_builddir)/win32/vs9/gtk3-demo-application.vcproj
 
-DISTCLEANFILES = demos.h demos.h.win32
+DISTCLEANFILES = demos.h demos.h.win32 demo_resources.c
 
 -include $(top_srcdir)/git.mk
diff --git a/demos/icon-browser/Makefile.am b/demos/icon-browser/Makefile.am
index bf8425c86d..9183b0170c 100644
--- a/demos/icon-browser/Makefile.am
+++ b/demos/icon-browser/Makefile.am
@@ -16,16 +16,19 @@ bin_PROGRAMS = gtk3-icon-browser
 desktopdir = $(datadir)/applications
 dist_desktop_DATA = gtk3-icon-browser.desktop
 
+nodist_gtk3_icon_browser_SOURCES = resources.c
+
 gtk3_icon_browser_SOURCES = \
 	main.c \
 	iconbrowserapp.c iconbrowserapp.h \
 	iconbrowserwin.c iconbrowserwin.h \
-	iconstore.c iconstore.h \
-	resources.c
+	iconstore.c iconstore.h
 
 BUILT_SOURCES = \
 	resources.c
 
+DISTCLEANFILES = resources.c
+
 resources.c: iconbrowser.gresource.xml $(shell $(GLIB_COMPILE_RESOURCES) --sourcedir=$(srcdir) --generate-dependencies $(srcdir)/iconbrowser.gresource.xml)
 	$(AM_V_GEN) $(GLIB_COMPILE_RESOURCES) $(srcdir)/iconbrowser.gresource.xml \
 		--target=$@ --sourcedir=$(srcdir) --generate-source
diff --git a/demos/widget-factory/Makefile.am b/demos/widget-factory/Makefile.am
index c33a6d0a95..5faacb00fd 100644
--- a/demos/widget-factory/Makefile.am
+++ b/demos/widget-factory/Makefile.am
@@ -5,9 +5,9 @@ bin_PROGRAMS = gtk3-widget-factory
 desktopdir = $(datadir)/applications
 dist_desktop_DATA = gtk3-widget-factory.desktop
 
-gtk3_widget_factory_SOURCES = 		\
-	widget-factory.c		\
-	widget_factory_resources.c
+nodist_gtk3_widget_factory_SOURCES = widget_factory_resources.c
+
+gtk3_widget_factory_SOURCES = widget-factory.c
 
 BUILT_SOURCES = 			\
 	widget_factory_resources.c
@@ -69,4 +69,6 @@ EXTRA_DIST += 				\
 	data/symbolic-source.svg	\
 	meson.build
 
+DISTCLEANFILES = widget_factory_resources.c
+
 -include $(top_srcdir)/git.mk
diff --git a/gdk/Makefile.am b/gdk/Makefile.am
index 860973b73e..9874a6d5c4 100644
--- a/gdk/Makefile.am
+++ b/gdk/Makefile.am
@@ -1,6 +1,6 @@
 ## Makefile.am for gtk+/gdk
 include $(top_srcdir)/Makefile.decl
-include gdk-pub-headers.mak
+include gdk-sources.inc
 
 -include $(INTROSPECTION_MAKEFILE)
 INTROSPECTION_GIRS =
@@ -62,94 +62,6 @@ LDADD = 					\
 	-rpath $(libdir) 			\
 	$(no_undefined)
 
-#
-# setup source file variables
-#
-
-gdk_h_sources =					\
-	$(gdk_public_h_sources)			\
-	$(gdk_deprecated_h_sources)
-
-gdk_private_headers = 				\
-	gdk-private.h				\
-	gdkapplaunchcontextprivate.h		\
-	gdkconstructor.h		\
-	gdkcursorprivate.h			\
-	gdkdevicemanagerprivate.h		\
-	gdkdeviceprivate.h			\
-	gdkdevicepadprivate.h			\
-	gdkdevicetoolprivate.h			\
-	gdkdisplaymanagerprivate.h		\
-	gdkdisplayprivate.h			\
-	gdkdndprivate.h				\
-	gdkdrawingcontextprivate.h		\
-	gdkframeclockidle.h			\
-	gdkframeclockprivate.h			\
-	gdkglcontextprivate.h			\
-	gdkmonitorprivate.h			\
-	gdkprofilerprivate.h			\
-	gdkscreenprivate.h			\
-	gdkseatprivate.h			\
-	gdkseatdefaultprivate.h			\
-	gdkinternals.h				\
-	gdkintl.h				\
-	gdkkeysprivate.h			\
-	gdkvisualprivate.h			\
-	gdkx.h
-
-deprecated_c_sources =				\
-	deprecated/gdkcolor.c
-
-gdk_c_sources = 				\
-	$(deprecated_c_sources)			\
-	gdk-private.c				\
-	gdk.c					\
-	gdkapplaunchcontext.c			\
-	gdkcairo.c				\
-	gdkcursor.c				\
-	gdkdeprecated.c				\
-	gdkdevice.c				\
-	gdkdevicepad.c				\
-	gdkdevicetool.c				\
-	gdkdevicemanager.c			\
-	gdkdisplay.c				\
-	gdkdisplaymanager.c			\
-	gdkdnd.c				\
-	gdkdrawingcontext.c			\
-	gdkevents.c     			\
-	gdkframetimings.c			\
-	gdkgl.c					\
-	gdkglcontext.c				\
-	gdkglobals.c				\
-	gdkkeys.c				\
-	gdkkeyuni.c				\
-	gdkmonitor.c				\
-	gdkoffscreenwindow.c			\
-	gdkframeclock.c				\
-	gdkframeclockidle.c			\
-	gdkpango.c				\
-	gdkpixbuf-drawable.c			\
-	gdkprofiler.c				\
-	gdkproperty.c				\
-	gdkrectangle.c				\
-	gdkrgba.c				\
-	gdkscreen.c				\
-	gdkseat.c				\
-	gdkseatdefault.c			\
-	gdkselection.c				\
-	gdkvisual.c				\
-	gdkwindow.c				\
-	gdkwindowimpl.c
-
-gdk_built_sources = 				\
-	gdkenumtypes.h				\
-	gdkenumtypes.c				\
-	gdkmarshalers.h 			\
-	gdkmarshalers.c				\
-	gdkresources.h				\
-	gdkresources.c				\
-	gdkversionmacros.h
-
 #
 # setup GDK sources and their dependencies
 #
@@ -217,57 +129,6 @@ if OS_WIN32
 Gdk_3_0_gir_CFLAGS += -I$(srcdir)/win32 -I$(srcdir)
 endif
 if USE_X11
-x11_introspection_files = 		\
-	x11/gdkapplaunchcontext-x11.c	\
-	x11/gdkasync.c			\
-	x11/gdkcursor-x11.c		\
-	x11/gdkdevice-core-x11.c	\
-	x11/gdkdevicemanager-core-x11.c	\
-	x11/gdkdevicemanager-x11.c	\
-	x11/gdkdevicemanager-xi2.c	\
-	x11/gdkdevice-xi2.c		\
-	x11/gdkdisplay-x11.c		\
-	x11/gdkdisplaymanager-x11.c	\
-	x11/gdkdnd-x11.c		\
-	x11/gdkeventsource.c		\
-	x11/gdkeventtranslator.c	\
-	x11/gdkgeometry-x11.c		\
-	x11/gdkglcontext-x11.c		\
-	x11/gdkkeys-x11.c		\
-	x11/gdkmain-x11.c		\
-	x11/gdkmonitor-x11.c		\
-	x11/gdkproperty-x11.c		\
-	x11/gdkscreen-x11.c		\
-	x11/gdkselection-x11.c		\
-	x11/gdksettings.c		\
-	x11/gdktestutils-x11.c		\
-	x11/gdkvisual-x11.c		\
-	x11/gdkwindow-x11.c		\
-	x11/gdkxftdefaults.c		\
-	x11/gdkxid.c			\
-	x11/xsettings-client.c		\
-	x11/gdkx.h			\
-	x11/gdkx11applaunchcontext.h	\
-	x11/gdkx11cursor.h		\
-	x11/gdkx11device.h		\
-	x11/gdkx11device-core.h		\
-	x11/gdkx11device-xi2.h		\
-	x11/gdkx11devicemanager.h	\
-	x11/gdkx11devicemanager-core.h	\
-	x11/gdkx11devicemanager-xi2.h	\
-	x11/gdkx11display.h		\
-	x11/gdkx11displaymanager.h	\
-	x11/gdkx11dnd.h			\
-	x11/gdkx11glcontext.h		\
-	x11/gdkx11keys.h		\
-	x11/gdkx11monitor.h		\
-	x11/gdkx11property.h		\
-	x11/gdkx11screen.h		\
-	x11/gdkx11selection.h		\
-	x11/gdkx11utils.h		\
-	x11/gdkx11visual.h		\
-	x11/gdkx11window.h
-
 GdkX11-3.0.gir: libgdk-3.la Gdk-3.0.gir Makefile
 GdkX11_3_0_gir_SCANNERFLAGS = 		\
 	--identifier-prefix=Gdk		\
@@ -282,36 +143,6 @@ INTROSPECTION_GIRS += GdkX11-3.0.gir
 
 endif # USE_X11
 
-w32_introspection_files =		\
-	win32/gdkcursor-win32.c		\
-	win32/gdkdevicemanager-win32.c	\
-	win32/gdkdevice-virtual.c	\
-	win32/gdkdevice-win32.c		\
-	win32/gdkdevice-wintab.c	\
-	win32/gdkdisplaymanager-win32.c	\
-	win32/gdkdisplay-win32.c	\
-	win32/gdkdnd-win32.c		\
-	win32/gdkevents-win32.c		\
-	win32/gdkgeometry-win32.c	\
-	win32/gdkglobals-win32.c	\
-	win32/gdkkeys-win32.c		\
-	win32/gdkmain-win32.c		\
-	win32/gdkproperty-win32.c	\
-	win32/gdkscreen-win32.c		\
-	win32/gdkselection-win32.c	\
-	win32/gdktestutils-win32.c	\
-	win32/gdkwin32.h		\
-	win32/gdkwin32cursor.h		\
-	win32/gdkwin32display.h		\
-	win32/gdkwin32displaymanager.h	\
-	win32/gdkwin32dnd.h		\
-	win32/gdkwin32id.c		\
-	win32/gdkwin32keys.h		\
-	win32/gdkwin32misc.h		\
-	win32/gdkwin32screen.h		\
-	win32/gdkwin32window.h		\
-	win32/gdkwindow-win32.c
-
 if OS_WIN32
 GdkWin32-3.0.gir: libgdk-3.la Gdk-3.0.gir Makefile
 GdkWin32_3_0_gir_SCANNERFLAGS = \
@@ -372,7 +203,6 @@ lib_LTLIBRARIES = libgdk-3.la
 
 MAINTAINERCLEANFILES = $(gdk_built_sources) stamp-gdkenumtypes.h
 EXTRA_DIST += \
-	$(gdk_built_sources)	\
 	fallback-c89.c
 
 install-exec-hook:
@@ -459,59 +289,11 @@ MSVCPROJS = gdk-3
 
 gdk_3_FILES = $(gdk_c_sources)
 gdk_3_EXCLUDES = dummy
-gdk_3_HEADERS_DIR = $(gdkincludedir)
-
-gdk_3_HEADERS_INST = \
-	$(gdkinclude_HEADERS)		\
-	$(deprecatedinclude_HEADERS)
-
-gdk_3_HEADERS_EXCLUDES = dummy
 
 include $(top_srcdir)/win32/Makefile.msvcproj
 
-if HAVE_INTROSPECTION
-# Introspection Items for MSVC
-MSVC_INTROSPECT_GIRS = Gdk-3.0.gir GdkWin32-3.0.gir
-
-BASE_MSVC_GIR_CFLAGS =			\
-	$(GDK_CFLAGS_DEFINES)		\
-	-I'./vs$$$$(VSVER)/$$$$(CFG)/$$$$(PLAT)/obj/gdk-3' -I..	\
-	-I'./vs$$$$(VSVER)/$$$$(CFG)/$$$$(PLAT)/obj/gdk-3/gdk' -I../gdk	\
-	-I../gdk/win32
-
-INTROSPECTION_INTERMEDIATE_ITEMS = \
-	$(top_builddir)/win32/Gdk-3.0.gir.msvc.introspect	\
-	$(top_builddir)/win32/Gdk_3_0_gir_list			\
-	$(top_builddir)/win32/GdkWin32-3.0.gir.msvc.introspect	\
-	$(top_builddir)/win32/GdkWin32_3_0_gir_list
-
-Gdk_3_0_gir_MSVC_FILES = $(filter-out gdkkeysyms-compat.h, $(gdk_h_sources))	\
-	$(gdk_c_sources)	\
-Gdk_3_0_gir_MSVC_EXPORT_PACKAGES = $(Gdk_3_0_gir_EXPORT_PACKAGES)
-Gdk_3_0_gir_MSVC_INCLUDE_GIRS = $(Gdk_3_0_gir_INCLUDES)
-Gdk_3_0_gir_MSVC_LIBS = gdk-3.0
-Gdk_3_0_gir_MSVC_CFLAGS = $(BASE_MSVC_GIR_CFLAGS)
-Gdk_3_0_gir_MSVC_SCANNERFLAGS = $(Gdk_3_0_gir_SCANNERFLAGS)
-
-GdkWin32_3_0_gir_MSVC_FILES = $(w32_introspection_files)
-GdkWin32_3_0_gir_MSVC_INCLUDE_GIRS = $(GdkWin32_3_0_gir_INCLUDES)
-GdkWin32_3_0_gir_MSVC_LIBS = $(Gdk_3_0_gir_MSVC_LIBS)
-GdkWin32_3_0_gir_MSVC_CFLAGS = $(BASE_MSVC_GIR_CFLAGS)
-GdkWin32_3_0_gir_MSVC_SCANNERFLAGS =	\
-	--identifier-prefix=Gdk		\
-	--c-include="gdk/gdkwin32.h"	\
-	--include-uninstalled='./vs$$$$(VSVER)/$$$$(CFG)/$$$$(PLAT)/bin/Gdk-3.0.gir'
-
-include $(top_srcdir)/win32/Makefile.msvc-introspection
-
-else
-INTROSPECTION_INTERMEDIATE_ITEMS =
-endif
-
 dist-hook: \
-	$(top_builddir)/win32/vs9/gdk-3.vcproj	\
-	$(top_builddir)/win32/vs9/gdk-3.headers	\
-	$(INTROSPECTION_INTERMEDIATE_ITEMS)
+	$(top_builddir)/win32/vs9/gdk-3.vcproj
 
 DISTCLEANFILES = gdkconfig.h stamp-gc-h
 
diff --git a/gdk/broadway/Makefile.am b/gdk/broadway/Makefile.am
index a43a577686..3b518700dc 100644
--- a/gdk/broadway/Makefile.am
+++ b/gdk/broadway/Makefile.am
@@ -1,5 +1,6 @@
 ## Process this file with automake to produce Makefile.in
 include $(top_srcdir)/Makefile.decl
+include gdk-broadway-sources.inc
 NULL =
 
 libgdkincludedir = $(includedir)/gtk-3.0/gdk
@@ -23,15 +24,7 @@ noinst_LTLIBRARIES = libgdk-broadway.la
 
 bin_PROGRAMS = broadwayd
 
-libgdkinclude_HEADERS = 	\
-	gdkbroadway.h
-
-libgdkbroadwayinclude_HEADERS = 	\
-	gdkbroadwaydisplay.h		\
-	gdkbroadwaywindow.h		\
-	gdkbroadwaycursor.h		\
-	gdkbroadwaymonitor.h		\
-	gdkbroadwayvisual.h
+libgdkinclude_HEADERS = $(GDK_PUBLIC_H_SRCS_BROADWAY)
 
 EXTRA_DIST += toarray.pl
 
@@ -46,40 +39,12 @@ broadwayjs.h: broadway.js rawinflate.min.js
 EXTRA_DIST += broadway.js rawinflate.min.js
 
 # built headers that don't get installed
-broadway_built_private_headers =	\
-	clienthtml.h			\
-	broadwayjs.h
-
 broadway_built_sources =		\
 	${broadway_built_private_headers}
 
 libgdk_broadway_la_SOURCES =		\
 	${broadway_built_private_headers}\
-	gdkcursor-broadway.c	\
-	gdkdevice-broadway.h	\
-	gdkdevice-broadway.c	\
-	gdkdevicemanager-broadway.h \
-	gdkdevicemanager-broadway.c \
-	gdkdisplay-broadway.c	\
-	gdkdisplay-broadway.h	\
-	gdkdnd-broadway.c	\
-	gdkeventsource.c	\
-	gdkeventsource.h	\
-	gdkglobals-broadway.c	\
-	gdkkeys-broadway.c	\
-	gdkmonitor-broadway.c	\
-	gdkmonitor-broadway.h	\
-	gdkproperty-broadway.c	\
-	gdkscreen-broadway.c	\
-	gdkscreen-broadway.h	\
-	gdkselection-broadway.c	\
-	gdktestutils-broadway.c	\
-	gdkvisual-broadway.c	\
-	gdkwindow-broadway.c	\
-	gdkwindow-broadway.h	\
-	gdkprivate-broadway.h   \
-	gdkbroadway-server.h	\
-	gdkbroadway-server.c
+	$(GDK_BROADWAY_NON_GENERATED_SOURCES)
 
 if OS_UNIX
 libgdk_broadway_la_LIBADD = \
@@ -87,16 +52,6 @@ libgdk_broadway_la_LIBADD = \
 	$(NULL)
 endif
 
-broadwayd_SOURCES = \
-	broadway-protocol.h		\
-	broadwayd.c 			\
-	broadway-server.h		\
-	broadway-server.c		\
-	broadway-buffer.c		\
-	broadway-buffer.h		\
-	broadway-output.h		\
-	broadway-output.c
-
 if OS_WIN32
 broadwayd_LDADD = $(GDK_DEP_LIBS) -lws2_32
 else
@@ -117,11 +72,6 @@ MSVCPROJS = gdk3-broadway broadwayd
 
 gdk3_broadway_FILES = $(libgdk_broadway_la_SOURCES)
 gdk3_broadway_EXCLUDES = dummy
-gdk3_broadway_HEADERS_DIR = $(libgdkbroadwayincludedir)
-
-gdk3_broadway_HEADERS_INST = $(libgdkbroadwayinclude_HEADERS)
-
-gdk3_broadway_HEADERS_EXCLUDES = dummy
 
 broadwayd_FILES = $(broadwayd_SOURCES)
 broadwayd_EXCLUDES = dummy
@@ -130,7 +80,6 @@ include $(top_srcdir)/win32/Makefile.msvcproj
 
 dist-hook: \
 	$(top_builddir)/win32/vs9/gdk3-broadway.vcproj		\
-	$(top_builddir)/win32/vs9/broadwayd.vcproj		\
-	$(top_builddir)/win32/vs9/gdk3-broadway.headers
+	$(top_builddir)/win32/vs9/broadwayd.vcproj
 
 -include $(top_srcdir)/git.mk
diff --git a/gdk/broadway/gdk-broadway-sources.inc b/gdk/broadway/gdk-broadway-sources.inc
new file mode 100644
index 0000000000..dd047f9a7d
--- /dev/null
+++ b/gdk/broadway/gdk-broadway-sources.inc
@@ -0,0 +1,55 @@
+# Public header list for GdkBroadway
+
+GDK_PUBLIC_H_SRCS_BROADWAY =		\
+	gdkbroadway.h
+
+libgdkbroadwayinclude_HEADERS = 	\
+	gdkbroadwaydisplay.h		\
+	gdkbroadwaywindow.h		\
+	gdkbroadwaycursor.h		\
+	gdkbroadwaymonitor.h		\
+	gdkbroadwayvisual.h
+
+# built headers that don't get installed
+
+broadway_built_private_headers =	\
+	clienthtml.h			\
+	broadwayjs.h
+
+# Other non-generated sources
+GDK_BROADWAY_NON_GENERATED_SOURCES =	\
+	gdkcursor-broadway.c	\
+	gdkdevice-broadway.h	\
+	gdkdevice-broadway.c	\
+	gdkdevicemanager-broadway.h \
+	gdkdevicemanager-broadway.c \
+	gdkdisplay-broadway.c	\
+	gdkdisplay-broadway.h	\
+	gdkdnd-broadway.c	\
+	gdkeventsource.c	\
+	gdkeventsource.h	\
+	gdkglobals-broadway.c	\
+	gdkkeys-broadway.c	\
+	gdkmonitor-broadway.c	\
+	gdkmonitor-broadway.h	\
+	gdkproperty-broadway.c	\
+	gdkscreen-broadway.c	\
+	gdkscreen-broadway.h	\
+	gdkselection-broadway.c	\
+	gdktestutils-broadway.c	\
+	gdkvisual-broadway.c	\
+	gdkwindow-broadway.c	\
+	gdkwindow-broadway.h	\
+	gdkprivate-broadway.h   \
+	gdkbroadway-server.h	\
+	gdkbroadway-server.c
+
+broadwayd_SOURCES = \
+	broadway-protocol.h		\
+	broadwayd.c 			\
+	broadway-server.h		\
+	broadway-server.c		\
+	broadway-buffer.c		\
+	broadway-buffer.h		\
+	broadway-output.h		\
+	broadway-output.c
diff --git a/gdk/gdk-pub-headers.mak b/gdk/gdk-pub-headers.mak
deleted file mode 100644
index e84c5d0fc3..0000000000
--- a/gdk/gdk-pub-headers.mak
+++ /dev/null
@@ -1,44 +0,0 @@
-#
-# GDK header files for public installation (non-generated)
-#
-#
-gdk_public_h_sources = 				\
-	gdk.h					\
-	gdk-autocleanup.h			\
-	gdkapplaunchcontext.h			\
-	gdkcairo.h				\
-	gdkcursor.h				\
-	gdkdevice.h				\
-	gdkdevicepad.h				\
-	gdkdevicetool.h				\
-	gdkdevicemanager.h			\
-	gdkdisplay.h				\
-	gdkdisplaymanager.h			\
-	gdkdnd.h				\
-	gdkdrawingcontext.h			\
-	gdkevents.h				\
-	gdkframetimings.h			\
-	gdkglcontext.h				\
-	gdkkeys.h				\
-	gdkkeysyms.h				\
-	gdkkeysyms-compat.h			\
-	gdkmain.h				\
-	gdkmonitor.h				\
-	gdkpango.h				\
-	gdkframeclock.h				\
-	gdkpixbuf.h				\
-	gdkprivate.h				\
-	gdkproperty.h				\
-	gdkrectangle.h				\
-	gdkrgba.h				\
-	gdkscreen.h				\
-	gdkseat.h				\
-	gdkselection.h				\
-	gdktestutils.h				\
-	gdkthreads.h				\
-	gdktypes.h				\
-	gdkvisual.h				\
-	gdkwindow.h
-
-gdk_deprecated_h_sources =				\
-	deprecated/gdkcolor.h
diff --git a/gdk/gdk-sources.inc b/gdk/gdk-sources.inc
new file mode 100644
index 0000000000..9235edb6cf
--- /dev/null
+++ b/gdk/gdk-sources.inc
@@ -0,0 +1,213 @@
+#
+# GDK header files for public installation (non-generated)
+#
+
+#
+# setup source file variables
+#
+
+gdk_public_h_sources = 				\
+	gdk.h					\
+	gdk-autocleanup.h			\
+	gdkapplaunchcontext.h			\
+	gdkcairo.h				\
+	gdkcursor.h				\
+	gdkdevice.h				\
+	gdkdevicepad.h				\
+	gdkdevicetool.h				\
+	gdkdevicemanager.h			\
+	gdkdisplay.h				\
+	gdkdisplaymanager.h			\
+	gdkdnd.h				\
+	gdkdrawingcontext.h			\
+	gdkevents.h				\
+	gdkframetimings.h			\
+	gdkglcontext.h				\
+	gdkkeys.h				\
+	gdkkeysyms.h				\
+	gdkkeysyms-compat.h			\
+	gdkmain.h				\
+	gdkmonitor.h				\
+	gdkpango.h				\
+	gdkframeclock.h				\
+	gdkpixbuf.h				\
+	gdkprivate.h				\
+	gdkproperty.h				\
+	gdkrectangle.h				\
+	gdkrgba.h				\
+	gdkscreen.h				\
+	gdkseat.h				\
+	gdkselection.h				\
+	gdktestutils.h				\
+	gdkthreads.h				\
+	gdktypes.h				\
+	gdkvisual.h				\
+	gdkwindow.h
+
+gdk_deprecated_h_sources =				\
+	deprecated/gdkcolor.h
+
+gdk_h_sources =					\
+	$(gdk_public_h_sources)			\
+	$(gdk_deprecated_h_sources)
+
+gdk_private_headers = 				\
+	gdk-private.h				\
+	gdkapplaunchcontextprivate.h		\
+	gdkconstructor.h		\
+	gdkcursorprivate.h			\
+	gdkdevicemanagerprivate.h		\
+	gdkdeviceprivate.h			\
+	gdkdevicepadprivate.h			\
+	gdkdevicetoolprivate.h			\
+	gdkdisplaymanagerprivate.h		\
+	gdkdisplayprivate.h			\
+	gdkdndprivate.h				\
+	gdkdrawingcontextprivate.h		\
+	gdkframeclockidle.h			\
+	gdkframeclockprivate.h			\
+	gdkglcontextprivate.h			\
+	gdkmonitorprivate.h			\
+	gdkprofilerprivate.h			\
+	gdkscreenprivate.h			\
+	gdkseatprivate.h			\
+	gdkseatdefaultprivate.h			\
+	gdkinternals.h				\
+	gdkintl.h				\
+	gdkkeysprivate.h			\
+	gdkvisualprivate.h			\
+	gdkx.h
+
+gdk_deprecated_c_sources =				\
+	deprecated/gdkcolor.c
+
+gdk_c_sources = 				\
+	$(gdk_deprecated_c_sources)			\
+	gdk-private.c				\
+	gdk.c					\
+	gdkapplaunchcontext.c			\
+	gdkcairo.c				\
+	gdkcursor.c				\
+	gdkdeprecated.c				\
+	gdkdevice.c				\
+	gdkdevicepad.c				\
+	gdkdevicetool.c				\
+	gdkdevicemanager.c			\
+	gdkdisplay.c				\
+	gdkdisplaymanager.c			\
+	gdkdnd.c				\
+	gdkdrawingcontext.c			\
+	gdkevents.c     			\
+	gdkframetimings.c			\
+	gdkgl.c					\
+	gdkglcontext.c				\
+	gdkglobals.c				\
+	gdkkeys.c				\
+	gdkkeyuni.c				\
+	gdkmonitor.c				\
+	gdkoffscreenwindow.c			\
+	gdkframeclock.c				\
+	gdkframeclockidle.c			\
+	gdkpango.c				\
+	gdkpixbuf-drawable.c			\
+	gdkprofiler.c				\
+	gdkproperty.c				\
+	gdkrectangle.c				\
+	gdkrgba.c				\
+	gdkscreen.c				\
+	gdkseat.c				\
+	gdkseatdefault.c			\
+	gdkselection.c				\
+	gdkvisual.c				\
+	gdkwindow.c				\
+	gdkwindowimpl.c
+
+gdk_built_sources = 				\
+	gdkenumtypes.h				\
+	gdkenumtypes.c				\
+	gdkmarshalers.h 			\
+	gdkmarshalers.c				\
+	gdkresources.h				\
+	gdkresources.c				\
+	gdkversionmacros.h
+
+x11_introspection_files = 		\
+	x11/gdkapplaunchcontext-x11.c	\
+	x11/gdkasync.c			\
+	x11/gdkcursor-x11.c		\
+	x11/gdkdevice-core-x11.c	\
+	x11/gdkdevicemanager-core-x11.c	\
+	x11/gdkdevicemanager-x11.c	\
+	x11/gdkdevicemanager-xi2.c	\
+	x11/gdkdevice-xi2.c		\
+	x11/gdkdisplay-x11.c		\
+	x11/gdkdisplaymanager-x11.c	\
+	x11/gdkdnd-x11.c		\
+	x11/gdkeventsource.c		\
+	x11/gdkeventtranslator.c	\
+	x11/gdkgeometry-x11.c		\
+	x11/gdkglcontext-x11.c		\
+	x11/gdkkeys-x11.c		\
+	x11/gdkmain-x11.c		\
+	x11/gdkmonitor-x11.c		\
+	x11/gdkproperty-x11.c		\
+	x11/gdkscreen-x11.c		\
+	x11/gdkselection-x11.c		\
+	x11/gdksettings.c		\
+	x11/gdktestutils-x11.c		\
+	x11/gdkvisual-x11.c		\
+	x11/gdkwindow-x11.c		\
+	x11/gdkxftdefaults.c		\
+	x11/gdkxid.c			\
+	x11/xsettings-client.c		\
+	x11/gdkx.h			\
+	x11/gdkx11applaunchcontext.h	\
+	x11/gdkx11cursor.h		\
+	x11/gdkx11device.h		\
+	x11/gdkx11device-core.h		\
+	x11/gdkx11device-xi2.h		\
+	x11/gdkx11devicemanager.h	\
+	x11/gdkx11devicemanager-core.h	\
+	x11/gdkx11devicemanager-xi2.h	\
+	x11/gdkx11display.h		\
+	x11/gdkx11displaymanager.h	\
+	x11/gdkx11dnd.h			\
+	x11/gdkx11glcontext.h		\
+	x11/gdkx11keys.h		\
+	x11/gdkx11monitor.h		\
+	x11/gdkx11property.h		\
+	x11/gdkx11screen.h		\
+	x11/gdkx11selection.h		\
+	x11/gdkx11utils.h		\
+	x11/gdkx11visual.h		\
+	x11/gdkx11window.h
+
+w32_introspection_files =		\
+	win32/gdkcursor-win32.c		\
+	win32/gdkdevicemanager-win32.c	\
+	win32/gdkdevice-virtual.c	\
+	win32/gdkdevice-win32.c		\
+	win32/gdkdevice-wintab.c	\
+	win32/gdkdisplaymanager-win32.c	\
+	win32/gdkdisplay-win32.c	\
+	win32/gdkdnd-win32.c		\
+	win32/gdkevents-win32.c		\
+	win32/gdkgeometry-win32.c	\
+	win32/gdkglobals-win32.c	\
+	win32/gdkkeys-win32.c		\
+	win32/gdkmain-win32.c		\
+	win32/gdkproperty-win32.c	\
+	win32/gdkscreen-win32.c		\
+	win32/gdkselection-win32.c	\
+	win32/gdktestutils-win32.c	\
+	win32/gdkwin32.h		\
+	win32/gdkwin32cursor.h		\
+	win32/gdkwin32display.h		\
+	win32/gdkwin32displaymanager.h	\
+	win32/gdkwin32dnd.h		\
+	win32/gdkwin32id.c		\
+	win32/gdkwin32keys.h		\
+	win32/gdkwin32misc.h		\
+	win32/gdkwin32screen.h		\
+	win32/gdkwin32window.h		\
+	win32/gdkwindow-win32.c
diff --git a/gdk/quartz/GdkQuartzView.c b/gdk/quartz/GdkQuartzView.c
index c20c5de83a..f7ac47dcc0 100644
--- a/gdk/quartz/GdkQuartzView.c
+++ b/gdk/quartz/GdkQuartzView.c
@@ -24,16 +24,34 @@
 #include "gdkprivate-quartz.h"
 #include "gdkquartz.h"
 #include "gdkinternal-quartz.h"
+#include <cairo/cairo-quartz.h>
+#import <AppKit/AppKit.h>
+#import <IOSurface/IOSurface.h>
 
 @implementation GdkQuartzView
 
+
+
 -(id)initWithFrame: (NSRect)frameRect
 {
   if ((self = [super initWithFrame: frameRect]))
     {
+      CVReturn rv;
+      pb_props = @{
+        (id)kCVPixelBufferIOSurfaceCoreAnimationCompatibilityKey: @1,
+        (id)kCVPixelBufferBytesPerRowAlignmentKey: @64,
+      };
+      [pb_props retain];
+      cfpb_props  = (__bridge CFDictionaryRef)pb_props;
+
       markedRange = NSMakeRange (NSNotFound, 0);
       selectedRange = NSMakeRange (0, 0);
+      rv = CVPixelBufferCreate (NULL, frameRect.size.width,
+                                frameRect.size.height,
+                                kCVPixelFormatType_32ARGB,
+                                cfpb_props, &pixels);
     }
+
   [self setValue: @(YES) forKey: @"postsFrameChangedNotifications"];
 
   return self;
@@ -185,7 +203,7 @@
 
 -(void)doCommandBySelector: (SEL)aSelector
 {
-  GDK_NOTE (EVENTS, g_message ("doCommandBySelector %s", aSelector));
+     GDK_NOTE (EVENTS, g_message ("doCommandBySelector %s", [NSStringFromSelector (aSelector) UTF8String]));
   g_object_set_data (G_OBJECT (gdk_window), GIC_FILTER_KEY,
                      GUINT_TO_POINTER (GIC_FILTER_PASSTHRU));
 }
@@ -256,6 +274,12 @@
       trackingRect = 0;
     }
 
+  if (pixels)
+    {
+      CVPixelBufferRelease (pixels);
+    }
+
+  [pb_props release];
   [super dealloc];
 }
 
@@ -276,7 +300,7 @@
 
 -(BOOL)isFlipped
 {
-  return YES;
+  return NO;
 }
 
 -(BOOL)isOpaque
@@ -298,7 +322,7 @@
    */
   if(gdk_quartz_osx_version() >= GDK_OSX_BIGSUR)
   {
-#if MAC_OS_X_VERSION_MIN_REQUIRED >= 101200
+#if MAC_OS_X_VERSION_MIN_REQUIRED >= 101100
     CALayer* layer = self.layer;
     layer.contentsFormat = kCAContentsFormatRGBA8Uint;
 #endif
@@ -307,74 +331,128 @@
   [super viewWillDraw];
 }
 
--(void)drawRect: (NSRect)rect
+-(BOOL)wantsUpdateLayer
 {
-  GdkRectangle gdk_rect;
-  GdkWindowImplQuartz *impl = GDK_WINDOW_IMPL_QUARTZ (gdk_window->impl);
-  const NSRect *drawn_rects;
-  NSInteger count;
-  int i;
-  cairo_region_t *region;
+     return YES;
+}
 
-  if (GDK_WINDOW_DESTROYED (gdk_window))
-    return;
+static void
+nsrect_from_cairo_rect (NSRect *nsrect, cairo_rectangle_int_t *rect)
+{
+  nsrect->origin.x = (CGFloat)rect->x;
+  nsrect->origin.y = (CGFloat)rect->y;
+  nsrect->size.width = (CGFloat)rect->width;
+  nsrect->size.height = (CGFloat)rect->height;
+}
 
-  if (! (gdk_window->event_mask & GDK_EXPOSURE_MASK))
-    return;
+static void
+cairo_rect_from_nsrect (cairo_rectangle_int_t *rect, NSRect *nsrect)
+{
+  rect->x = (int)nsrect->origin.x;
+  rect->y = (int)nsrect->origin.y;
+  rect->width = (int)nsrect->size.width;
+  rect->height = (int)nsrect->size.height;
+}
 
-  if (NSEqualRects (rect, NSZeroRect))
-    return;
+static cairo_status_t
+copy_rectangle_argb32 (cairo_surface_t *dest, cairo_surface_t *source,
+                       cairo_rectangle_int_t *rect)
+{
+  cairo_surface_t *source_img, *dest_img;
+  cairo_status_t status;
+  cairo_format_t format;
+  int height, width, stride;
 
-  if (!GDK_WINDOW_IS_MAPPED (gdk_window))
-    {
-      /* If the window is not yet mapped, clip_region_with_children
-       * will be empty causing the usual code below to draw nothing.
-       * To not see garbage on the screen, we draw an aesthetic color
-       * here. The garbage would be visible if any widget enabled
-       * the NSView's CALayer in order to add sublayers for custom
-       * native rendering.
-       */
-      [NSGraphicsContext saveGraphicsState];
+  source_img = cairo_surface_map_to_image (source, rect);
+  status = cairo_surface_status (source_img);
 
-      [[NSColor windowBackgroundColor] setFill];
-      [NSBezierPath fillRect: rect];
+  if (status)
+    {
+      g_warning ("Failed to map source image surface, %d %d %d %d on %d %d: %s\n",
+                 rect->x, rect->y, rect->width, rect->height,
+                 cairo_image_surface_get_width (source),
+                 cairo_image_surface_get_height (source),
+                 cairo_status_to_string (status));
+       return status;
+    }
 
-      [NSGraphicsContext restoreGraphicsState];
+  format = cairo_image_surface_get_format (source_img);
+  dest_img = cairo_surface_map_to_image (dest, rect);
+  status = cairo_surface_status (dest_img);
 
-      return;
+  if (status)
+    {
+      g_warning ("Failed to map destination image surface, %d %d %d %d on %d %d: %s\n",
+                 rect->x, rect->y, rect->width, rect->height,
+                 cairo_image_surface_get_width (source),
+                 cairo_image_surface_get_height (source),
+                 cairo_status_to_string (status));
+       goto CLEANUP;
     }
 
-  /* Clear our own bookkeeping of regions that need display */
+  width = cairo_image_surface_get_width (source_img);
+  stride = cairo_format_stride_for_width (format, width);
+  height = cairo_image_surface_get_height (source_img);
+  memcpy (cairo_image_surface_get_data (dest_img),
+          cairo_image_surface_get_data (source_img),
+          stride * height);
+  cairo_surface_unmap_image (dest, dest_img);
+
+ CLEANUP:
+  cairo_surface_unmap_image (source, source_img);
+  return status;
+}
+
+-(void)updateLayer
+{
+  GdkWindowImplQuartz *impl = GDK_WINDOW_IMPL_QUARTZ (gdk_window->impl);
+  CGRect layer_bounds = [self.layer bounds];
+  CGRect backing_bounds = [self convertRectToBacking: layer_bounds];
+  cairo_rectangle_int_t extents;
+  cairo_surface_t *cvpb_surface;
+
+  if (GDK_WINDOW_DESTROYED (gdk_window))
+    return;
+
+  ++impl->in_paint_rect_count;
+  CVPixelBufferLockBaseAddress (pixels, 0);
+  cvpb_surface =
+    cairo_image_surface_create_for_data (CVPixelBufferGetBaseAddress (pixels),
+                                         CAIRO_FORMAT_ARGB32,
+                                         (int)CVPixelBufferGetWidth (pixels),
+                                         (int)CVPixelBufferGetHeight (pixels),
+                                         (int)CVPixelBufferGetBytesPerRow (pixels));
+
+  cairo_rect_from_nsrect (&extents, &backing_bounds);
   if (impl->needs_display_region)
     {
-      cairo_region_destroy (impl->needs_display_region);
+      cairo_region_t *region = impl->needs_display_region;
+      _gdk_window_process_updates_recurse (gdk_window, region);
+      cairo_region_destroy (region);
       impl->needs_display_region = NULL;
     }
-
-  [self getRectsBeingDrawn: &drawn_rects count: &count];
-  region = cairo_region_create ();
-
-  for (i = 0; i < count; i++)
+  else
     {
-      gdk_rect.x = drawn_rects[i].origin.x;
-      gdk_rect.y = drawn_rects[i].origin.y;
-      gdk_rect.width = drawn_rects[i].size.width;
-      gdk_rect.height = drawn_rects[i].size.height;
+      cairo_rectangle_int_t bounds;
+      cairo_region_t *region;
 
-      cairo_region_union_rectangle (region, &gdk_rect);
+      cairo_rect_from_nsrect (&bounds, &layer_bounds);
+      region = cairo_region_create_rectangle (&bounds);
+      _gdk_window_process_updates_recurse (gdk_window, region);
+      cairo_region_destroy (region);
     }
+  
+  if (!impl || !impl->cairo_surface)
+    return;
 
-  impl->in_paint_rect_count++;
-  _gdk_window_process_updates_recurse (gdk_window, region);
-  impl->in_paint_rect_count--;
-
-  cairo_region_destroy (region);
+  copy_rectangle_argb32 (cvpb_surface, impl->cairo_surface, &extents);
 
-  if (needsInvalidateShadow)
-    {
-      [[self window] invalidateShadow];
-      needsInvalidateShadow = NO;
-    }
+  cairo_surface_destroy (cvpb_surface);
+  _gdk_quartz_unref_cairo_surface (gdk_window);
+  CVPixelBufferUnlockBaseAddress (pixels, 0);
+  --impl->in_paint_rect_count;
+  self.layer.contents = NULL;
+  self.layer.contents = (id)CVPixelBufferGetIOSurface (pixels);
 }
 
 -(void)setNeedsInvalidateShadow: (BOOL)invalidate
@@ -432,9 +510,21 @@
 
 -(void)setFrame: (NSRect)frame
 {
+  CVReturn rv;
+  NSRect rect = self.layer ? self.layer.bounds : frame;
+  NSRect backing_rect = [self convertRectToBacking: rect];
+
   if (GDK_WINDOW_DESTROYED (gdk_window))
     return;
 
+  CVPixelBufferRelease (pixels);
+  rv = CVPixelBufferCreate (NULL, backing_rect.size.width,
+                            backing_rect.size.height,
+                            kCVPixelFormatType_32BGRA,
+                            cfpb_props, &pixels);
+
+  //Force a new cairo_surface for drawing
+  _gdk_quartz_unref_cairo_surface (gdk_window);
   [super setFrame: frame];
 
   if ([self window])
diff --git a/gdk/quartz/GdkQuartzView.h b/gdk/quartz/GdkQuartzView.h
index da06a8bdce..0c1558a7ec 100644
--- a/gdk/quartz/GdkQuartzView.h
+++ b/gdk/quartz/GdkQuartzView.h
@@ -17,6 +17,7 @@
  */
 
 #import <AppKit/AppKit.h>
+#import <CoreVideo/CoreVideo.h>
 #include "gdk/gdk.h"
 
 /* Text Input Client */
@@ -40,6 +41,9 @@
   BOOL needsInvalidateShadow;
   NSRange markedRange;
   NSRange selectedRange;
+  CVPixelBufferRef pixels;
+  NSDictionary *pb_props;
+  CFDictionaryRef cfpb_props;
 }
 
 - (void)setGdkWindow: (GdkWindow *)window;
diff --git a/gdk/quartz/Makefile.am b/gdk/quartz/Makefile.am
index 4782c5aab6..bbe74c57eb 100644
--- a/gdk/quartz/Makefile.am
+++ b/gdk/quartz/Makefile.am
@@ -30,6 +30,8 @@ libgdk_quartz_la_SOURCES =    	\
 	gdkdevicemanager-core-quartz.h	\
 	gdkdisplay-quartz.c	\
 	gdkdisplay-quartz.h	\
+	gdkdisplaylinksource.c	\
+	gdkdisplaylinksource.h	\
 	gdkdisplaymanager-quartz.c	\
 	gdkdnd-quartz.c		\
 	gdkdnd-quartz.h		\
diff --git a/gdk/quartz/gdkdevice-core-quartz.c b/gdk/quartz/gdkdevice-core-quartz.c
index a8fd34f224..4fd2ae940c 100644
--- a/gdk/quartz/gdkdevice-core-quartz.c
+++ b/gdk/quartz/gdkdevice-core-quartz.c
@@ -228,11 +228,9 @@ gdk_quartz_device_core_query_state_helper (GdkWindow       *window,
     }
   else
     {
-      GdkWindowImplQuartz *impl;
       NSWindow *nswindow;
 
-      impl = GDK_WINDOW_IMPL_QUARTZ (toplevel->impl);
-      nswindow = impl->toplevel;
+      nswindow = gdk_quartz_window_search_for_nearest_nswindow (window);
 
       point = [nswindow mouseLocationOutsideOfEventStream];
 
diff --git a/gdk/quartz/gdkdisplay-quartz.c b/gdk/quartz/gdkdisplay-quartz.c
index 0587ca8f2f..53726e38b6 100644
--- a/gdk/quartz/gdkdisplay-quartz.c
+++ b/gdk/quartz/gdkdisplay-quartz.c
@@ -21,6 +21,7 @@
 #include <gdk/gdk.h>
 #include <gdk/gdkdisplayprivate.h>
 #include <gdk/gdkmonitorprivate.h>
+#include <gdk/gdkframeclockprivate.h>
 
 #include "gdkprivate-quartz.h"
 #include "gdkquartzscreen.h"
@@ -29,6 +30,7 @@
 #include "gdkquartzdevicemanager-core.h"
 #include "gdkscreen.h"
 #include "gdkmonitorprivate.h"
+#include "gdkdisplaylinksource.h"
 #include "gdkdisplay-quartz.h"
 #include "gdkmonitor-quartz.h"
 #include "gdkglcontext-quartz.h"
@@ -84,6 +86,112 @@ _gdk_device_manager_new (GdkDisplay *display)
                        NULL);
 }
 
+void
+_gdk_quartz_display_add_frame_callback (GdkDisplay             *display,
+                                        GdkWindow              *window)
+{
+  GdkQuartzDisplay *display_quartz;
+  GdkWindowImplQuartz *impl = GDK_WINDOW_IMPL_QUARTZ (window->impl);
+
+  display_quartz = GDK_QUARTZ_DISPLAY (display);
+
+  impl->frame_link.data = window;
+  impl->frame_link.prev = NULL;
+  impl->frame_link.next = display_quartz->windows_awaiting_frame;
+
+  display_quartz->windows_awaiting_frame = &impl->frame_link;
+
+  if (impl->frame_link.next == NULL)
+    gdk_display_link_source_unpause ((GdkDisplayLinkSource *)display_quartz->frame_source);
+}
+
+void
+_gdk_quartz_display_remove_frame_callback (GdkDisplay             *display,
+                                           GdkWindow              *window)
+{
+  GdkQuartzDisplay *display_quartz = GDK_QUARTZ_DISPLAY (display);
+  GList *link;
+
+  link = g_list_find (display_quartz->windows_awaiting_frame, window);
+
+  if (link != NULL)
+    {
+      display_quartz->windows_awaiting_frame =
+        g_list_remove_link (display_quartz->windows_awaiting_frame, link);
+    }
+
+  if (display_quartz->windows_awaiting_frame == NULL)
+    gdk_display_link_source_pause ((GdkDisplayLinkSource *)display_quartz->frame_source);
+}
+
+static gboolean
+gdk_quartz_display_frame_cb (gpointer data)
+{
+  GdkDisplayLinkSource *source;
+  GdkQuartzDisplay *display_quartz = data;
+  GList *iter;
+  gint64 presentation_time;
+  gint64 now;
+
+  source = (GdkDisplayLinkSource *)display_quartz->frame_source;
+
+  iter = display_quartz->windows_awaiting_frame;
+  display_quartz->windows_awaiting_frame = NULL;
+
+  if (iter == NULL)
+    {
+      gdk_display_link_source_pause (source);
+      return G_SOURCE_CONTINUE;
+    }
+
+  presentation_time = source->presentation_time;
+  now = g_source_get_time (display_quartz->frame_source);
+
+  for (; iter != NULL; iter = iter->next)
+    {
+      GdkWindow *window = iter->data;
+      GdkWindowImplQuartz *impl = GDK_WINDOW_IMPL_QUARTZ (window->impl);
+      GdkFrameClock *frame_clock = gdk_window_get_frame_clock (window);
+      GdkFrameTimings *timings;
+
+      if (frame_clock == NULL)
+        continue;
+
+      _gdk_frame_clock_thaw (frame_clock);
+
+      if (impl->pending_frame_counter)
+        {
+          timings = gdk_frame_clock_get_timings (frame_clock, impl->pending_frame_counter);
+          if (timings != NULL)
+            timings->presentation_time = presentation_time - source->refresh_interval;
+          impl->pending_frame_counter = 0;
+        }
+
+      timings = gdk_frame_clock_get_current_timings (frame_clock);
+
+      if (timings != NULL)
+        {
+          timings->refresh_interval = source->refresh_interval;
+          timings->predicted_presentation_time = source->presentation_time;
+        }
+    }
+
+  return G_SOURCE_CONTINUE;
+}
+
+static void
+gdk_quartz_display_init_display_link (GdkDisplay *display)
+{
+  GdkQuartzDisplay *display_quartz = GDK_QUARTZ_DISPLAY (display);
+
+  display_quartz->frame_source = gdk_display_link_source_new ();
+  g_source_set_callback (display_quartz->frame_source,
+                         gdk_quartz_display_frame_cb,
+                         display,
+                         NULL);
+  g_source_attach (display_quartz->frame_source, NULL);
+}
+
 GdkDisplay *
 _gdk_quartz_display_open (const gchar *display_name)
 {
@@ -102,6 +210,8 @@ _gdk_quartz_display_open (const gchar *display_name)
 
   /* Initialize application */
   [NSApplication sharedApplication];
+  gdk_quartz_display_init_display_link (_gdk_display);
+
 #if 0
   /* FIXME: Remove the #if 0 when we have these functions */
   _gdk_quartz_dnd_init ();
diff --git a/gdk/quartz/gdkdisplay-quartz.h b/gdk/quartz/gdkdisplay-quartz.h
index 66cfe4271e..59245da7ca 100644
--- a/gdk/quartz/gdkdisplay-quartz.h
+++ b/gdk/quartz/gdkdisplay-quartz.h
@@ -37,6 +37,10 @@ struct _GdkQuartzDisplay
   NSRect geometry; /* In AppKit coordinates. */
   NSSize size; /* Aggregate size of displays in millimeters. */
   GPtrArray *monitors;
+  /* This structure is not allocated. It points to an embedded
+   * GList in the GdkWindow. */
+  GList   *windows_awaiting_frame;
+  GSource *frame_source;
 };
 
 struct _GdkQuartzDisplayClass
diff --git a/gdk/quartz/gdkdisplaylinksource.c b/gdk/quartz/gdkdisplaylinksource.c
new file mode 100644
index 0000000000..b59c121945
--- /dev/null
+++ b/gdk/quartz/gdkdisplaylinksource.c
@@ -0,0 +1,251 @@
+/* gdkdisplaylinksource.c
+ *
+ * Copyright (C) 2015 Christian Hergert <christian@hergert.me>
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library. If not, see <http://www.gnu.org/licenses/>.
+ *
+ * Authors:
+ *   Christian Hergert <christian@hergert.me>
+ */
+
+#include "config.h"
+
+#include <mach/mach_time.h>
+
+#include "gdkinternal-quartz.h"
+#include "gdkdisplaylinksource.h"
+
+static gint64 host_to_frame_clock_time (gint64 host_time);
+
+static gboolean
+gdk_display_link_source_prepare (GSource *source,
+                                 gint    *timeout_)
+{
+  GdkDisplayLinkSource *impl = (GdkDisplayLinkSource *)source;
+  gint64 now;
+
+  now = g_source_get_time (source);
+
+  if (now < impl->presentation_time)
+    *timeout_ = (impl->presentation_time - now) / 1000L;
+  else
+    *timeout_ = -1;
+
+  return impl->needs_dispatch;
+}
+
+static gboolean
+gdk_display_link_source_check (GSource *source)
+{
+  GdkDisplayLinkSource *impl = (GdkDisplayLinkSource *)source;
+  return impl->needs_dispatch;
+}
+
+static gboolean
+gdk_display_link_source_dispatch (GSource     *source,
+                                  GSourceFunc  callback,
+                                  gpointer     user_data)
+{
+  GdkDisplayLinkSource *impl = (GdkDisplayLinkSource *)source;
+  gboolean ret = G_SOURCE_CONTINUE;
+
+  impl->needs_dispatch = FALSE;
+
+  if (callback != NULL)
+    ret = callback (user_data);
+
+  return ret;
+}
+
+static void
+gdk_display_link_source_finalize (GSource *source)
+{
+  GdkDisplayLinkSource *impl = (GdkDisplayLinkSource *)source;
+
+  CVDisplayLinkStop (impl->display_link);
+  CVDisplayLinkRelease (impl->display_link);
+}
+
+static GSourceFuncs gdk_display_link_source_funcs = {
+  gdk_display_link_source_prepare,
+  gdk_display_link_source_check,
+  gdk_display_link_source_dispatch,
+  gdk_display_link_source_finalize
+};
+
+void
+gdk_display_link_source_pause (GdkDisplayLinkSource *source)
+{
+  CVDisplayLinkStop (source->display_link);
+}
+
+void
+gdk_display_link_source_unpause (GdkDisplayLinkSource *source)
+{
+  CVDisplayLinkStart (source->display_link);
+}
+
+static CVReturn
+gdk_display_link_source_frame_cb (CVDisplayLinkRef   display_link,
+                                  const CVTimeStamp *inNow,
+                                  const CVTimeStamp *inOutputTime,
+                                  CVOptionFlags      flagsIn,
+                                  CVOptionFlags     *flagsOut,
+                                  void              *user_data)
+{
+  GdkDisplayLinkSource *impl = user_data;
+  gint64 presentation_time;
+  gboolean needs_wakeup;
+
+  needs_wakeup = !g_atomic_int_get (&impl->needs_dispatch);
+
+  presentation_time = host_to_frame_clock_time (inOutputTime->hostTime);
+
+  impl->presentation_time = presentation_time;
+  impl->needs_dispatch = TRUE;
+
+  if (needs_wakeup)
+     {
+      NSEvent *event;
+
+      /* Post a message so we'll break out of the message loop.
+       *
+       * We don't use g_main_context_wakeup() here because that
+       * would result in sending a message to the pipe(2) fd in
+       * the select thread which would then send this message as
+       * well. Lots of extra work.
+       */
+      event = [NSEvent otherEventWithType: NSEventTypeApplicationDefined
+                                 location: NSZeroPoint
+                            modifierFlags: 0
+                                timestamp: 0
+                             windowNumber: 0
+                                  context: nil
+                                  subtype: GDK_QUARTZ_EVENT_SUBTYPE_EVENTLOOP
+                                    data1: 0
+                                    data2: 0];
+
+      [NSApp postEvent:event atStart:YES];
+     }
+
+  return kCVReturnSuccess;
+}
+
+/**
+ * gdk_display_link_source_new:
+ *
+ * Creates a new #GSource that will activate the dispatch function upon
+ * notification from a CVDisplayLink that a new frame should be drawn.
+ *
+ * Effort is made to keep the transition from the high-priority
+ * CVDisplayLink thread into this GSource lightweight. However, this is
+ * somewhat non-ideal since the best case would be to do the drawing
+ * from the high-priority thread.
+ *
+ * Returns: (transfer full): A newly created #GSource.
+ */
+GSource *
+gdk_display_link_source_new (void)
+{
+  GdkDisplayLinkSource *impl;
+  GSource *source;
+  CVReturn ret;
+  double period;
+
+  source = g_source_new (&gdk_display_link_source_funcs, sizeof *impl);
+  impl = (GdkDisplayLinkSource *)source;
+
+  /*
+   * Create our link based on currently connected displays.
+   * If there are multiple displays, this will be something that tries
+   * to work for all of them. In the future, we may want to explore multiple
+   * links based on the connected displays.
+   */
+  ret = CVDisplayLinkCreateWithActiveCGDisplays (&impl->display_link);
+  if (ret != kCVReturnSuccess)
+    {
+      g_warning ("Failed to initialize CVDisplayLink!");
+      return source;
+    }
+
+  /*
+   * Determine our nominal period between frames.
+   */
+  period = CVDisplayLinkGetActualOutputVideoRefreshPeriod (impl->display_link);
+  if (period == 0.0)
+    period = 1.0 / 60.0;
+  impl->refresh_interval = period * 1000000L;
+
+  /*
+   * Wire up our callback to be executed within the high-priority thread.
+   */
+  CVDisplayLinkSetOutputCallback (impl->display_link,
+                                  gdk_display_link_source_frame_cb,
+                                  source);
+
+  g_source_set_name (source, "[gdk] quartz frame clock");
+
+  return source;
+}
+
+static gint64
+host_to_frame_clock_time (gint64 host_time)
+{
+  static mach_timebase_info_data_t timebase_info;
+
+  /*
+   * NOTE:
+   *
+   * This code is taken from GLib to match g_get_monotonic_time().
+   */
+  if (G_UNLIKELY (timebase_info.denom == 0))
+    {
+      /* This is a fraction that we must use to scale
+       * mach_absolute_time() by in order to reach nanoseconds.
+       *
+       * We've only ever observed this to be 1/1, but maybe it could be
+       * 1000/1 if mach time is microseconds already, or 1/1000 if
+       * picoseconds.  Try to deal nicely with that.
+       */
+      mach_timebase_info (&timebase_info);
+
+      /* We actually want microseconds... */
+      if (timebase_info.numer % 1000 == 0)
+        timebase_info.numer /= 1000;
+      else
+        timebase_info.denom *= 1000;
+
+      /* We want to make the numer 1 to avoid having to multiply... */
+      if (timebase_info.denom % timebase_info.numer == 0)
+        {
+          timebase_info.denom /= timebase_info.numer;
+          timebase_info.numer = 1;
+        }
+      else
+        {
+          /* We could just multiply by timebase_info.numer below, but why
+           * bother for a case that may never actually exist...
+           *
+           * Plus -- performing the multiplication would risk integer
+           * overflow.  If we ever actually end up in this situation, we
+           * should more carefully evaluate the correct course of action.
+           */
+          mach_timebase_info (&timebase_info); /* Get a fresh copy for a better message */
+          g_error ("Got weird mach timebase info of %d/%d.  Please file a bug against GLib.",
+                   timebase_info.numer, timebase_info.denom);
+        }
+    }
+
+  return host_time / timebase_info.denom;
+}
diff --git a/gdk/quartz/gdkdisplaylinksource.h b/gdk/quartz/gdkdisplaylinksource.h
new file mode 100644
index 0000000000..7493b0c0d4
--- /dev/null
+++ b/gdk/quartz/gdkdisplaylinksource.h
@@ -0,0 +1,48 @@
+/* gdkdisplaylinksource.h
+ *
+ * Copyright (C) 2015 Christian Hergert <christian@hergert.me>
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library. If not, see <http://www.gnu.org/licenses/>.
+ *
+ * Authors:
+ *   Christian Hergert <christian@hergert.me>
+ */
+
+#ifndef GDK_DISPLAY_LINK_SOURCE_H
+#define GDK_DISPLAY_LINK_SOURCE_H
+
+#include <glib.h>
+
+#include <QuartzCore/QuartzCore.h>
+
+G_BEGIN_DECLS
+
+typedef struct
+{
+  GSource          source;
+
+  CVDisplayLinkRef display_link;
+  gint64           refresh_interval;
+
+  volatile gint64  presentation_time;
+  volatile guint   needs_dispatch;
+} GdkDisplayLinkSource;
+
+GSource *gdk_display_link_source_new     (void);
+void     gdk_display_link_source_pause   (GdkDisplayLinkSource *source);
+void     gdk_display_link_source_unpause (GdkDisplayLinkSource *source);
+
+G_END_DECLS
+
+#endif /* GDK_DISPLAY_LINK_SOURCE_H */
diff --git a/gdk/quartz/gdkevents-quartz.c b/gdk/quartz/gdkevents-quartz.c
index 0d492c1619..891dfd4cea 100644
--- a/gdk/quartz/gdkevents-quartz.c
+++ b/gdk/quartz/gdkevents-quartz.c
@@ -387,7 +387,7 @@ get_window_point_from_screen_point (GdkWindow *window,
   NSPoint point;
   GdkQuartzNSWindow *nswindow;
 
-  nswindow = (GdkQuartzNSWindow*)(((GdkWindowImplQuartz *)window->impl)->toplevel);
+  nswindow = gdk_quartz_window_search_for_nearest_nswindow (window);
   point = [nswindow convertPointFromScreen:screen_point];
   *x = point.x;
   *y = window->height - point.y;
@@ -396,7 +396,7 @@ get_window_point_from_screen_point (GdkWindow *window,
 static gboolean
 is_mouse_button_press_event (NSEventType type)
 {
-  switch (type)
+  switch ((int)type)
     {
       case GDK_QUARTZ_LEFT_MOUSE_DOWN:
       case GDK_QUARTZ_RIGHT_MOUSE_DOWN:
@@ -658,18 +658,25 @@ find_toplevel_under_pointer (GdkDisplay *display,
 
     }
 
-  if (toplevel)
-    {
-      get_window_point_from_screen_point (toplevel, screen_point, x, y);
-      /* If the coordinates are out of window bounds, this toplevel is not
-       * under the pointer and we thus return NULL. This can occur when
-       * toplevel under pointer has not yet been updated due to a very recent
-       * window resize. Alternatively, we should no longer be relying on
-       * the toplevel_under_pointer value which is maintained in gdkwindow.c.
-       */
-      if (*x < 0 || *y < 0 || *x >= toplevel->width || *y >= toplevel->height)
-        return NULL;
-    }
+  if (toplevel == NULL)
+    return NULL;
+
+  /*
+   * Root window type does not need translation, but also does not have
+   * an associated NSWindow and therefore can't translate screen points
+   */
+  if (toplevel == _gdk_root)
+    return toplevel;
+
+  get_window_point_from_screen_point (toplevel, screen_point, x, y);
+  /* If the coordinates are out of window bounds, this toplevel is not
+    * under the pointer and we thus return NULL. This can occur when
+    * toplevel under pointer has not yet been updated due to a very recent
+    * window resize. Alternatively, we should no longer be relying on
+    * the toplevel_under_pointer value which is maintained in gdkwindow.c.
+    */
+  if (*x < 0 || *y < 0 || *x >= toplevel->width || *y >= toplevel->height)
+    return NULL;
 
   return toplevel;
 }
@@ -793,7 +800,7 @@ find_toplevel_for_mouse_event (NSEvent    *nsevent,
 
           toplevel = toplevel_under_pointer;
 
-          toplevel_impl = (GdkWindowImplQuartz *)toplevel->impl;
+          toplevel_impl = GDK_WINDOW_IMPL_QUARTZ (toplevel->impl);
 
           *x = x_tmp;
           *y = y_tmp;
@@ -1029,7 +1036,7 @@ fill_button_event (GdkWindow *window,
   state = get_keyboard_modifiers_from_ns_event (nsevent) |
          _gdk_quartz_events_get_current_mouse_modifiers ();
 
-  switch ([nsevent type])
+  switch ((int)[nsevent type])
     {
     case GDK_QUARTZ_LEFT_MOUSE_DOWN:
     case GDK_QUARTZ_RIGHT_MOUSE_DOWN:
@@ -1405,7 +1412,7 @@ test_resize (NSEvent *event, GdkWindow *toplevel, gint x, gint y)
   /* Resizing from the resize indicator only begins if an GDK_QUARTZ_LEFT_MOUSE_BUTTON
    * event is received in the resizing area.
    */
-  toplevel_impl = (GdkWindowImplQuartz *)toplevel->impl;
+  toplevel_impl = GDK_WINDOW_IMPL_QUARTZ (toplevel->impl);
   if ([toplevel_impl->toplevel showsResizeIndicator])
   if ([event type] == GDK_QUARTZ_LEFT_MOUSE_DOWN &&
       [toplevel_impl->toplevel showsResizeIndicator])
diff --git a/gdk/quartz/gdkglcontext-quartz.c b/gdk/quartz/gdkglcontext-quartz.c
index a244d66e43..ddd18e1e7c 100644
--- a/gdk/quartz/gdkglcontext-quartz.c
+++ b/gdk/quartz/gdkglcontext-quartz.c
@@ -28,7 +28,7 @@
 #include "gdkquartzglcontext.h"
 #include "gdkquartzwindow.h"
 #include "gdkprivate-quartz.h"
-#include "gdkquartz-cocoa-access.h"
+#include "gdkinternal-quartz.h"
 
 #include "gdkinternals.h"
 
@@ -138,7 +138,7 @@ gdk_quartz_window_create_gl_context (GdkWindow     *window,
 
   if (attached)
     {
-      NSView *view = gdk_quartz_window_get_nsview (window);
+      NSView *view = gdk_quartz_window_search_for_nearest_nsview (window);
 
       if ([view respondsToSelector:@selector(setWantsBestResolutionOpenGLSurface:)])
         [view setWantsBestResolutionOpenGLSurface:YES];
diff --git a/gdk/quartz/gdkinternal-quartz.h b/gdk/quartz/gdkinternal-quartz.h
index 7f2566ae3f..646bef3ad7 100644
--- a/gdk/quartz/gdkinternal-quartz.h
+++ b/gdk/quartz/gdkinternal-quartz.h
@@ -284,5 +284,10 @@ void     _gdk_quartz_window_change_property   (GdkWindow    *window,
 void     _gdk_quartz_window_delete_property   (GdkWindow    *window,
                                                GdkAtom       property);
 
+/* Display methods - frame clock */
+void        _gdk_quartz_display_add_frame_callback    (GdkDisplay             *display,
+                                                       GdkWindow              *window);
+void        _gdk_quartz_display_remove_frame_callback (GdkDisplay             *display,
+                                                       GdkWindow              *window);
 
 #endif /* __GDK_INTERNAL_QUARTZ_H__ */
diff --git a/gdk/quartz/gdkprivate-quartz.h b/gdk/quartz/gdkprivate-quartz.h
index 7900c01b17..a6e644b870 100644
--- a/gdk/quartz/gdkprivate-quartz.h
+++ b/gdk/quartz/gdkprivate-quartz.h
@@ -33,5 +33,7 @@
 
 GdkDisplay *    _gdk_quartz_display_open (const gchar *name);
 
+/* Window Impl */
+void _gdk_quartz_unref_cairo_surface (GdkWindow *window);
 
 #endif /* __GDK_PRIVATE_QUARTZ_H__ */
diff --git a/gdk/quartz/gdkwindow-quartz.c b/gdk/quartz/gdkwindow-quartz.c
index aa85318e0b..a9bc6c6504 100644
--- a/gdk/quartz/gdkwindow-quartz.c
+++ b/gdk/quartz/gdkwindow-quartz.c
@@ -22,6 +22,7 @@
 #include <gdk/gdk.h>
 #include <gdk/gdkdeviceprivate.h>
 #include <gdk/gdkdisplayprivate.h>
+#include <gdk/gdkframeclockprivate.h>
 
 #include "gdkwindowimpl.h"
 #include "gdkwindow-quartz.h"
@@ -47,8 +48,6 @@ static gboolean  in_process_all_updates = FALSE;
 
 static GSList *main_window_stack;
 
-void _gdk_quartz_window_flush (GdkWindowImplQuartz *window_impl);
-
 typedef struct
 {
   gint            x, y;
@@ -126,22 +125,74 @@ gdk_quartz_window_init (GdkQuartzWindow *quartz_window)
  * GdkQuartzWindowImpl
  */
 
+static inline NSObject *
+gdk_quartz_window_search_for_nearest_nsobject (GdkWindow *window, bool get_nswindow_instead_of_nsview)
+{
+  GdkWindow *onscreen_window = window;
+  NSObject  *nsobject        = NULL;
+
+  if (GDK_WINDOW_DESTROYED (window))
+    return NULL;
+
+  /*
+   * if window is type GDK_WINDOW_OFFSCREEN
+   * you need to get the embedder in order to find the NSView
+   * see: gdkdevice.c:1461
+   */
+  while (1)
+    {
+      g_return_val_if_fail (onscreen_window != NULL, NULL);
+
+      if (GDK_IS_WINDOW_IMPL_QUARTZ (onscreen_window->impl))
+        {
+          if (get_nswindow_instead_of_nsview)
+            nsobject = GDK_WINDOW_IMPL_QUARTZ (onscreen_window->impl)->toplevel;
+          else
+            nsobject = GDK_WINDOW_IMPL_QUARTZ (onscreen_window->impl)->view;
+
+          if (nsobject != NULL)
+            break;
+        }
+
+      if (onscreen_window->window_type == GDK_WINDOW_OFFSCREEN)
+        onscreen_window = gdk_offscreen_window_get_embedder (onscreen_window);
+      else
+        onscreen_window = onscreen_window->parent;
+    }
+
+  g_return_val_if_fail (nsobject != NULL, NULL);
+
+  return nsobject;
+}
+
+NSView *
+gdk_quartz_window_search_for_nearest_nsview (GdkWindow *window)
+{
+  return (NSView *)gdk_quartz_window_search_for_nearest_nsobject (window, FALSE);
+}
+
+NSWindow *
+gdk_quartz_window_search_for_nearest_nswindow (GdkWindow *window)
+{
+  return (NSWindow *)gdk_quartz_window_search_for_nearest_nsobject (window, TRUE);
+}
+
 NSView *
 gdk_quartz_window_get_nsview (GdkWindow *window)
 {
-  if (GDK_WINDOW_DESTROYED (window))
+  if (GDK_WINDOW_DESTROYED (window) || !GDK_IS_WINDOW_IMPL_QUARTZ (window->impl))
     return NULL;
 
-  return ((GdkWindowImplQuartz *)window->impl)->view;
+  return GDK_WINDOW_IMPL_QUARTZ (window->impl)->view;
 }
 
 NSWindow *
 gdk_quartz_window_get_nswindow (GdkWindow *window)
 {
-  if (GDK_WINDOW_DESTROYED (window))
+  if (GDK_WINDOW_DESTROYED (window) || !GDK_IS_WINDOW_IMPL_QUARTZ (window->impl))
     return NULL;
 
-  return ((GdkWindowImplQuartz *)window->impl)->toplevel;
+  return GDK_WINDOW_IMPL_QUARTZ (window->impl)->toplevel;
 }
 
 static CGContextRef
@@ -149,7 +200,6 @@ gdk_window_impl_quartz_get_context (GdkWindowImplQuartz *window_impl,
 				    gboolean             antialias)
 {
   CGContextRef cg_context = NULL;
-  CGSize scale;
 
   if (GDK_WINDOW_DESTROYED (window_impl->wrapper))
     return NULL;
@@ -160,38 +210,31 @@ gdk_window_impl_quartz_get_context (GdkWindowImplQuartz *window_impl,
    * and for widgets that send fake expose events like the arrow
    * buttons in spinbuttons or the position marker in rulers.
    */
-  if (window_impl->in_paint_rect_count == 0)
+#if MAC_OS_X_VERSION_MAX_ALLOWED < 101400
+  if (gdk_quartz_osx_version() < GDK_OSX_MOJAVE &&
+      window_impl->in_paint_rect_count == 0)
     {
       /* The NSView focus-locking API set was deprecated in MacOS 10.14 and
-       * has a significant cost in MacOS 11 - every lock/unlock seems to 
+       * has a significant cost in MacOS 11 - every lock/unlock seems to
        * trigger a drawRect: call for the entire window.  To return the
        * lost performance, do not use the locking API in MacOS 11+
        */
-      if(gdk_quartz_osx_version() < GDK_OSX_BIGSUR)
-        {
-          if (![window_impl->view lockFocusIfCanDraw])
+         if (![window_impl->view lockFocusIfCanDraw])
             return NULL;
-        }
     }
-#if MAC_OS_X_VERSION_MAX_ALLOWED < 101000
-    cg_context = [[NSGraphicsContext currentContext] graphicsPort];
-#else
+#endif
+#if MAC_OS_X_VERSION_MIN_REQUIRED < 101000
   if (gdk_quartz_osx_version () < GDK_OSX_YOSEMITE)
     cg_context = [[NSGraphicsContext currentContext] graphicsPort];
   else
-    cg_context = [[NSGraphicsContext currentContext] CGContext];
 #endif
+    cg_context = [[NSGraphicsContext currentContext] CGContext];
 
   if (!cg_context)
     return NULL;
   CGContextSaveGState (cg_context);
   CGContextSetAllowsAntialiasing (cg_context, antialias);
 
-  /* Undo the default scaling transform, since we apply our own
-   * in gdk_quartz_ref_cairo_surface () */
-  scale = CGContextConvertSizeToDeviceSpace (cg_context,
-                                             CGSizeMake (1.0, 1.0));
-  CGContextScaleCTM (cg_context, 1.0 / fabs(scale.width), 1.0 / fabs(scale.height));
   return cg_context;
 }
 
@@ -206,19 +249,14 @@ gdk_window_impl_quartz_release_context (GdkWindowImplQuartz *window_impl,
     }
 
   /* See comment in gdk_quartz_window_get_context(). */
-  if (window_impl->in_paint_rect_count == 0)
+#if MAC_OS_X_VERSION_MIN_REQUIRED < 101400
+  if (gdk_quartz_osx_version() < GDK_OSX_MOJAVE &&
+      window_impl->in_paint_rect_count == 0)
     {
-      _gdk_quartz_window_flush (window_impl);
-
-      /* As per gdk_window_impl_quartz_get_context(), the NSView
-        * focus-locking API set was deprecated in MacOS 10.14 and has
-        * a significant cost in MacOS 11 - every lock/unlock seems to 
-        * trigger a drawRect: call for the entire window.  To return the
-        * lost performance, do not use the locking API in MacOS 11+
-        */
-      if(gdk_quartz_osx_version() < GDK_OSX_BIGSUR)
-        [window_impl->view unlockFocus];
+      [window_impl->toplevel flushWindow];
+      [window_impl->view unlockFocus];
     }
+#endif
 }
 
 static void
@@ -234,57 +272,14 @@ gdk_window_impl_quartz_finalize (GObject *object)
     g_object_unref (impl->transient_for);
 
   if (impl->view)
-    [[NSNotificationCenter defaultCenter] removeObserver: impl->toplevel
-                                       name: @"NSViewFrameDidChangeNotification"
-                                     object: impl->view];
-
-  G_OBJECT_CLASS (parent_class)->finalize (object);
-}
-
-/* Help preventing "beam sync penalty" where CG makes all graphics code
- * block until the next vsync if we try to flush (including call display on
- * a view) too often. We do this by limiting the manual flushing done
- * outside of expose calls to less than some frequency when measured over
- * the last 4 flushes. This is a bit arbitray, but seems to make it possible
- * for some quick manual flushes (such as gtkruler or gimp’s marching ants)
- * without hitting the max flush frequency.
- *
- * If drawable NULL, no flushing is done, only registering that a flush was
- * done externally.
- *
- * Note: As of MacOS 10.14 NSWindow flushWindow is deprecated because
- * Quartz has the ability to handle deferred drawing on its own.
- */
-void
-_gdk_quartz_window_flush (GdkWindowImplQuartz *window_impl)
-{
-#if MAC_OS_X_VERSION_MIN_REQUIRED < 101400
-  static struct timeval prev_tv;
-  static gint intervals[4];
-  static gint index;
-  struct timeval tv;
-  gint ms;
-
-  gettimeofday (&tv, NULL);
-  ms = (tv.tv_sec - prev_tv.tv_sec) * 1000 + (tv.tv_usec - prev_tv.tv_usec) / 1000;
-  intervals[index++ % 4] = ms;
-
-  if (window_impl)
     {
-      ms = intervals[0] + intervals[1] + intervals[2] + intervals[3];
-
-      /* ~25Hz on average. */
-      if (ms > 4*40)
-        {
-          if (window_impl)
-            [window_impl->toplevel flushWindow];
-
-          prev_tv = tv;
-        }
+      [[NSNotificationCenter defaultCenter] removeObserver: impl->toplevel
+                                        name: @"NSViewFrameDidChangeNotification"
+                                      object: impl->view];
+      [impl->view release];
     }
-  else
-    prev_tv = tv;
-#endif
+
+  G_OBJECT_CLASS (parent_class)->finalize (object);
 }
 
 static cairo_user_data_key_t gdk_quartz_cairo_key;
@@ -298,12 +293,11 @@ static void
 gdk_quartz_cairo_surface_destroy (void *data)
 {
   GdkQuartzCairoSurfaceData *surface_data = data;
+  cairo_surface_t *surface = surface_data->window_impl->cairo_surface;
 
+  if (!cairo_surface_get_reference_count (surface))
   surface_data->window_impl->cairo_surface = NULL;
 
-  gdk_quartz_window_release_context (surface_data->window_impl,
-                                     surface_data->cg_context);
-
   g_free (surface_data);
 }
 
@@ -312,22 +306,15 @@ gdk_quartz_create_cairo_surface (GdkWindowImplQuartz *impl,
 				 int                  width,
 				 int                  height)
 {
-  CGContextRef cg_context;
   GdkQuartzCairoSurfaceData *surface_data;
   cairo_surface_t *surface;
 
-  cg_context = gdk_quartz_window_get_context (impl, TRUE);
 
   surface_data = g_new (GdkQuartzCairoSurfaceData, 1);
   surface_data->window_impl = impl;
-  surface_data->cg_context = cg_context;
-
-  if (cg_context)
-    surface = cairo_quartz_surface_create_for_cg_context (cg_context,
-                                                          width, height);
-  else
-    surface = cairo_quartz_surface_create(CAIRO_FORMAT_ARGB32, width, height);
+  surface_data->cg_context = NULL;
 
+  surface = cairo_image_surface_create(CAIRO_FORMAT_ARGB32, width, height);
   cairo_surface_set_user_data (surface, &gdk_quartz_cairo_key,
                                surface_data,
                                gdk_quartz_cairo_surface_destroy);
@@ -345,30 +332,56 @@ gdk_quartz_ref_cairo_surface (GdkWindow *window)
 
   if (!impl->cairo_surface)
     {
+      gint width = gdk_window_get_width (impl->wrapper);
+      gint height = gdk_window_get_height (impl->wrapper);
       gint scale = gdk_window_get_scale_factor (impl->wrapper);
+      gint scaled_width = width * scale;
 
-      impl->cairo_surface = 
-          gdk_quartz_create_cairo_surface (impl,
-                                           gdk_window_get_width (impl->wrapper) * scale,
-                                           gdk_window_get_height (impl->wrapper) * scale);
+      if (scaled_width % 16)
+          scaled_width += 16 - scaled_width % 16; // Surface widths must be 4-pixel aligned
 
+      impl->cairo_surface = gdk_quartz_create_cairo_surface (impl,
+                                                             scaled_width,
+                                                             height * scale);
       cairo_surface_set_device_scale (impl->cairo_surface, scale, scale);
+      cairo_surface_reference (impl->cairo_surface); // The caller will destroy the returned one.
     }
   else
-    cairo_surface_reference (impl->cairo_surface);
+    {
+      cairo_surface_reference (impl->cairo_surface);
+    }
 
   return impl->cairo_surface;
 }
 
+void
+_gdk_quartz_unref_cairo_surface (GdkWindow *window)
+{
+  GdkWindowImplQuartz *impl = GDK_WINDOW_IMPL_QUARTZ (window->impl);
+  if (GDK_WINDOW_DESTROYED (window))
+    return;
+
+  if (impl->cairo_surface)
+    {
+      cairo_surface_destroy (impl->cairo_surface);
+      if (impl->cairo_surface &&
+          !cairo_surface_get_reference_count (impl->cairo_surface))
+          impl->cairo_surface = NULL;
+    }
+}
+
 static void
 gdk_window_impl_quartz_init (GdkWindowImplQuartz *impl)
 {
   impl->type_hint = GDK_WINDOW_TYPE_HINT_NORMAL;
+  impl->view      = NULL;
+  impl->toplevel  = NULL;
 }
 
 static gboolean
 gdk_window_impl_quartz_begin_paint (GdkWindow *window)
 {
+  gdk_quartz_ref_cairo_surface (window);
   return FALSE;
 }
 
@@ -413,19 +426,20 @@ _gdk_quartz_window_process_updates_recurse (GdkWindow *window,
           GdkWindowImplQuartz *toplevel_impl;
           NSWindow *nswindow;
 
-          toplevel_impl = (GdkWindowImplQuartz *)toplevel->impl;
+          toplevel_impl = GDK_WINDOW_IMPL_QUARTZ (toplevel->impl);
           nswindow = toplevel_impl->toplevel;
 #if MAC_OS_X_VERSION_MIN_REQUIRED < 101400
           /* In theory, we could skip the flush disabling, since we only
            * have one NSView.
            */
-          if (nswindow && ![nswindow isFlushWindowDisabled]) 
+          if (gdk_quartz_osx_version() < GDK_OSX_MOJAVE &&
+               nswindow && ![nswindow isFlushWindowDisabled])
             {
               [nswindow retain];
               [nswindow disableFlushWindow];
-              update_nswindows = g_slist_prepend (update_nswindows, nswindow);
             }
 #endif
+          update_nswindows = g_slist_prepend (update_nswindows, nswindow);
         }
     }
 
@@ -470,10 +484,12 @@ _gdk_quartz_display_after_process_all_updates (GdkDisplay *display)
 
       [[nswindow contentView] displayIfNeeded];
 
-      _gdk_quartz_window_flush (NULL);
 #if MAC_OS_X_VERSION_MIN_REQUIRED < 101400
-      [nswindow enableFlushWindow];
-      [nswindow flushWindow];
+      if(gdk_quartz_osx_version() < GDK_OSX_BIGSUR)
+        {
+          [nswindow enableFlushWindow];
+          [nswindow flushWindow];
+        }
 #endif
       [nswindow release];
 
@@ -852,6 +868,29 @@ get_nsscreen_for_point (gint x, gint y)
   return screen;
 }
 
+static void
+on_frame_clock_before_paint (GdkFrameClock *frame_clock,
+                             GdkWindow     *window)
+{
+}
+
+static void
+on_frame_clock_after_paint (GdkFrameClock *frame_clock,
+                            GdkWindow     *window)
+{
+  GdkWindowImplQuartz *impl = GDK_WINDOW_IMPL_QUARTZ (window->impl);
+  GdkDisplay *display = gdk_window_get_display (window);
+  GdkFrameTimings *timings;
+
+  timings = gdk_frame_clock_get_current_timings (frame_clock);
+  if (timings != NULL)
+    impl->pending_frame_counter = timings->frame_counter;
+
+  _gdk_quartz_display_add_frame_callback (display, window);
+
+  _gdk_frame_clock_freeze (frame_clock);
+}
+
 void
 _gdk_quartz_display_create_window_impl (GdkDisplay    *display,
                                         GdkWindow     *window,
@@ -864,6 +903,7 @@ _gdk_quartz_display_create_window_impl (GdkDisplay    *display,
   GdkWindowImplQuartz *impl;
   GdkWindowImplQuartz *parent_impl;
   GdkWindowTypeHint    type_hint = GDK_WINDOW_TYPE_HINT_NORMAL;
+  GdkFrameClock *frame_clock;
 
   GDK_QUARTZ_ALLOC_POOL;
 
@@ -894,9 +934,6 @@ _gdk_quartz_display_create_window_impl (GdkDisplay    *display,
 				  (attributes->cursor) :
 				  NULL));
 
-  impl->view = NULL;
-  impl->toplevel = NULL;
-
   if (attributes_mask & GDK_WA_TYPE_HINT)
     {
       type_hint = attributes->type_hint;
@@ -976,7 +1013,6 @@ _gdk_quartz_display_create_window_impl (GdkDisplay    *display,
                                       selector: @selector (windowDidResize:)
                                       name: @"NSViewFrameDidChangeNotification"
                                       object: impl->view];
-	[impl->view release];
       }
       break;
 
@@ -998,7 +1034,6 @@ _gdk_quartz_display_create_window_impl (GdkDisplay    *display,
 	    /* GdkWindows should be hidden by default */
 	    [impl->view setHidden:YES];
 	    [parent_impl->view addSubview:impl->view];
-	    [impl->view release];
 	  }
       }
       break;
@@ -1008,6 +1043,16 @@ _gdk_quartz_display_create_window_impl (GdkDisplay    *display,
     }
 
   GDK_QUARTZ_RELEASE_POOL;
+
+  if (attributes_mask & GDK_WA_TYPE_HINT)
+    gdk_window_set_type_hint (window, attributes->type_hint);
+
+  frame_clock = gdk_window_get_frame_clock (window);
+
+  g_signal_connect (frame_clock, "before-paint",
+                    G_CALLBACK (on_frame_clock_before_paint), window);
+  g_signal_connect (frame_clock, "after-paint",
+                    G_CALLBACK (on_frame_clock_after_paint), window);
 }
 
 void
@@ -1063,9 +1108,14 @@ gdk_quartz_window_destroy (GdkWindow *window,
 {
   GdkWindowImplQuartz *impl;
   GdkWindow *parent;
+  GdkDisplay *display;
 
   impl = GDK_WINDOW_IMPL_QUARTZ (window->impl);
 
+  display = gdk_window_get_display (window);
+
+  _gdk_quartz_display_remove_frame_callback (display, window);
+
   main_window_stack = g_slist_remove (main_window_stack, window);
 
   g_list_free (impl->sorted_children);
@@ -1257,6 +1307,7 @@ move_resize_window_internal (GdkWindow *window,
   cairo_region_t *old_region;
   cairo_region_t *expose_region;
   NSSize delta;
+  gboolean resized = FALSE;
 
   if (GDK_WINDOW_DESTROYED (window))
     return;
@@ -1304,10 +1355,18 @@ move_resize_window_internal (GdkWindow *window,
     }
 
   if (width != -1)
-    window->width = width;
+    {
+      if (window->width != width)
+        resized = TRUE;
+      window->width = width;
+    }
 
   if (height != -1)
-    window->height = height;
+    {
+      if (window->height != height)
+        resized = TRUE;
+      window->height = height;
+    }
 
   GDK_QUARTZ_ALLOC_POOL;
 
@@ -1324,6 +1383,7 @@ move_resize_window_internal (GdkWindow *window,
 
       frame_rect = [impl->toplevel frameRectForContentRect:content_rect];
       [impl->toplevel setFrame:frame_rect display:YES];
+      impl->cairo_surface = gdk_quartz_ref_cairo_surface (window);
     }
   else 
     {
@@ -1572,7 +1632,7 @@ gdk_window_quartz_raise (GdkWindow *window)
         {
           GdkWindowImplQuartz *impl;
 
-          impl = (GdkWindowImplQuartz *)parent->impl;
+          impl = GDK_WINDOW_IMPL_QUARTZ (parent->impl);
 
           impl->sorted_children = g_list_remove (impl->sorted_children, window);
           impl->sorted_children = g_list_prepend (impl->sorted_children, window);
@@ -1603,7 +1663,7 @@ gdk_window_quartz_lower (GdkWindow *window)
         {
           GdkWindowImplQuartz *impl;
 
-          impl = (GdkWindowImplQuartz *)parent->impl;
+          impl = GDK_WINDOW_IMPL_QUARTZ (parent->impl);
 
           impl->sorted_children = g_list_remove (impl->sorted_children, window);
           impl->sorted_children = g_list_append (impl->sorted_children, window);
@@ -3211,40 +3271,19 @@ gdk_quartz_window_release_context (GdkWindowImplQuartz  *window,
       return;
     }
 
+  g_return_if_fail (cg_context);
   GDK_WINDOW_IMPL_QUARTZ_GET_CLASS (window)->release_context (window, cg_context);
 }
 
+/* macOS doesn't define a root window, but Gdk needs one for two
+ * purposes: To be a parent reference for some toplevels and to be a
+ * fallback window when gdk_window_create_image_surface is called with
+ * a NULL GdkWindow.
+ *
+ */
 
-
-static CGContextRef
-gdk_root_window_impl_quartz_get_context (GdkWindowImplQuartz *window,
-                                         gboolean             antialias)
-{
-  CGColorSpaceRef colorspace;
-  CGContextRef cg_context;
-  GdkWindowImplQuartz *window_impl = GDK_WINDOW_IMPL_QUARTZ (window);
-
-  if (GDK_WINDOW_DESTROYED (window_impl->wrapper))
-    return NULL;
-
-  /* We do not have the notion of a root window on OS X.  We fake this
-   * by creating a 1x1 bitmap and return a context to that.
-   */
-  colorspace = CGColorSpaceCreateWithName (kCGColorSpaceGenericRGB);
-  cg_context = CGBitmapContextCreate (NULL,
-                                      1, 1, 8, 4, colorspace,
-                                      (CGBitmapInfo)kCGImageAlphaPremultipliedLast);
-  CGColorSpaceRelease (colorspace);
-
-  return cg_context;
-}
-
-static void
-gdk_root_window_impl_quartz_release_context (GdkWindowImplQuartz *window,
-                                             CGContextRef         cg_context)
-{
-  CGContextRelease (cg_context);
-}
+static CGContextRef gdk_root_window_impl_quartz_get_context (GdkWindowImplQuartz *window, gboolean antialias);
+static void gdk_root_window_impl_quartz_release_context (GdkWindowImplQuartz *window, CGContextRef cg_context);
 
 static void
 gdk_root_window_impl_quartz_class_init (GdkRootWindowImplQuartzClass *klass)
@@ -3260,6 +3299,22 @@ gdk_root_window_impl_quartz_class_init (GdkRootWindowImplQuartzClass *klass)
 static void
 gdk_root_window_impl_quartz_init (GdkRootWindowImplQuartz *impl)
 {
+  CGColorSpaceRef colorspace =  CGColorSpaceCreateDeviceRGB ();
+  /* Alpha channel Info: Cairo, CGImage, and CVPixelBuffer all use
+   * kCGImageAlphaPremultipliedFirst, CALayer.contents wants
+   * kCGImageAlphaPremultipliedLast.
+   */
+  CGBitmapInfo info = (CGBitmapInfo)kCGImageAlphaPremultipliedLast;
+  impl->cg_context = CGBitmapContextCreate (NULL, 1, 1, 8, 4,
+                                            colorspace, info);
+  CGColorSpaceRelease (colorspace);
+  impl->cg_layers = NULL;
+}
+
+static void
+gdk_root_window_impl_quartz_dispose (GdkRootWindowImplQuartz *impl)
+{
+  g_list_free_full (impl->cg_layers, (GDestroyNotify)CGLayerRelease);
 }
 
 GType
@@ -3289,3 +3344,30 @@ _gdk_root_window_impl_quartz_get_type (void)
 
   return object_type;
 }
+
+
+static CGContextRef
+gdk_root_window_impl_quartz_get_context (GdkWindowImplQuartz *window,
+                                         gboolean             antialias)
+{
+   GdkWindowImplQuartz *window_impl = GDK_WINDOW_IMPL_QUARTZ (window);
+   GdkRootWindowImplQuartz *impl = GDK_ROOT_WINDOW_IMPL_QUARTZ (window);
+   CGSize size;
+   CGLayerRef layer;
+
+  if (GDK_WINDOW_DESTROYED (window_impl->wrapper))
+    return NULL;
+
+  size.width = gdk_window_get_width (window_impl->wrapper);
+  size.height = gdk_window_get_height (window_impl->wrapper);
+  layer = CGLayerCreateWithContext(impl->cg_context, size, NULL);
+  impl->cg_layers = g_list_prepend(impl->cg_layers, CGLayerRetain (layer));
+  return CGContextRetain (CGLayerGetContext (layer));
+}
+
+static void
+gdk_root_window_impl_quartz_release_context (GdkWindowImplQuartz *window,
+                                             CGContextRef         cg_context)
+{
+  CGContextRelease (cg_context);
+}
diff --git a/gdk/quartz/gdkwindow-quartz.h b/gdk/quartz/gdkwindow-quartz.h
index 1175f072e4..34e64855a5 100644
--- a/gdk/quartz/gdkwindow-quartz.h
+++ b/gdk/quartz/gdkwindow-quartz.h
@@ -64,6 +64,10 @@ struct _GdkWindowImplQuartz
   gint shadow_top;
 
   gint shadow_max;
+
+  gboolean use_cg_context;
+  GList frame_link;
+  gint pending_frame_counter;
 };
  
 struct _GdkWindowImplQuartzClass 
@@ -83,6 +87,11 @@ CGContextRef gdk_quartz_window_get_context     (GdkWindowImplQuartz *window,
 void         gdk_quartz_window_release_context (GdkWindowImplQuartz *window,
                                                 CGContextRef         context);
 
+_GDK_EXTERN /* Required for immmodule.cache */
+NSView *     gdk_quartz_window_search_for_nearest_nsview   (GdkWindow *window);
+_GDK_EXTERN /* Required for immmodule.cache */
+NSWindow *   gdk_quartz_window_search_for_nearest_nswindow (GdkWindow *window);
+
 /* Root window implementation for Quartz
  */
 
@@ -99,6 +108,8 @@ typedef struct _GdkRootWindowImplQuartzClass GdkRootWindowImplQuartzClass;
 struct _GdkRootWindowImplQuartz
 {
   GdkWindowImplQuartz parent_instance;
+  CGContextRef cg_context;
+  GList* cg_layers;
 };
  
 struct _GdkRootWindowImplQuartzClass 
diff --git a/gdk/quartz/meson.build b/gdk/quartz/meson.build
index 619c0242e0..f4fcd8fba0 100644
--- a/gdk/quartz/meson.build
+++ b/gdk/quartz/meson.build
@@ -8,6 +8,7 @@ gdk_quartz_sources = files(
   'gdkdevice-core-quartz.c',
   'gdkdevicemanager-core-quartz.c',
   'gdkdisplay-quartz.c',
+  'gdkdisplaylinksource.c',
   'gdkdisplaymanager-quartz.c',
   'gdkdnd-quartz.c',
   'gdkevents-quartz.c',
@@ -49,8 +50,9 @@ appkit_dep = dependency('appleframeworks', modules : 'AppKit', required : true)
 cocoa_dep = dependency('appleframeworks', modules : 'Cocoa', required : true)
 carbon_dep = dependency('appleframeworks', modules : 'Carbon', required : true)
 quartzcore_dep = dependency('appleframeworks', modules : 'QuartzCore', required : true)
+iosurface_dep = dependency('appleframeworks', modules: 'IOSurface', required: true)
 
-gdk_quartz_deps = [ core_graphics_dep, appkit_dep, cocoa_dep, carbon_dep, quartzcore_dep ]
+gdk_quartz_deps = [ core_graphics_dep, appkit_dep, cocoa_dep, carbon_dep, quartzcore_dep, iosurface_dep ]
 
 libgdk_quartz = static_library('gdk-quartz',
   gdk_quartz_sources, gdkconfig, gdkenum_h,
diff --git a/gdk/wayland/gdkcursor-wayland.c b/gdk/wayland/gdkcursor-wayland.c
index a976c4819a..f5aa4681e3 100644
--- a/gdk/wayland/gdkcursor-wayland.c
+++ b/gdk/wayland/gdkcursor-wayland.c
@@ -223,6 +223,7 @@ _gdk_wayland_cursor_get_buffer (GdkCursor *cursor,
   if (wayland_cursor->wl_cursor)
     {
       struct wl_cursor_image *image;
+      int cursor_scale;
 
       if (image_index >= wayland_cursor->wl_cursor->image_count)
         {
@@ -234,12 +235,22 @@ _gdk_wayland_cursor_get_buffer (GdkCursor *cursor,
 
       image = wayland_cursor->wl_cursor->images[image_index];
 
-      *hotspot_x = image->hotspot_x / wayland_cursor->scale;
-      *hotspot_y = image->hotspot_y / wayland_cursor->scale;
+      cursor_scale = wayland_cursor->scale;
+      if ((image->width % cursor_scale != 0) ||
+          (image->height % cursor_scale != 0))
+        {
+          g_warning (G_STRLOC " cursor image size (%dx%d) not an integer"
+                     "multiple of scale (%d)", image->width, image->height,
+                     cursor_scale);
+          cursor_scale = 1;
+        }
+
+      *hotspot_x = image->hotspot_x / cursor_scale;
+      *hotspot_y = image->hotspot_y / cursor_scale;
 
-      *w = image->width / wayland_cursor->scale;
-      *h = image->height / wayland_cursor->scale;
-      *scale = wayland_cursor->scale;
+      *w = image->width / cursor_scale;
+      *h = image->height / cursor_scale;
+      *scale = cursor_scale;
 
       return wl_cursor_image_get_buffer (image);
     }
diff --git a/gdk/win32/Makefile.am b/gdk/win32/Makefile.am
index a2d52cecbe..586e8fddc0 100644
--- a/gdk/win32/Makefile.am
+++ b/gdk/win32/Makefile.am
@@ -1,5 +1,6 @@
 ## Process this file with automake to produce Makefile.in
 include $(top_srcdir)/Makefile.decl
+include gdk-win32-sources.inc
 
 libgdkincludedir = $(includedir)/gtk-3.0/gdk
 libgdkwin32includedir = $(includedir)/gtk-3.0/gdk/win32
@@ -35,95 +36,21 @@ EXTRA_DIST += \
 	makefile.msc \
 	meson.build
 
-libgdk_win32_la_SOURCES = \
-	gdkcursor-win32.c \
-	gdkdevicemanager-win32.c \
-	gdkdevicemanager-win32.h \
-	gdkdevice-virtual.c \
-	gdkdevice-virtual.h \
-	gdkdevice-win32.c \
-	gdkdevice-win32.h \
-	gdkdevice-winpointer.c \
-	gdkdevice-winpointer.h \
-	gdkdevice-wintab.c \
-	gdkdevice-wintab.h \
-	gdkdisplay-win32.c \
-	gdkdisplay-win32.h \
-	gdkdisplaymanager-win32.c \
-	gdkdnd-win32.c \
-	gdkevents-win32.c \
-	gdkgeometry-win32.c \
-	gdkglcontext-win32.c \
-	gdkglcontext-win32.h \
-	gdkglobals-win32.c \
-	gdkkeys-win32.c \
-	gdkkeys-win32.h \
-	gdkkeys-win32-impl.c \
-	gdkkeys-win32-impl-wow64.c \
-	gdkmain-win32.c \
-	gdkmonitor-win32.c \
-	gdkmonitor-win32.h \
-	gdkprivate-win32.h \
-	gdkproperty-win32.c \
-	gdkscreen-win32.c \
-	gdkselection-win32.c \
-	gdkselection-win32.h \
-	gdktestutils-win32.c \
-	gdkwin32cursor.h \
-	gdkwin32display.h \
-	gdkwin32displaymanager.h \
-	gdkwin32dnd.h \
-	gdkwin32dnd-private.h \
-	gdkwin32glcontext.h \
-	gdkwin32langnotification.c \
-	gdkwin32langnotification.h \
-	gdkwin32.h \
-	gdkwin32id.c \
-	gdkwin32keys.h \
-	gdkwin32monitor.h \
-	gdkwin32screen.h \
-	gdkwin32window.h \
-	gdkwindow-win32.c \
-	gdkwindow-win32.h \
-	pktdef.h \
-	winpointer.h \
-	wintab.h \
-	xcursors.h
-
 libgdk_win32_la_LIBADD = \
 	$(LDADDS) \
 	$(NULL)
 
-libgdkinclude_HEADERS =		\
-	gdkwin32.h
-
-libgdkwin32include_HEADERS =	\
-	gdkwin32cursor.h	\
-	gdkwin32display.h	\
-	gdkwin32displaymanager.h\
-	gdkwin32dnd.h		\
-	gdkwin32glcontext.h	\
-	gdkwin32keys.h		\
-	gdkwin32misc.h		\
-	gdkwin32monitor.h	\
-	gdkwin32screen.h	\
-	gdkwin32window.h
+libgdkinclude_HEADERS = $(GDK_PUBLIC_H_SRCS_WIN32)
 
 # ------------------- MSVC Build Items ----------------
 MSVCPROJS = gdk3-win32
 
 gdk3_win32_FILES = $(libgdk_win32_la_SOURCES)
 gdk3_win32_EXCLUDES = dummy
-gdk3_win32_HEADERS_DIR = $(libgdkwin32includedir)
-
-gdk3_win32_HEADERS_INST = $(libgdkwin32include_HEADERS)
-
-gdk3_win32_HEADERS_EXCLUDES = dummy
 
 include $(top_srcdir)/win32/Makefile.msvcproj
 
 dist-hook: \
-	$(top_builddir)/win32/vs9/gdk3-win32.vcproj	\
-	$(top_builddir)/win32/vs9/gdk3-win32.headers
+	$(top_builddir)/win32/vs9/gdk3-win32.vcproj
 
 -include $(top_srcdir)/git.mk
diff --git a/gdk/win32/gdk-win32-sources.inc b/gdk/win32/gdk-win32-sources.inc
new file mode 100644
index 0000000000..b162787058
--- /dev/null
+++ b/gdk/win32/gdk-win32-sources.inc
@@ -0,0 +1,72 @@
+# Public header list for GdkWin32
+
+GDK_PUBLIC_H_SRCS_WIN32 =		\
+	gdkwin32.h
+
+libgdkwin32include_HEADERS =	\
+	gdkwin32cursor.h	\
+	gdkwin32display.h	\
+	gdkwin32displaymanager.h\
+	gdkwin32dnd.h		\
+	gdkwin32glcontext.h	\
+	gdkwin32keys.h		\
+	gdkwin32misc.h		\
+	gdkwin32monitor.h	\
+	gdkwin32screen.h	\
+	gdkwin32window.h
+
+# Sources list for GdkWin32
+libgdk_win32_la_SOURCES = \
+	gdkcursor-win32.c \
+	gdkdevicemanager-win32.c \
+	gdkdevicemanager-win32.h \
+	gdkdevice-virtual.c \
+	gdkdevice-virtual.h \
+	gdkdevice-win32.c \
+	gdkdevice-win32.h \
+	gdkdevice-winpointer.c \
+	gdkdevice-winpointer.h \
+	gdkdevice-wintab.c \
+	gdkdevice-wintab.h \
+	gdkdisplay-win32.c \
+	gdkdisplay-win32.h \
+	gdkdisplaymanager-win32.c \
+	gdkdnd-win32.c \
+	gdkevents-win32.c \
+	gdkgeometry-win32.c \
+	gdkglcontext-win32.c \
+	gdkglcontext-win32.h \
+	gdkglobals-win32.c \
+	gdkkeys-win32.c \
+	gdkkeys-win32.h \
+	gdkkeys-win32-impl.c \
+	gdkkeys-win32-impl-wow64.c \
+	gdkmain-win32.c \
+	gdkmonitor-win32.c \
+	gdkmonitor-win32.h \
+	gdkprivate-win32.h \
+	gdkproperty-win32.c \
+	gdkscreen-win32.c \
+	gdkselection-win32.c \
+	gdkselection-win32.h \
+	gdktestutils-win32.c \
+	gdkwin32cursor.h \
+	gdkwin32display.h \
+	gdkwin32displaymanager.h \
+	gdkwin32dnd.h \
+	gdkwin32dnd-private.h \
+	gdkwin32glcontext.h \
+	gdkwin32langnotification.c \
+	gdkwin32langnotification.h \
+	gdkwin32.h \
+	gdkwin32id.c \
+	gdkwin32keys.h \
+	gdkwin32monitor.h \
+	gdkwin32screen.h \
+	gdkwin32window.h \
+	gdkwindow-win32.c \
+	gdkwindow-win32.h \
+	pktdef.h \
+	winpointer.h \
+	wintab.h \
+	xcursors.h
diff --git a/gtk/Makefile.am b/gtk/Makefile.am
index 8fde3a0f42..946e72febc 100644
--- a/gtk/Makefile.am
+++ b/gtk/Makefile.am
@@ -114,7 +114,7 @@ endif
 include $(srcdir)/a11y/Makefile.inc
 include $(srcdir)/deprecated/Makefile.inc
 include $(srcdir)/inspector/Makefile.inc
-include $(srcdir)/gtk-mkenums-headers.mak
+include $(srcdir)/gtk-sources.inc
 
 # GTK+ header files for public installation (non-generated, or generated
 # by configure)
@@ -122,651 +122,33 @@ include $(srcdir)/gtk-mkenums-headers.mak
 gtk_public_h_sources = $(GTK_PUB_HDRS)
 
 if OS_UNIX
-gtk_unix_print_public_h_sources = 	\
-	gtkpagesetupunixdialog.h	\
-	gtkprintunixdialog.h		\
-	gtkprinter.h			\
-	gtkprintjob.h			\
-	gtkunixprint-autocleanups.h	\
-	gtkunixprint.h
+gtk_unix_print_public_h_sources = $(GTK_UNIX_PRINT_PUB_HDRS)
 endif
 
-# Installed header files without compatibility guarantees
-# that are not included in gtk/gtk.h
-gtk_semi_private_h_sources = \
-	gtktextlayout.h
-
 gtk_private_type_h_sources = $(GTK_PRIVATE_TYPE_HDRS)
 
 # GTK+ header files that don't get installed
 gtk_private_h_sources =		\
 	$(inspector_h_sources)	\
 	$(gtk_private_type_h_sources) \
-	gtkactionmuxer.h	\
-	gtkactionobserver.h	\
-	gtkactionobservable.h	\
-	gtkadjustmentprivate.h	\
-	gtkapplicationaccelsprivate.h	\
-	gtkapplicationprivate.h	\
-	gtkaccelgroupprivate.h	\
-	gtkaccelmapprivate.h	\
-	gtkactionhelper.h	\
-	gtkallocatedbitmaskprivate.h	\
-	gtkappchooserprivate.h	\
-	gtkbindingsprivate.h	\
-	gtkbitmaskprivate.h	\
-	gtkbitmaskprivateimpl.h	\
-	gtkbookmarksmanager.h	\
-	gtkboxprivate.h         \
-	gtkboxgadgetprivate.h	\
-	gtkbuilderprivate.h	\
-	gtkbuiltiniconprivate.h	\
-	gtkbuttonprivate.h	\
-	gtkcairoblurprivate.h	\
-	gtkcellareaboxcontextprivate.h	\
-	gtkcheckbuttonprivate.h	\
-	gtkcheckmenuitemprivate.h	\
-	gtkclipboardprivate.h		\
-	gtkcolorswatchprivate.h	\
-	gtkcoloreditorprivate.h	\
-	gtkcolorpickerprivate.h	\
-	gtkcolorpickerkwinprivate.h	\
-	gtkcolorpickerportalprivate.h	\
-	gtkcolorpickershellprivate.h	\
-	gtkcolorplaneprivate.h	\
-	gtkcolorscaleprivate.h	\
-	gtkcolorchooserprivate.h	\
-	gtkcomboboxprivate.h	\
-	gtkcomposetable.h	\
-	gtkcontainerprivate.h   \
-	gtkcssanimationprivate.h	\
-	gtkcssanimatedstyleprivate.h	\
-	gtkcssarrayvalueprivate.h	\
-	gtkcssbgsizevalueprivate.h	\
-	gtkcssbordervalueprivate.h	\
-	gtkcsscalcvalueprivate.h	\
-	gtkcsscolorvalueprivate.h	\
-	gtkcsscornervalueprivate.h	\
-	gtkcsscustomgadgetprivate.h	\
-	gtkcsscustompropertyprivate.h 	\
-	gtkcssdimensionvalueprivate.h	\
-	gtkcsseasevalueprivate.h	\
-	gtkcssenginevalueprivate.h	\
-	gtkcssenumvalueprivate.h	\
-	gtkcssgadgetprivate.h		\
-	gtkcssiconthemevalueprivate.h	\
-	gtkcssimagebuiltinprivate.h	\
-	gtkcssimagecrossfadeprivate.h	\
-	gtkcssimagefallbackprivate.h	\
-	gtkcssimagegradientprivate.h	\
-	gtkcssimageiconthemeprivate.h	\
-	gtkcssimagelinearprivate.h	\
-	gtkcssimageradialprivate.h	\
-	gtkcssimageprivate.h	\
-	gtkcssimagesurfaceprivate.h	\
-	gtkcssimageurlprivate.h	\
-	gtkcssimagerecolorprivate.h	\
-	gtkcssimagescaledprivate.h	\
-	gtkcssimagevalueprivate.h	\
-	gtkcssimagewin32private.h	\
-	gtkcssinheritvalueprivate.h	\
-	gtkcssinitialvalueprivate.h	\
-	gtkcsskeyframesprivate.h	\
-	gtkcsslookupprivate.h	\
-	gtkcssmatcherprivate.h	\
-	gtkcssnodeprivate.h		\
-	gtkcssnodedeclarationprivate.h	\
-	gtkcssnodestylecacheprivate.h	\
-	gtkcssnumbervalueprivate.h	\
-	gtkcsspalettevalueprivate.h	\
-	gtkcssparserprivate.h	\
-	gtkcsspathnodeprivate.h	\
-	gtkcsspositionvalueprivate.h	\
-	gtkcssproviderprivate.h	\
-	gtkcssrepeatvalueprivate.h	\
-	gtkcssrgbavalueprivate.h	\
-	gtkcsssectionprivate.h 	\
-	gtkcssselectorprivate.h	\
-	gtkcssshadowsvalueprivate.h	\
-	gtkcssshadowvalueprivate.h      \
-	gtkcssshorthandpropertyprivate.h \
-	gtkcssstaticstyleprivate.h	\
-	gtkcssstringvalueprivate.h	\
-	gtkcssstylefuncsprivate.h \
-	gtkcssstylechangeprivate.h 	\
-	gtkcssstyleprivate.h 	\
-	gtkcssstylepropertyprivate.h \
-	gtkcsstransformvalueprivate.h	\
-	gtkcsstransientnodeprivate.h	\
-	gtkcsstransitionprivate.h	\
-	gtkcsstypedvalueprivate.h	\
-	gtkcssunsetvalueprivate.h	\
-	gtkcssvalueprivate.h	\
-	gtkcsswin32sizevalueprivate.h   \
-	gtkcsswidgetnodeprivate.h	\
-	gtkcustompaperunixdialog.h \
-	gtkdialogprivate.h 	\
-	gtkdndprivate.h		\
-	gtkemojichooser.h	\
-	gtkemojicompletion.h	\
-	gtkentryprivate.h	\
-	gtkeventcontrollerprivate.h	\
-	gtkfilechooserembed.h	\
-	gtkfilechooserentry.h	\
-	gtkfilechooserprivate.h	\
-	gtkfilechoosernativeprivate.h	\
-	gtkfilechooserwidgetprivate.h	\
-	gtkfilechooserutils.h	\
-	gtkfilefilterprivate.h	\
-	gtkfilesystem.h		\
-	gtkfilesystemmodel.h	\
-	gtkfontchooserprivate.h	\
-	gtkfontchooserutils.h	\
-	gtkfontchooserwidgetprivate.h \
-	gtkgestureprivate.h	\
-	gtkgesturedragprivate.h	\
-	gtkgesturelongpressprivate.h	\
-	gtkgesturemultipressprivate.h	\
-	gtkgesturepanprivate.h	\
-	gtkgesturerotateprivate.h	\
-	gtkgesturesingleprivate.h	\
-	gtkgesturestylusprivate.h	\
-	gtkgestureswipeprivate.h	\
-	gtkgesturezoomprivate.h	\
-	gtkheaderbarprivate.h	\
-	gtkhslaprivate.h	\
-	gtkiconcache.h		\
-	gtkiconhelperprivate.h  \
-	gtkiconprivate.h	\
-	gtkiconthemeprivate.h  \
-	gtkiconviewprivate.h	\
-	gtkimagedefinitionprivate.h	\
-	gtkimageprivate.h	\
-	gtkimmoduleprivate.h	\
-	gtkimcontextsimpleseqs.h \
-	gtkintl.h		\
-	gtkkeyhash.h		\
-	gtkkineticscrolling.h	\
-	gtklabelprivate.h	\
-	gtklockbuttonprivate.h	\
-	gtkmagnifierprivate.h	\
-	gtkmenubuttonprivate.h	\
-	gtkmenuprivate.h	\
-	gtkmenuitemprivate.h	\
-	gtkmenusectionbox.h	\
-	gtkmenushellprivate.h	\
-	gtkmenutracker.h	\
-	gtkmenutrackeritem.h	\
-	gtkmnemonichash.h	\
-	gtkmodelmenuitem.h	\
-	gtkmodifierstyle.h	\
-	gtkmodulesprivate.h	\
-	gtkmountoperationprivate.h \
-	gtknativedialogprivate.h \
-	gtkorientableprivate.h	\
-	gtkpango.h		\
-	gtkpathbar.h		\
-	gtkplacessidebarprivate.h	\
-	gtkplacesviewprivate.h	\
-	gtkplacesviewrowprivate.h	\
-	gtkpopoverprivate.h	\
-	gtkprintoperation-private.h \
-	gtkprintutils.h		\
-	gtkprivate.h		\
-	gtkpixelcacheprivate.h	\
-	gtkprogresstrackerprivate.h	\
-	gtkquery.h		\
-	gtkrangeprivate.h	\
-	gtkrbtree.h		\
-	gtkrecentchooserdefault.h \
-	gtkrecentchooserprivate.h \
-	gtkrecentchooserutils.h	\
-	gtkrenderbackgroundprivate.h \
-	gtkrenderborderprivate.h \
-	gtkrendericonprivate.h	\
-	gtkrenderprivate.h	\
-	gtkresources.h		\
-	gtkroundedboxprivate.h	\
-	gtksearchengine.h	\
-	gtksearchenginesimple.h	\
-	gtksearchenginemodel.h	\
-	gtksearchentryprivate.h \
-	gtkselectionprivate.h	\
-	gtksettingsprivate.h	\
-	gtkshortcutswindowprivate.h	\
-	gtkshortcutsshortcutprivate.h	\
-	gtksidebarrowprivate.h	\
-	gtksizegroup-private.h	\
-	gtksizerequestcacheprivate.h	\
-	gtksocketprivate.h	\
-	gtkstyleanimationprivate.h \
-	gtkstylecascadeprivate.h \
-	gtkstylecontextprivate.h \
-	gtkstylepropertyprivate.h \
-	gtkstyleproviderprivate.h \
-	gtktextattributesprivate.h \
-	gtktextbtree.h		\
-	gtktextbufferprivate.h \
-	gtktextbufferserialize.h \
-	gtktextchildprivate.h	\
-	gtktexthandleprivate.h	\
-	gtktextiterprivate.h	\
-	gtktextmarkprivate.h	\
-	gtktextsegment.h	\
-	gtktexttagprivate.h	\
-	gtktexttagtableprivate.h	\
-	gtktexttypes.h		\
-	gtktextutil.h		\
-	gtktrashmonitor.h	\
-	gtktogglebuttonprivate.h \
-	gtktoolbarprivate.h	\
-	gtktoolpaletteprivate.h	\
-	gtktooltipprivate.h	\
-	gtktooltipwindowprivate.h \
-	gtktreedatalist.h	\
-	gtktreeprivate.h	\
-	gtkutilsprivate.h	\
-	gtkwidgetprivate.h	\
-	gtkwidgetpathprivate.h	\
-	gtkwin32drawprivate.h	\
-	gtkwin32themeprivate.h	\
-	gtkwindowprivate.h	\
-	gtktreemenu.h		\
-	gdkpixbufutilsprivate.h \
-	open-type-layout.h	\
-	language-names.h	\
-	script-names.h
+	$(gtk_base_private_h_sources)
 
 # GTK+ C sources to build the library from
 gtk_base_c_sources = 		\
 	$(a11y_c_sources)	\
-	$(deprecated_c_sources)	\
+	$(gtk_deprecated_c_sources)	\
 	$(inspector_c_sources)	\
-	gtkactionmuxer.c	\
-	gtkactionobserver.c	\
-	gtkactionobservable.c	\
-	gtkactionable.c		\
-	gtkquery.c		\
-	gtksearchbar.c		\
-	gtksearchentry.c	\
-	gtksearchengine.c	\
-	gtksearchenginesimple.c	\
-	gtksearchenginemodel.c	\
-	fnmatch.c		\
-	gtkaboutdialog.c	\
-	gtkaccelgroup.c		\
-	gtkaccellabel.c		\
-	gtkaccelmap.c		\
-	gtkaccessible.c		\
-	gtkactionbar.c		\
-	gtkactionhelper.c	\
-	gtkadjustment.c		\
-	gtkallocatedbitmask.c	\
-	gtkappchooser.c		\
-	gtkappchooserwidget.c	\
-	gtkappchooserbutton.c	\
-	gtkappchooserdialog.c	\
-	gtkapplication.c	\
-	gtkapplicationaccels.c	\
-	gtkapplicationimpl.c	\
-	gtkapplicationwindow.c	\
-	gtkaspectframe.c	\
-	gtkassistant.c		\
-	gtkbbox.c		\
-	gtkbin.c		\
-	gtkbindings.c		\
-	gtkbookmarksmanager.c	\
-	gtkborder.c		\
-	gtkbox.c		\
-	gtkboxgadget.c		\
-	gtkbuildable.c		\
-	gtkbuilder.c		\
-	gtkbuilderparser.c	\
-	gtkbuilder-menus.c	\
-	gtkbuiltinicon.c	\
-	gtkbutton.c		\
-	gtkcairoblur.c		\
-	gtkcalendar.c		\
-	gtkcellarea.c		\
-	gtkcellareabox.c	\
-	gtkcellareaboxcontext.c	\
-	gtkcellareacontext.c	\
-	gtkcelleditable.c	\
-	gtkcelllayout.c		\
-	gtkcellrenderer.c	\
-	gtkcellrendereraccel.c	\
-	gtkcellrenderercombo.c	\
-	gtkcellrendererpixbuf.c	\
-	gtkcellrendererprogress.c \
-	gtkcellrendererspin.c	\
-	gtkcellrendererspinner.c \
-	gtkcellrenderertext.c	\
-	gtkcellrenderertoggle.c	\
-	gtkcellview.c		\
-	gtkcheckbutton.c	\
-	gtkcheckmenuitem.c	\
-	gtkcolorbutton.c	\
-	gtkcolorchooser.c	\
-	gtkcolorchooserwidget.c	\
-	gtkcolorchooserdialog.c	\
-	gtkcoloreditor.c	\
-	gtkcolorpicker.c	\
-	gtkcolorpickerkwin.c	\
-	gtkcolorpickerportal.c	\
-	gtkcolorpickershell.c	\
-	gtkcolorplane.c		\
-	gtkcolorscale.c		\
-	gtkcolorswatch.c	\
-	gtkcolorutils.c		\
-	gtkcombobox.c		\
-	gtkcomboboxtext.c	\
-	gtkcomposetable.c	\
-	gtkcontainer.c		\
-	gtkcssanimation.c	\
-	gtkcssanimatedstyle.c	\
-	gtkcssarrayvalue.c	\
-	gtkcssbgsizevalue.c	\
-	gtkcssbordervalue.c	\
-	gtkcsscalcvalue.c	\
-	gtkcsscolorvalue.c	\
-	gtkcsscornervalue.c	\
-	gtkcsscustomgadget.c	\
-	gtkcsscustomproperty.c	\
-	gtkcssdimensionvalue.c	\
-	gtkcsseasevalue.c	\
-	gtkcssenumvalue.c	\
-	gtkcssenginevalue.c	\
-	gtkcssgadget.c		\
-	gtkcssiconthemevalue.c	\
-	gtkcssimage.c		\
-	gtkcssimagebuiltin.c	\
-	gtkcssimagecrossfade.c	\
-	gtkcssimagefallback.c	\
-	gtkcssimagegradient.c	\
-	gtkcssimageicontheme.c	\
-	gtkcssimagelinear.c	\
-	gtkcssimageradial.c	\
-	gtkcssimagesurface.c	\
-	gtkcssimageurl.c	\
-	gtkcssimagerecolor.c	\
-	gtkcssimagescaled.c	\
-	gtkcssimagevalue.c	\
-	gtkcssimagewin32.c	\
-	gtkcssinheritvalue.c	\
-	gtkcssinitialvalue.c	\
-	gtkcsskeyframes.c	\
-	gtkcsslookup.c		\
-	gtkcssmatcher.c		\
-	gtkcssnode.c		\
-	gtkcssnodedeclaration.c	\
-	gtkcssnodestylecache.c	\
-	gtkcssnumbervalue.c	\
-	gtkcsspalettevalue.c	\
-	gtkcssparser.c		\
-	gtkcsspathnode.c	\
-	gtkcsspositionvalue.c	\
-	gtkcssprovider.c	\
-	gtkcssrepeatvalue.c	\
-	gtkcssrgbavalue.c	\
-	gtkcsssection.c 	\
-	gtkcssselector.c	\
-	gtkcssstringvalue.c	\
-	gtkcssstyle.c		\
-	gtkcssstylechange.c 	\
-	gtkcssshadowsvalue.c	\
-	gtkcssshadowvalue.c	\
-	gtkcssshorthandproperty.c \
-	gtkcssshorthandpropertyimpl.c \
-	gtkcssstaticstyle.c	\
-	gtkcssstylefuncs.c	\
-	gtkcssstyleproperty.c	\
-	gtkcssstylepropertyimpl.c \
-	gtkcsstransformvalue.c	\
-	gtkcsstransientnode.c	\
-	gtkcsstransition.c	\
-	gtkcsstypedvalue.c	\
-	gtkcssunsetvalue.c	\
-	gtkcsstypes.c		\
-	gtkcssvalue.c		\
-	gtkcsswidgetnode.c	\
-        gtkcsswin32sizevalue.c  \
-	gtkdialog.c		\
-	gtkdragsource.c		\
-	gtkdrawingarea.c	\
-	gtkeditable.c		\
-	gtkemojichooser.c	\
-	gtkemojicompletion.c	\
-	gtkentry.c		\
-	gtkentrybuffer.c	\
-	gtkentrycompletion.c	\
-	gtkeventbox.c		\
-	gtkeventcontroller.c	\
-	gtkeventcontrollerkey.c	\
-	gtkeventcontrollermotion.c	\
-	gtkeventcontrollerscroll.c	\
-	gtkexpander.c		\
-	gtkfilechooser.c	\
-	gtkfilechooserbutton.c	\
-	gtkfilechooserdialog.c	\
-	gtkfilechooserembed.c	\
-	gtkfilechooserentry.c	\
-	gtkfilechoosernative.c	\
-	gtkfilechoosernativeportal.c	\
-	gtkfilechooserutils.c	\
-	gtkfilechooserwidget.c	\
-	gtkfilefilter.c		\
-	gtkfilesystem.c		\
-	gtkfilesystemmodel.c	\
-	gtkfixed.c		\
-	gtkflowbox.c		\
-	gtkfontbutton.c		\
-	gtkfontchooser.c	\
-	gtkfontchooserdialog.c	\
-	gtkfontchooserutils.c	\
-	gtkfontchooserwidget.c	\
-	gtkframe.c		\
-	gtkgladecatalog.c	\
-	gtkgesture.c		\
-	gtkgesturedrag.c	\
-	gtkgesturelongpress.c	\
-	gtkgesturemultipress.c	\
-	gtkgesturepan.c		\
-	gtkgesturerotate.c	\
-	gtkgesturesingle.c	\
-	gtkgesturestylus.c	\
-	gtkgestureswipe.c	\
-	gtkgesturezoom.c	\
-	gtkglarea.c		\
-	gtkgrid.c		\
-	gtkheaderbar.c		\
-	gtkhsla.c		\
-	gtkicon.c		\
-	gtkiconcache.c		\
-	gtkiconcachevalidator.c	\
-	gtkiconhelper.c		\
-	gtkicontheme.c		\
-	gtkiconview.c		\
-	gtkimage.c		\
-	gtkimagedefinition.c	\
-	gtkimcontext.c		\
-	gtkimcontextsimple.c	\
-	gtkimmodule.c		\
-	gtkimmulticontext.c	\
-	gtkinfobar.c		\
-	gtkinvisible.c		\
-	gtkkeyhash.c		\
-	gtkkineticscrolling.c	\
-	gtklabel.c		\
-	gtklayout.c		\
-	gtklevelbar.c		\
-	gtklinkbutton.c		\
-	gtklistbox.c		\
-	gtkliststore.c		\
-	gtklockbutton.c		\
-	gtkmain.c		\
-	gtkmagnifier.c		\
-	gtkmenu.c		\
-	gtkmenubar.c		\
-	gtkmenubutton.c		\
-	gtkmenuitem.c		\
-	gtkmenusectionbox.c	\
-	gtkmenushell.c		\
-	gtkmenutracker.c	\
-	gtkmenutrackeritem.c	\
-	gtkmenutoolbutton.c	\
-	gtkmessagedialog.c	\
-	gtkmnemonichash.c	\
-	gtkmodelmenuitem.c	\
-	gtkmodelbutton.c	\
-	gtkmodifierstyle.c	\
-	gtkmodules.c		\
-	gtkmountoperation.c	\
-	gtknativedialog.c	\
-	gtknotebook.c		\
-	gtkoffscreenwindow.c	\
-	gtkorientable.c		\
-	gtkoverlay.c		\
-	gtkpadcontroller.c	\
-	gtkpagesetup.c		\
-	gtkpaned.c		\
-	gtkpango.c		\
-	gtkpapersize.c		\
-	gtkpathbar.c		\
-	gtkplacessidebar.c	\
-	gtkplacesview.c		\
-	gtkplacesviewrow.c	\
-	gtkprintcontext.c	\
-	gtkprintoperation.c	\
-	gtkprintoperationpreview.c \
-	gtkprintsettings.c	\
-	gtkprintutils.c		\
-	gtkprivate.c		\
-	gtkprogressbar.c	\
-	gtkprogresstracker.c	\
-	gtkpixelcache.c		\
-	gtkpopover.c		\
-	gtkpopovermenu.c	\
-	gtkradiobutton.c	\
-	gtkradiomenuitem.c	\
-	gtkradiotoolbutton.c	\
-	gtkrange.c		\
-	gtkrbtree.c		\
-	gtkrecentchooserdefault.c \
-	gtkrecentchooserdialog.c \
-	gtkrecentchoosermenu.c	\
-	gtkrecentchooserwidget.c \
-	gtkrecentchooserutils.c	\
-	gtkrecentchooser.c	\
-	gtkrecentfilter.c	\
-	gtkrecentmanager.c	\
-	gtkrender.c		\
-	gtkrenderbackground.c	\
-	gtkrenderborder.c	\
-	gtkrendericon.c		\
-	gtkrevealer.c		\
-	gtkroundedbox.c		\
-	gtkscale.c		\
-	gtkscalebutton.c	\
-	gtkscrollable.c		\
-	gtkscrollbar.c		\
-	gtkscrolledwindow.c	\
-	gtkselection.c		\
-	gtkseparator.c		\
-	gtkseparatormenuitem.c	\
-	gtkseparatortoolitem.c	\
-	gtksettings.c		\
-	gtkshortcutsgroup.c	\
-	gtkshortcutlabel.c	\
-	gtkshortcutsshortcut.c	\
-	gtkshortcutssection.c	\
-	gtkshortcutswindow.c	\
-	gtksidebarrow.c		\
-	gtksizegroup.c		\
-	gtksizerequest.c	\
-	gtksizerequestcache.c	\
-	gtkshow.c		\
-	gtkstacksidebar.c	\
-	gtkspinbutton.c		\
-	gtkspinner.c		\
-	gtkstack.c		\
-	gtkstackswitcher.c	\
-	gtkstatusbar.c		\
-	gtkstyleanimation.c	\
-	gtkstylecascade.c	\
-	gtkstylecontext.c	\
-	gtkstyleproperty.c	\
-	gtkstyleprovider.c	\
-	gtkstyleproviderprivate.c	\
-	gtkswitch.c		\
-	gtktestutils.c		\
-	gtktextattributes.c	\
-	gtktextbtree.c		\
-	gtktextbuffer.c		\
-	gtktextbufferrichtext.c	\
-	gtktextbufferserialize.c \
-	gtktextchild.c		\
-	gtktextdisplay.c	\
-	gtktexthandle.c		\
-	gtktextiter.c		\
-	gtktextlayout.c		\
-	gtktextmark.c		\
-	gtktextsegment.c	\
-	gtktexttag.c		\
-	gtktexttagtable.c	\
-	gtktexttypes.c		\
-	gtktextutil.c		\
-	gtktextview.c		\
-	gtktogglebutton.c	\
-	gtktoggletoolbutton.c	\
-	gtktoolbar.c		\
-	gtktoolbutton.c		\
-	gtktoolitem.c		\
-	gtktoolitemgroup.c	\
-	gtktoolpalette.c	\
-	gtktoolshell.c		\
-	gtktooltip.c		\
-	gtktooltipwindow.c	\
-	gtktrashmonitor.c	\
-	gtktreedatalist.c	\
-	gtktreednd.c		\
-	gtktreemenu.c		\
-	gtktreemodel.c		\
-	gtktreemodelfilter.c	\
-	gtktreemodelsort.c	\
-	gtktreeselection.c	\
-	gtktreesortable.c	\
-	gtktreestore.c		\
-	gtktreeview.c		\
-	gtktreeviewcolumn.c	\
-	gtkutils.c		\
-	gtkvolumebutton.c	\
-	gtkviewport.c		\
-	gtkwidget.c		\
-	gtkwidgetpath.c		\
-	gtkwindow.c		\
-	gtkwindowgroup.c	\
-	gtkwin32draw.c		\
-	gtkwin32theme.c		\
-	gdkpixbufutils.c	\
-	language-names.c	\
-	script-names.c
+	$(gtk_base_c_sources_base)
 
 if USE_QUARTZ
-gtk_base_c_sources += 		\
-	gtkclipboard-quartz.c	\
-	gtkdnd-quartz.c
+gtk_base_c_sources += $(gtk_clipboard_dnd_c_sources_quartz)
 else
-gtk_base_c_sources += 		\
-	gtkclipboard.c 		\
-	gtkdnd.c		\
-	gtkdragdest.c
+gtk_base_c_sources += $(gtk_clipboard_dnd_c_sources_generic)
 endif
 
 nodist_gtk_c_sources =
 gtk_c_sources = $(gtk_base_c_sources)
 
-gtk_dbus_built_sources = gtkdbusgenerated.c gtkdbusgenerated.h
-
 $(gtk_dbus_built_sources) : Makefile.am gtkdbusinterfaces.xml
 	$(AM_V_GEN) gdbus-codegen \
 	--interface-prefix org.Gtk. \
@@ -776,82 +158,24 @@ $(gtk_dbus_built_sources) : Makefile.am gtkdbusinterfaces.xml
 
 nodist_gtk_c_sources += $(gtk_dbus_built_sources)
 
-gtk_os_unix_c_sources = 		\
-	gtkcustompaperunixdialog.c	\
-	gtkpagesetupunixdialog.c	\
-	gtkprinter.c			\
-	gtkprinteroption.c		\
-	gtkprinteroptionset.c		\
-	gtkprinteroptionwidget.c	\
-	gtkprintjob.c			\
-	gtkprintoperation-unix.c	\
-	gtkprintoperation-portal.h	\
-	gtkprintoperation-portal.c	\
-	gtkprintunixdialog.c		\
-        gtkprintbackend.c		\
-	gtksearchenginetracker.c
+gtk_os_unix_c_sources = $(gtk_os_unix_c_sources_base)
 
 if OS_UNIX
-gtk_private_h_sources += \
-	gtkiconcachevalidator.h		\
-	gtkprintbackend.h		\
-	gtkprinter-private.h		\
-	gtkprinteroption.h		\
-	gtkprinteroptionset.h		\
-	gtkprinteroptionwidget.h	\
-	gtksearchenginetracker.h
+gtk_private_h_sources += $(gtk_os_unix_private_h_sources)
 
 if HAVE_TRACKER3
-gtk_private_h_sources += \
-	gtksearchenginetracker3.h
-gtk_os_unix_c_sources += \
-	gtksearchenginetracker3.c
+gtk_private_h_sources += $(gtk_os_unix_tracker3_private_h_sources)
+gtk_os_unix_c_sources += $(gtk_os_unix_tracker3_c_sources)
 endif
 
 gtk_c_sources += $(gtk_os_unix_c_sources)
 endif
 
-gtk_os_win32_c_sources = \
-	gtkprint-win32.c		\
-	gtkprintoperation-win32.c	\
-	gtkfilechoosernativewin32.c	\
-	gtkwin32.c
 if OS_WIN32
-gtk_private_h_sources += gtkprint-win32.h
+gtk_private_h_sources += $(gtk_os_win32_private_h_sources)
 gtk_c_sources += $(gtk_os_win32_c_sources)
 endif
 
-gtk_use_x11_c_sources = 	\
-	gtkplug.c		\
-	gtksocket.c		\
-	gtkxembed.c		\
-	deprecated/gtktrayicon-x11.c	\
-	gtkapplication-x11.c	\
-	gtkmountoperation-x11.c
-
-gtk_use_wayland_c_sources = \
-	gtkapplication-wayland.c
-
-gtk_use_wayland_or_x11_c_sources = \
-	gtkapplication-dbus.c
-
-gtk_use_win32_c_sources = 	\
-	gtkwin32embed.c		\
-	gtkwin32embedwidget.c	\
-	gtkmountoperation-stub.c
-gtk_use_quartz_c_sources = 	\
-	gtksearchenginequartz.c	\
-	gtkmountoperation-stub.c \
-	gtkapplication-quartz.c \
-	gtkapplication-quartz-menu.c \
-	gtkfilechoosernativequartz.c \
-	gtkquartz.c
-gtk_use_stub_c_sources = 	\
-	gtkmountoperation-stub.c
-gtk_use_x11_private_h_sources = 	\
-	gtkxembed.h		\
-	deprecated/gtktrayicon.h	\
-	xembed.h
 if USE_X11
 gtk_c_sources += $(gtk_use_x11_c_sources)
 gtk_private_h_sources += $(gtk_use_x11_private_h_sources)
@@ -871,17 +195,11 @@ else
 endif
 endif
 
-gtk_use_win32_private_h_sources = 	\
-	gtkwin32embed.h		\
-	gtkwin32embedwidget.h
 if USE_WIN32
 gtk_c_sources += $(gtk_use_win32_c_sources)
 gtk_private_h_sources += $(gtk_use_win32_private_h_sources)
 endif
 
-gtk_use_quartz_private_h_sources = 	\
-	gtksearchenginequartz.h	\
-	gtkquartz.h
 if USE_QUARTZ
 gtk_c_sources += $(gtk_use_quartz_c_sources)
 gtk_private_h_sources += $(gtk_use_quartz_private_h_sources)
@@ -889,7 +207,7 @@ endif
 
 gtk_all_private_h_sources = \
 	$(a11y_private_h_sources) \
-	$(deprecated_private_h_sources) \
+	$(gtk_deprecated_private_h_sources) \
 	$(gtk_private_h_sources) \
 	$(gtk_use_x11_private_h_sources) \
 	$(gtk_use_win32_private_h_sources) \
@@ -909,24 +227,10 @@ endif
 # depending on them only get rebuild when the built source actually changed
 # content
 
-# built sources that get installed with the header files
-gtk_built_public_sources =			\
-	gtktypebuiltins.h
-
-# built headers that don't get installed
-gtk_built_private_headers =			\
-	gtkresources.h				\
-	gtkmarshalers.h				\
-	gtkprivatetypebuiltins.h
-
 gtk_built_sources =				\
 	$(gtk_built_private_headers)		\
 	$(gtk_built_public_sources)		\
-	gtkresources.c				\
-	gtk.gresource.xml			\
-	gtktypebuiltins.c			\
-	gtkmarshalers.c				\
-	gtkprivatetypebuiltins.c
+	$(gtk_other_built_sources)
 
 nodist_gtk_c_sources += $(gtk_built_sources)
 
@@ -935,18 +239,6 @@ stamp_files =					\
 	stamp-gtktypebuiltins.h			\
 	stamp-gtkprivatetypebuiltins.h
 
-# non-header sources (headers should be specified in the above variables)
-# that don't serve as direct make target sources, i.e. they don't have
-# their own .lo rules and don't get publically installed
-gtk_extra_sources =				\
-	paper_names.c				\
-	paper_names_offsets.c			\
-	gen-paper-names.c			\
-	deprecated/gtkstatusicon-quartz.c	\
-	gtkversion.h.in				\
-	gtkmarshalers.list			\
-	fallback-c89.c
-
 #
 # setup GTK+ sources and their dependencies
 #
@@ -963,7 +255,9 @@ DISTCLEANFILES += gtk-win32.rc
 endif
 
 EXTRA_DIST += $(gtk_all_private_h_sources) $(gtk_extra_sources)
-EXTRA_DIST += $(gtk_built_sources)
+
+# We need to dist this for `make distcheck`, apparently...
+EXTRA_DIST += gtk.gresource.xml
 
 
 pkgdatadir = $(datadir)/gtk-$(GTK_API_VERSION)
@@ -978,38 +272,7 @@ EXTRA_DIST += $(its_DATA)
 
 templates =				\
 	$(inspector_templates)		\
-	ui/gtkapplication-quartz.ui	\
-	ui/gtkaboutdialog.ui		\
-	ui/gtkactionbar.ui		\
-	ui/gtkappchooserdialog.ui	\
-	ui/gtkappchooserwidget.ui	\
-	ui/gtkassistant.ui		\
-	ui/gtkcolorchooserdialog.ui	\
-	ui/gtkcoloreditor.ui		\
-	ui/gtkcombobox.ui		\
-	ui/gtkdialog.ui		\
-	ui/gtkfilechooserbutton.ui	\
-	ui/gtkemojichooser.ui		\
-	ui/gtkfilechooserwidget.ui	\
-	ui/gtkfilechooserdialog.ui	\
-	ui/gtkfontbutton.ui		\
-	ui/gtkfontchooserdialog.ui	\
-	ui/gtkfontchooserwidget.ui	\
-	ui/gtkinfobar.ui		\
-	ui/gtklockbutton.ui		\
-	ui/gtkmessagedialog.ui	\
-	ui/gtkpagesetupunixdialog.ui	\
-	ui/gtkpathbar.ui		\
-	ui/gtkplacesview.ui		\
-	ui/gtkplacesviewrow.ui		\
-	ui/gtkprintunixdialog.ui	\
-	ui/gtkrecentchooserdefault.ui	\
-	ui/gtksearchbar.ui		\
-	ui/gtkscalebutton.ui		\
-	ui/gtkstatusbar.ui		\
-	ui/gtktooltipwindow.ui		\
-	ui/gtkvolumebutton.ui		\
-	ui/gtksidebarrow.ui
+	$(gtk_base_ui_templates)
 
 #
 # rules to generate built sources
@@ -1134,27 +397,12 @@ gtk.gresource.xml: Makefile.am inspector/Makefile.inc
 	echo "  </gresource>" >> $@; \
 	echo "</gresources>" >> $@;
 
-gesture_sources = 				\
-	gesture/gesture-pinch-symbolic.svg			\
-	gesture/gesture-stretch-symbolic.svg			\
-	gesture/gesture-rotate-clockwise-symbolic.svg		\
-	gesture/gesture-rotate-anticlockwise-symbolic.svg	\
-	gesture/gesture-two-finger-swipe-left-symbolic.svg	\
-	gesture/gesture-two-finger-swipe-right-symbolic.svg
-
 adwaita_theme_scss = \
-	theme/Adwaita/_colors-public.scss 	\
-	theme/Adwaita/_colors.scss 		\
-	theme/Adwaita/_common.scss 		\
-	theme/Adwaita/_drawing.scss 		\
-	theme/Adwaita/gtk-contained-dark.scss 	\
-	theme/Adwaita/gtk-contained.scss 	\
+	$(adwaita_theme_scss_sources)	\
 	$()
 
 highcontrast_theme_scss = \
-	theme/HighContrast/_colors-hc.scss 	\
-	theme/HighContrast/gtk-contained-inverse.scss \
-	theme/HighContrast/gtk-contained.scss 	\
+	$(highcontrast_theme_scss_sources)	\
 	$()
 
 if REBUILD_SCSS
@@ -1182,21 +430,11 @@ theme/HighContrast/gtk-contained-inverse.css: $(top_srcdir)/gtk/theme/HighContra
 endif # REBUILD_SCSS
 
 theme_sources = 				\
-	theme/win32/gtk.css	 		\
-	theme/win32/gtk-win32-base.css 		\
+	$(win32_theme_css_sources)	\
 	$(adwaita_theme_scss)			\
-	theme/Adwaita/assets.txt 		\
-	theme/Adwaita/assets.svg 		\
-	theme/Adwaita/README 			\
-	theme/Adwaita/gtk-contained.css 	\
-	theme/Adwaita/gtk-contained-dark.css 	\
-	theme/Adwaita/gtk.css 			\
-	theme/Adwaita/gtk-dark.css 		\
+	$(adwaita_theme_files) 		\
 	$(highcontrast_theme_scss)		\
-	theme/HighContrast/gtk-contained.css 	\
-	theme/HighContrast/gtk-contained-inverse.css \
-	theme/HighContrast/gtk.css 		\
-	theme/HighContrast/gtk-inverse.css
+	$(highcontrast_theme_css_sources)
 
 resource_files = $(shell $(GLIB_COMPILE_RESOURCES) --sourcedir=$(srcdir) --generate-dependencies $(builddir)/gtk.gresource.xml)
 
@@ -1290,72 +528,11 @@ gtk_3_FILES = \
 	$(gtk_use_win32_c_sources)
 
 gtk_3_EXCLUDES = dummy
-gtk_3_HEADERS_DIR = $(gtkincludedir)
-
-gtk_3_HEADERS_INST = \
-	$(filter-out gtkversion.h, $(gtkinclude_HEADERS))	\
-	$(a11y_h_sources)	\
-	$(gtk_deprecated_h_sources)
-
-gtk_3_HEADERS_EXCLUDES = gtktypebuiltins.h
 
 include $(top_srcdir)/win32/Makefile.msvcproj
 
-if HAVE_INTROSPECTION
-# Introspection Items for MSVC
-MSVC_INTROSPECT_GIRS = Gtk-3.0.gir
-
-GTK_MSVC_GIR_CFLAGS =						\
-	$(GTK_BASE_CFLAGS_DEFINES)				\
-	-DGTK_LIBDIR=\\\"/dummy/lib\\\"				\
-	-DGTK_DATADIR=\\\"/dummy/share\\\"			\
-	-DGTK_DATA_PREFIX=\\\"/dummy\\\"			\
-	-DGTK_SYSCONFDIR=\\\"/dummy/etc\\\"			\
-	-DGTK_HOST=\\\"'$$$$(AT_PLAT)'-pc-vs'$$$$(VSVER)'\\\"	\
-	-DGTK_PRINT_BACKENDS=\\\"file\\\"			\
-	-DINCLUDE_IM_am_et			\
-	-DINCLUDE_IM_cedilla			\
-	-DINCLUDE_IM_cyrillic_translit		\
-	-DINCLUDE_IM_ime			\
-	-DINCLUDE_IM_inuktitu			\
-	-DINCLUDE_IM_ipa			\
-	-DINCLUDE_IM_multipress			\
-	-DINCLUDE_IM_thai			\
-	-DINCLUDE_IM_ti_er			\
-	-DINCLUDE_IM_ti_et			\
-	-DINCLUDE_IM_viqr			\
-	-DGTK_TEXT_USE_INTERNAL_UNSUPPORTED_API	\
-	-I'./vs$$$$(VSVER)/$$$$(CFG)/$$$$(PLAT)/obj/gtk-3'	\
-	-I'./vs$$$$(VSVER)/$$$$(CFG)/$$$$(PLAT)/obj/gdk-3' -I..	\
-	-I'./vs$$$$(VSVER)/$$$$(CFG)/$$$$(PLAT)/obj/gtk-3/gtk' -I../gtk	\
-	-I'./vs$$$$(VSVER)/$$$$(CFG)/$$$$(PLAT)/obj/gdk-3/gdk' -I../gdk
-
-INTROSPECTION_INTERMEDIATE_ITEMS = \
-	$(top_builddir)/win32/Gtk-3.0.gir.msvc.introspect		\
-	$(top_builddir)/win32/Gtk_3_0_gir_list
-
-Gtk_3_0_gir_MSVC_FILES =		\
-	$(filter-out gtktypebuiltins.h gtkversion.h, $(introspected_pub_headers)) \
-	$(gtk_base_c_sources)		\
-	$(gtk_os_win32_c_sources)
-
-Gtk_3_0_gir_MSVC_EXPORT_PACKAGES = $(Gtk_3_0_gir_EXPORT_PACKAGES)
-Gtk_3_0_gir_MSVC_INCLUDE_GIRS = Atk-1.0
-Gtk_3_0_gir_MSVC_LIBS = gtk-3.0 gdk-3.0
-Gtk_3_0_gir_MSVC_CFLAGS = $(GTK_MSVC_GIR_CFLAGS)
-Gtk_3_0_gir_MSVC_SCANNERFLAGS = --warn-all --include-uninstalled='./vs$$$$(VSVER)/$$$$(CFG)/$$$$(PLAT)/bin/Gdk-3.0.gir'
-
-include $(top_srcdir)/win32/Makefile.msvc-introspection
-
-else
-INTROSPECTION_INTERMEDIATE_ITEMS =
-
-endif
-
 dist-hook: \
-	$(top_builddir)/win32/vs9/gtk-3.vcproj	\
-	$(top_builddir)/win32/vs9/gtk-3.headers	\
-	$(INTROSPECTION_INTERMEDIATE_ITEMS)
+	$(top_builddir)/win32/vs9/gtk-3.vcproj
 
 # Install a RC file for the default GTK+ theme, and key themes
 install-data-local: install-ms-lib install-def-file install-mac-key-theme
diff --git a/gtk/deprecated/Makefile.inc b/gtk/deprecated/Makefile.inc
index a4d5811ba2..d1cdc5cdce 100644
--- a/gtk/deprecated/Makefile.inc
+++ b/gtk/deprecated/Makefile.inc
@@ -40,14 +40,14 @@ gtk_deprecated_h_sources = 		\
 	deprecated/gtkvseparator.h	\
 	deprecated/gtkvpaned.h
 
-deprecated_private_h_sources =			\
+gtk_deprecated_private_h_sources =		\
 	deprecated/gtkgradientprivate.h		\
 	deprecated/gtkiconfactoryprivate.h	\
 	deprecated/gtknumerableiconprivate.h	\
 	deprecated/gtkstylepropertiesprivate.h	\
 	deprecated/gtksymboliccolorprivate.h
 
-deprecated_c_sources = 			\
+gtk_deprecated_c_sources = 			\
 	deprecated/gtkactivatable.c	\
 	deprecated/gtkaction.c		\
 	deprecated/gtkactiongroup.c	\
diff --git a/gtk/gtk-mkenums-headers.mak b/gtk/gtk-mkenums-headers.mak
deleted file mode 100644
index 86c38f925c..0000000000
--- a/gtk/gtk-mkenums-headers.mak
+++ /dev/null
@@ -1,236 +0,0 @@
-# List of headers to be passed into glib-mkenums
-
-
-# GTK+ header files for public installation (non-generated, or generated
-# by configure)
-
-GTK_PUB_HDRS = 		\
-	gtk.h			\
-	gtk-autocleanups.h	\
-	gtkx.h			\
-	gtkx-autocleanups.h	\
-	gtk-a11y.h		\
-	gtkaboutdialog.h	\
-	gtkaccelgroup.h		\
-	gtkaccellabel.h		\
-	gtkaccelmap.h		\
-	gtkaccessible.h		\
-	gtkactionable.h		\
-	gtkactionbar.h		\
-	gtkadjustment.h		\
-	gtkappchooser.h		\
-	gtkappchooserbutton.h	\
-	gtkappchooserdialog.h	\
-	gtkappchooserwidget.h	\
-	gtkapplication.h	\
-	gtkapplicationwindow.h	\
-	gtkaspectframe.h	\
-	gtkassistant.h		\
-	gtkbbox.h		\
-	gtkbin.h		\
-	gtkbindings.h		\
-	gtkborder.h		\
-	gtkbox.h		\
-	gtkbuilder.h		\
-	gtkbuildable.h		\
-	gtkbutton.h		\
-	gtkcalendar.h		\
-	gtkcellarea.h		\
-	gtkcellareacontext.h	\
-	gtkcellareabox.h	\
-	gtkcelleditable.h	\
-	gtkcelllayout.h		\
-	gtkcellrenderer.h	\
-	gtkcellrendereraccel.h	\
-	gtkcellrenderercombo.h	\
-	gtkcellrendererpixbuf.h	\
-	gtkcellrendererprogress.h \
-	gtkcellrendererspin.h	\
-	gtkcellrendererspinner.h\
-	gtkcellrenderertext.h	\
-	gtkcellrenderertoggle.h	\
-	gtkcellview.h		\
-	gtkcheckbutton.h	\
-	gtkcheckmenuitem.h	\
-	gtkclipboard.h		\
-	gtkcolorbutton.h	\
-	gtkcolorchooser.h	\
-	gtkcolorchooserwidget.h	\
-	gtkcolorchooserdialog.h	\
-	gtkcolorutils.h		\
-	gtkcombobox.h		\
-	gtkcomboboxtext.h	\
-	gtkcontainer.h		\
-	gtkcssprovider.h	\
-	gtkcsssection.h 	\
-	gtkdebug.h		\
-	gtkdialog.h		\
-	gtkdnd.h		\
-	gtkdragdest.h		\
-	gtkdragsource.h		\
-	gtkdrawingarea.h	\
-	gtkeditable.h		\
-	gtkentry.h		\
-	gtkentrybuffer.h	\
-	gtkentrycompletion.h	\
-	gtkenums.h		\
-	gtkeventbox.h		\
-	gtkeventcontroller.h	\
-	gtkeventcontrollerkey.h	\
-	gtkeventcontrollermotion.h	\
-	gtkeventcontrollerscroll.h	\
-	gtkexpander.h		\
-	gtkfilechooser.h	\
-	gtkfilechooserbutton.h	\
-	gtkfilechooserdialog.h	\
-	gtkfilechoosernative.h	\
-	gtkfilechooserwidget.h	\
-	gtkfilefilter.h		\
-	gtkfixed.h		\
-	gtkflowbox.h		\
-	gtkfontbutton.h		\
-	gtkfontchooser.h	\
-	gtkfontchooserdialog.h  \
-	gtkfontchooserwidget.h	\
-	gtkframe.h		\
-	gtkgesture.h		\
-	gtkgesturedrag.h	\
-	gtkgesturelongpress.h	\
-	gtkgesturemultipress.h	\
-	gtkgesturepan.h		\
-	gtkgesturerotate.h	\
-	gtkgesturesingle.h	\
-	gtkgesturestylus.h	\
-	gtkgestureswipe.h	\
-	gtkgesturezoom.h	\
-	gtkglarea.h		\
-	gtkgrid.h		\
-	gtkheaderbar.h		\
-	gtkicontheme.h		\
-	gtkiconview.h		\
-	gtkimage.h		\
-	gtkimcontext.h		\
-	gtkimcontextinfo.h	\
-	gtkimcontextsimple.h	\
-	gtkimmodule.h		\
-	gtkimmulticontext.h	\
-	gtkinfobar.h		\
-	gtkinvisible.h		\
-	gtklabel.h		\
-	gtklayout.h		\
-	gtklevelbar.h		\
-	gtklinkbutton.h		\
-	gtklistbox.h		\
-	gtkliststore.h		\
-	gtklockbutton.h		\
-	gtkmain.h		\
-	gtkmenu.h		\
-	gtkmenubar.h		\
-	gtkmenubutton.h		\
-	gtkmenuitem.h		\
-	gtkmenushell.h		\
-	gtkmenutoolbutton.h	\
-	gtkmessagedialog.h	\
-	gtkmodelbutton.h	\
-	gtkmodules.h		\
-	gtkmountoperation.h	\
-	gtknativedialog.h	\
-	gtknotebook.h		\
-	gtkoffscreenwindow.h	\
-	gtkorientable.h		\
-	gtkoverlay.h		\
-	gtkpadcontroller.h	\
-	gtkpagesetup.h		\
-	gtkpaned.h		\
-	gtkpapersize.h		\
-	gtkplacessidebar.h	\
-	gtkplug.h		\
-	gtkpopover.h		\
-	gtkpopovermenu.h	\
-	gtkprintcontext.h	\
-	gtkprintoperation.h	\
-	gtkprintoperationpreview.h \
-	gtkprintsettings.h	\
-	gtkprogressbar.h	\
-	gtkradiobutton.h	\
-	gtkradiomenuitem.h	\
-	gtkradiotoolbutton.h	\
-	gtkrange.h		\
-	gtkrecentchooser.h	\
-	gtkrecentchooserdialog.h \
-	gtkrecentchoosermenu.h	\
-	gtkrecentchooserwidget.h \
-	gtkrecentfilter.h	\
-	gtkrecentmanager.h	\
-	gtkrender.h		\
-	gtkrevealer.h		\
-	gtkscale.h		\
-	gtkscalebutton.h	\
-	gtkscrollable.h		\
-	gtkscrollbar.h		\
-	gtkscrolledwindow.h	\
-	gtksearchbar.h		\
-	gtksearchentry.h	\
-	gtkselection.h		\
-	gtkseparator.h		\
-	gtkseparatormenuitem.h	\
-	gtkseparatortoolitem.h	\
-	gtksettings.h		\
-	gtkshortcutlabel.h	\
-	gtkshortcutsgroup.h	\
-	gtkshortcutssection.h	\
-	gtkshortcutsshortcut.h	\
-	gtkshortcutswindow.h	\
-	gtkshow.h		\
-	gtkstacksidebar.h	\
-	gtksizegroup.h		\
-	gtksizerequest.h	\
-	gtksocket.h		\
-	gtkspinbutton.h		\
-	gtkspinner.h		\
-	gtkstack.h		\
-	gtkstackswitcher.h	\
-	gtkstatusbar.h		\
-	gtkstylecontext.h	\
-	gtkstyleprovider.h	\
-	gtkswitch.h		\
-	gtktestutils.h		\
-	gtktextattributes.h	\
-	gtktextbuffer.h		\
-	gtktextbufferrichtext.h	\
-	gtktextchild.h		\
-	gtktextdisplay.h	\
-	gtktextiter.h		\
-	gtktextmark.h		\
-	gtktexttag.h		\
-	gtktexttagtable.h	\
-	gtktextview.h		\
-	gtktogglebutton.h	\
-	gtktoggletoolbutton.h	\
-	gtktoolbar.h		\
-	gtktoolbutton.h		\
-	gtktoolitem.h		\
-	gtktoolitemgroup.h	\
-	gtktoolpalette.h	\
-	gtktoolshell.h		\
-	gtktooltip.h		\
-	gtktreednd.h		\
-	gtktreemodel.h		\
-	gtktreemodelfilter.h	\
-	gtktreemodelsort.h	\
-	gtktreeselection.h	\
-	gtktreesortable.h	\
-	gtktreestore.h		\
-	gtktreeview.h		\
-	gtktreeviewcolumn.h	\
-	gtktypes.h		\
-	gtkviewport.h		\
-	gtkvolumebutton.h	\
-	gtkwidget.h		\
-	gtkwidgetpath.h		\
-	gtkwindow.h		\
-	gtkwindowgroup.h
-
-GTK_PRIVATE_TYPE_HDRS =	\
-	gtkcsstypesprivate.h	\
-	gtktexthandleprivate.h
diff --git a/gtk/gtk-sources.inc b/gtk/gtk-sources.inc
new file mode 100644
index 0000000000..a073ada426
--- /dev/null
+++ b/gtk/gtk-sources.inc
@@ -0,0 +1,1066 @@
+# List of headers to be passed into glib-mkenums
+
+
+# GTK+ header files for public installation (non-generated, or generated
+# by configure)
+
+GTK_PUB_HDRS = 		\
+	gtk.h			\
+	gtk-autocleanups.h	\
+	gtkx.h			\
+	gtkx-autocleanups.h	\
+	gtk-a11y.h		\
+	gtkaboutdialog.h	\
+	gtkaccelgroup.h		\
+	gtkaccellabel.h		\
+	gtkaccelmap.h		\
+	gtkaccessible.h		\
+	gtkactionable.h		\
+	gtkactionbar.h		\
+	gtkadjustment.h		\
+	gtkappchooser.h		\
+	gtkappchooserbutton.h	\
+	gtkappchooserdialog.h	\
+	gtkappchooserwidget.h	\
+	gtkapplication.h	\
+	gtkapplicationwindow.h	\
+	gtkaspectframe.h	\
+	gtkassistant.h		\
+	gtkbbox.h		\
+	gtkbin.h		\
+	gtkbindings.h		\
+	gtkborder.h		\
+	gtkbox.h		\
+	gtkbuilder.h		\
+	gtkbuildable.h		\
+	gtkbutton.h		\
+	gtkcalendar.h		\
+	gtkcellarea.h		\
+	gtkcellareacontext.h	\
+	gtkcellareabox.h	\
+	gtkcelleditable.h	\
+	gtkcelllayout.h		\
+	gtkcellrenderer.h	\
+	gtkcellrendereraccel.h	\
+	gtkcellrenderercombo.h	\
+	gtkcellrendererpixbuf.h	\
+	gtkcellrendererprogress.h \
+	gtkcellrendererspin.h	\
+	gtkcellrendererspinner.h\
+	gtkcellrenderertext.h	\
+	gtkcellrenderertoggle.h	\
+	gtkcellview.h		\
+	gtkcheckbutton.h	\
+	gtkcheckmenuitem.h	\
+	gtkclipboard.h		\
+	gtkcolorbutton.h	\
+	gtkcolorchooser.h	\
+	gtkcolorchooserwidget.h	\
+	gtkcolorchooserdialog.h	\
+	gtkcolorutils.h		\
+	gtkcombobox.h		\
+	gtkcomboboxtext.h	\
+	gtkcontainer.h		\
+	gtkcssprovider.h	\
+	gtkcsssection.h 	\
+	gtkdebug.h		\
+	gtkdialog.h		\
+	gtkdnd.h		\
+	gtkdragdest.h		\
+	gtkdragsource.h		\
+	gtkdrawingarea.h	\
+	gtkeditable.h		\
+	gtkentry.h		\
+	gtkentrybuffer.h	\
+	gtkentrycompletion.h	\
+	gtkenums.h		\
+	gtkeventbox.h		\
+	gtkeventcontroller.h	\
+	gtkeventcontrollerkey.h	\
+	gtkeventcontrollermotion.h	\
+	gtkeventcontrollerscroll.h	\
+	gtkexpander.h		\
+	gtkfilechooser.h	\
+	gtkfilechooserbutton.h	\
+	gtkfilechooserdialog.h	\
+	gtkfilechoosernative.h	\
+	gtkfilechooserwidget.h	\
+	gtkfilefilter.h		\
+	gtkfixed.h		\
+	gtkflowbox.h		\
+	gtkfontbutton.h		\
+	gtkfontchooser.h	\
+	gtkfontchooserdialog.h  \
+	gtkfontchooserwidget.h	\
+	gtkframe.h		\
+	gtkgesture.h		\
+	gtkgesturedrag.h	\
+	gtkgesturelongpress.h	\
+	gtkgesturemultipress.h	\
+	gtkgesturepan.h		\
+	gtkgesturerotate.h	\
+	gtkgesturesingle.h	\
+	gtkgesturestylus.h	\
+	gtkgestureswipe.h	\
+	gtkgesturezoom.h	\
+	gtkglarea.h		\
+	gtkgrid.h		\
+	gtkheaderbar.h		\
+	gtkicontheme.h		\
+	gtkiconview.h		\
+	gtkimage.h		\
+	gtkimcontext.h		\
+	gtkimcontextinfo.h	\
+	gtkimcontextsimple.h	\
+	gtkimmodule.h		\
+	gtkimmulticontext.h	\
+	gtkinfobar.h		\
+	gtkinvisible.h		\
+	gtklabel.h		\
+	gtklayout.h		\
+	gtklevelbar.h		\
+	gtklinkbutton.h		\
+	gtklistbox.h		\
+	gtkliststore.h		\
+	gtklockbutton.h		\
+	gtkmain.h		\
+	gtkmenu.h		\
+	gtkmenubar.h		\
+	gtkmenubutton.h		\
+	gtkmenuitem.h		\
+	gtkmenushell.h		\
+	gtkmenutoolbutton.h	\
+	gtkmessagedialog.h	\
+	gtkmodelbutton.h	\
+	gtkmodules.h		\
+	gtkmountoperation.h	\
+	gtknativedialog.h	\
+	gtknotebook.h		\
+	gtkoffscreenwindow.h	\
+	gtkorientable.h		\
+	gtkoverlay.h		\
+	gtkpadcontroller.h	\
+	gtkpagesetup.h		\
+	gtkpaned.h		\
+	gtkpapersize.h		\
+	gtkplacessidebar.h	\
+	gtkplug.h		\
+	gtkpopover.h		\
+	gtkpopovermenu.h	\
+	gtkprintcontext.h	\
+	gtkprintoperation.h	\
+	gtkprintoperationpreview.h \
+	gtkprintsettings.h	\
+	gtkprogressbar.h	\
+	gtkradiobutton.h	\
+	gtkradiomenuitem.h	\
+	gtkradiotoolbutton.h	\
+	gtkrange.h		\
+	gtkrecentchooser.h	\
+	gtkrecentchooserdialog.h \
+	gtkrecentchoosermenu.h	\
+	gtkrecentchooserwidget.h \
+	gtkrecentfilter.h	\
+	gtkrecentmanager.h	\
+	gtkrender.h		\
+	gtkrevealer.h		\
+	gtkscale.h		\
+	gtkscalebutton.h	\
+	gtkscrollable.h		\
+	gtkscrollbar.h		\
+	gtkscrolledwindow.h	\
+	gtksearchbar.h		\
+	gtksearchentry.h	\
+	gtkselection.h		\
+	gtkseparator.h		\
+	gtkseparatormenuitem.h	\
+	gtkseparatortoolitem.h	\
+	gtksettings.h		\
+	gtkshortcutlabel.h	\
+	gtkshortcutsgroup.h	\
+	gtkshortcutssection.h	\
+	gtkshortcutsshortcut.h	\
+	gtkshortcutswindow.h	\
+	gtkshow.h		\
+	gtkstacksidebar.h	\
+	gtksizegroup.h		\
+	gtksizerequest.h	\
+	gtksocket.h		\
+	gtkspinbutton.h		\
+	gtkspinner.h		\
+	gtkstack.h		\
+	gtkstackswitcher.h	\
+	gtkstatusbar.h		\
+	gtkstylecontext.h	\
+	gtkstyleprovider.h	\
+	gtkswitch.h		\
+	gtktestutils.h		\
+	gtktextattributes.h	\
+	gtktextbuffer.h		\
+	gtktextbufferrichtext.h	\
+	gtktextchild.h		\
+	gtktextdisplay.h	\
+	gtktextiter.h		\
+	gtktextmark.h		\
+	gtktexttag.h		\
+	gtktexttagtable.h	\
+	gtktextview.h		\
+	gtktogglebutton.h	\
+	gtktoggletoolbutton.h	\
+	gtktoolbar.h		\
+	gtktoolbutton.h		\
+	gtktoolitem.h		\
+	gtktoolitemgroup.h	\
+	gtktoolpalette.h	\
+	gtktoolshell.h		\
+	gtktooltip.h		\
+	gtktreednd.h		\
+	gtktreemodel.h		\
+	gtktreemodelfilter.h	\
+	gtktreemodelsort.h	\
+	gtktreeselection.h	\
+	gtktreesortable.h	\
+	gtktreestore.h		\
+	gtktreeview.h		\
+	gtktreeviewcolumn.h	\
+	gtktypes.h		\
+	gtkviewport.h		\
+	gtkvolumebutton.h	\
+	gtkwidget.h		\
+	gtkwidgetpath.h		\
+	gtkwindow.h		\
+	gtkwindowgroup.h
+
+GTK_PRIVATE_TYPE_HDRS =	\
+	gtkcsstypesprivate.h	\
+	gtktexthandleprivate.h
+
+GTK_UNIX_PRINT_PUB_HDRS = 	\
+	gtkpagesetupunixdialog.h	\
+	gtkprintunixdialog.h		\
+	gtkprinter.h			\
+	gtkprintjob.h			\
+	gtkunixprint-autocleanups.h	\
+	gtkunixprint.h
+
+# Installed header files without compatibility guarantees
+# that are not included in gtk/gtk.h
+gtk_semi_private_h_sources = \
+	gtktextlayout.h
+
+# Base non-generated private headers
+gtk_base_private_h_sources =	\
+	gtkactionmuxer.h	\
+	gtkactionobserver.h	\
+	gtkactionobservable.h	\
+	gtkadjustmentprivate.h	\
+	gtkapplicationaccelsprivate.h	\
+	gtkapplicationprivate.h	\
+	gtkaccelgroupprivate.h	\
+	gtkaccelmapprivate.h	\
+	gtkactionhelper.h	\
+	gtkallocatedbitmaskprivate.h	\
+	gtkappchooserprivate.h	\
+	gtkbindingsprivate.h	\
+	gtkbitmaskprivate.h	\
+	gtkbitmaskprivateimpl.h	\
+	gtkbookmarksmanager.h	\
+	gtkboxprivate.h         \
+	gtkboxgadgetprivate.h	\
+	gtkbuilderprivate.h	\
+	gtkbuiltiniconprivate.h	\
+	gtkbuttonprivate.h	\
+	gtkcairoblurprivate.h	\
+	gtkcellareaboxcontextprivate.h	\
+	gtkcheckbuttonprivate.h	\
+	gtkcheckmenuitemprivate.h	\
+	gtkclipboardprivate.h		\
+	gtkcolorswatchprivate.h	\
+	gtkcoloreditorprivate.h	\
+	gtkcolorpickerprivate.h	\
+	gtkcolorpickerkwinprivate.h	\
+	gtkcolorpickerportalprivate.h	\
+	gtkcolorpickershellprivate.h	\
+	gtkcolorplaneprivate.h	\
+	gtkcolorscaleprivate.h	\
+	gtkcolorchooserprivate.h	\
+	gtkcomboboxprivate.h	\
+	gtkcomposetable.h	\
+	gtkcontainerprivate.h   \
+	gtkcssanimationprivate.h	\
+	gtkcssanimatedstyleprivate.h	\
+	gtkcssarrayvalueprivate.h	\
+	gtkcssbgsizevalueprivate.h	\
+	gtkcssbordervalueprivate.h	\
+	gtkcsscalcvalueprivate.h	\
+	gtkcsscolorvalueprivate.h	\
+	gtkcsscornervalueprivate.h	\
+	gtkcsscustomgadgetprivate.h	\
+	gtkcsscustompropertyprivate.h 	\
+	gtkcssdimensionvalueprivate.h	\
+	gtkcsseasevalueprivate.h	\
+	gtkcssenginevalueprivate.h	\
+	gtkcssenumvalueprivate.h	\
+	gtkcssgadgetprivate.h		\
+	gtkcssiconthemevalueprivate.h	\
+	gtkcssimagebuiltinprivate.h	\
+	gtkcssimagecrossfadeprivate.h	\
+	gtkcssimagefallbackprivate.h	\
+	gtkcssimagegradientprivate.h	\
+	gtkcssimageiconthemeprivate.h	\
+	gtkcssimagelinearprivate.h	\
+	gtkcssimageradialprivate.h	\
+	gtkcssimageprivate.h	\
+	gtkcssimagesurfaceprivate.h	\
+	gtkcssimageurlprivate.h	\
+	gtkcssimagerecolorprivate.h	\
+	gtkcssimagescaledprivate.h	\
+	gtkcssimagevalueprivate.h	\
+	gtkcssimagewin32private.h	\
+	gtkcssinheritvalueprivate.h	\
+	gtkcssinitialvalueprivate.h	\
+	gtkcsskeyframesprivate.h	\
+	gtkcsslookupprivate.h	\
+	gtkcssmatcherprivate.h	\
+	gtkcssnodeprivate.h		\
+	gtkcssnodedeclarationprivate.h	\
+	gtkcssnodestylecacheprivate.h	\
+	gtkcssnumbervalueprivate.h	\
+	gtkcsspalettevalueprivate.h	\
+	gtkcssparserprivate.h	\
+	gtkcsspathnodeprivate.h	\
+	gtkcsspositionvalueprivate.h	\
+	gtkcssproviderprivate.h	\
+	gtkcssrepeatvalueprivate.h	\
+	gtkcssrgbavalueprivate.h	\
+	gtkcsssectionprivate.h 	\
+	gtkcssselectorprivate.h	\
+	gtkcssshadowsvalueprivate.h	\
+	gtkcssshadowvalueprivate.h      \
+	gtkcssshorthandpropertyprivate.h \
+	gtkcssstaticstyleprivate.h	\
+	gtkcssstringvalueprivate.h	\
+	gtkcssstylefuncsprivate.h \
+	gtkcssstylechangeprivate.h 	\
+	gtkcssstyleprivate.h 	\
+	gtkcssstylepropertyprivate.h \
+	gtkcsstransformvalueprivate.h	\
+	gtkcsstransientnodeprivate.h	\
+	gtkcsstransitionprivate.h	\
+	gtkcsstypedvalueprivate.h	\
+	gtkcssunsetvalueprivate.h	\
+	gtkcssvalueprivate.h	\
+	gtkcsswin32sizevalueprivate.h   \
+	gtkcsswidgetnodeprivate.h	\
+	gtkcustompaperunixdialog.h \
+	gtkdialogprivate.h 	\
+	gtkdndprivate.h		\
+	gtkemojichooser.h	\
+	gtkemojicompletion.h	\
+	gtkentryprivate.h	\
+	gtkeventcontrollerprivate.h	\
+	gtkfilechooserembed.h	\
+	gtkfilechooserentry.h	\
+	gtkfilechooserprivate.h	\
+	gtkfilechoosernativeprivate.h	\
+	gtkfilechooserwidgetprivate.h	\
+	gtkfilechooserutils.h	\
+	gtkfilefilterprivate.h	\
+	gtkfilesystem.h		\
+	gtkfilesystemmodel.h	\
+	gtkfontchooserprivate.h	\
+	gtkfontchooserutils.h	\
+	gtkfontchooserwidgetprivate.h \
+	gtkgestureprivate.h	\
+	gtkgesturedragprivate.h	\
+	gtkgesturelongpressprivate.h	\
+	gtkgesturemultipressprivate.h	\
+	gtkgesturepanprivate.h	\
+	gtkgesturerotateprivate.h	\
+	gtkgesturesingleprivate.h	\
+	gtkgesturestylusprivate.h	\
+	gtkgestureswipeprivate.h	\
+	gtkgesturezoomprivate.h	\
+	gtkheaderbarprivate.h	\
+	gtkhslaprivate.h	\
+	gtkiconcache.h		\
+	gtkiconhelperprivate.h  \
+	gtkiconprivate.h	\
+	gtkiconthemeprivate.h  \
+	gtkiconviewprivate.h	\
+	gtkimagedefinitionprivate.h	\
+	gtkimageprivate.h	\
+	gtkimmoduleprivate.h	\
+	gtkimcontextsimpleseqs.h \
+	gtkintl.h		\
+	gtkkeyhash.h		\
+	gtkkineticscrolling.h	\
+	gtklabelprivate.h	\
+	gtklockbuttonprivate.h	\
+	gtkmagnifierprivate.h	\
+	gtkmenubuttonprivate.h	\
+	gtkmenuprivate.h	\
+	gtkmenuitemprivate.h	\
+	gtkmenusectionbox.h	\
+	gtkmenushellprivate.h	\
+	gtkmenutracker.h	\
+	gtkmenutrackeritem.h	\
+	gtkmnemonichash.h	\
+	gtkmodelmenuitem.h	\
+	gtkmodifierstyle.h	\
+	gtkmodulesprivate.h	\
+	gtkmountoperationprivate.h \
+	gtknativedialogprivate.h \
+	gtkorientableprivate.h	\
+	gtkpango.h		\
+	gtkpathbar.h		\
+	gtkplacessidebarprivate.h	\
+	gtkplacesviewprivate.h	\
+	gtkplacesviewrowprivate.h	\
+	gtkpopoverprivate.h	\
+	gtkprintoperation-private.h \
+	gtkprintutils.h		\
+	gtkprivate.h		\
+	gtkpixelcacheprivate.h	\
+	gtkprogresstrackerprivate.h	\
+	gtkquery.h		\
+	gtkrangeprivate.h	\
+	gtkrbtree.h		\
+	gtkrecentchooserdefault.h \
+	gtkrecentchooserprivate.h \
+	gtkrecentchooserutils.h	\
+	gtkrenderbackgroundprivate.h \
+	gtkrenderborderprivate.h \
+	gtkrendericonprivate.h	\
+	gtkrenderprivate.h	\
+	gtkresources.h		\
+	gtkroundedboxprivate.h	\
+	gtksearchengine.h	\
+	gtksearchenginesimple.h	\
+	gtksearchenginemodel.h	\
+	gtksearchentryprivate.h \
+	gtkselectionprivate.h	\
+	gtksettingsprivate.h	\
+	gtkshortcutswindowprivate.h	\
+	gtkshortcutsshortcutprivate.h	\
+	gtksidebarrowprivate.h	\
+	gtksizegroup-private.h	\
+	gtksizerequestcacheprivate.h	\
+	gtksocketprivate.h	\
+	gtkstyleanimationprivate.h \
+	gtkstylecascadeprivate.h \
+	gtkstylecontextprivate.h \
+	gtkstylepropertyprivate.h \
+	gtkstyleproviderprivate.h \
+	gtktextattributesprivate.h \
+	gtktextbtree.h		\
+	gtktextbufferprivate.h \
+	gtktextbufferserialize.h \
+	gtktextchildprivate.h	\
+	gtktexthandleprivate.h	\
+	gtktextiterprivate.h	\
+	gtktextmarkprivate.h	\
+	gtktextsegment.h	\
+	gtktexttagprivate.h	\
+	gtktexttagtableprivate.h	\
+	gtktexttypes.h		\
+	gtktextutil.h		\
+	gtktrashmonitor.h	\
+	gtktogglebuttonprivate.h \
+	gtktoolbarprivate.h	\
+	gtktoolpaletteprivate.h	\
+	gtktooltipprivate.h	\
+	gtktooltipwindowprivate.h \
+	gtktreedatalist.h	\
+	gtktreeprivate.h	\
+	gtkutilsprivate.h	\
+	gtkwidgetprivate.h	\
+	gtkwidgetpathprivate.h	\
+	gtkwin32drawprivate.h	\
+	gtkwin32themeprivate.h	\
+	gtkwindowprivate.h	\
+	gtktreemenu.h		\
+	gdkpixbufutilsprivate.h \
+	open-type-layout.h	\
+	language-names.h	\
+	script-names.h
+
+# GTK base sources (had to split those in 2 parts to avoid U1095 error :|, order unchanged from before)
+# gtk_base_c_sources_base_gtka_gtkh: sources from gtka* to gtkh*, mostly
+# gtk_base_c_sources_base_gtki_gtkw: sources from gtki* to gtkw*, mostly
+gtk_base_c_sources_base_gtka_gtkh =	\
+	gtkactionmuxer.c	\
+	gtkactionobserver.c	\
+	gtkactionobservable.c	\
+	gtkactionable.c		\
+	gtkquery.c		\
+	gtksearchbar.c		\
+	gtksearchentry.c	\
+	gtksearchengine.c	\
+	gtksearchenginesimple.c	\
+	gtksearchenginemodel.c	\
+	fnmatch.c		\
+	gtkaboutdialog.c	\
+	gtkaccelgroup.c		\
+	gtkaccellabel.c		\
+	gtkaccelmap.c		\
+	gtkaccessible.c		\
+	gtkactionbar.c		\
+	gtkactionhelper.c	\
+	gtkadjustment.c		\
+	gtkallocatedbitmask.c	\
+	gtkappchooser.c		\
+	gtkappchooserwidget.c	\
+	gtkappchooserbutton.c	\
+	gtkappchooserdialog.c	\
+	gtkapplication.c	\
+	gtkapplicationaccels.c	\
+	gtkapplicationimpl.c	\
+	gtkapplicationwindow.c	\
+	gtkaspectframe.c	\
+	gtkassistant.c		\
+	gtkbbox.c		\
+	gtkbin.c		\
+	gtkbindings.c		\
+	gtkbookmarksmanager.c	\
+	gtkborder.c		\
+	gtkbox.c		\
+	gtkboxgadget.c		\
+	gtkbuildable.c		\
+	gtkbuilder.c		\
+	gtkbuilderparser.c	\
+	gtkbuilder-menus.c	\
+	gtkbuiltinicon.c	\
+	gtkbutton.c		\
+	gtkcairoblur.c		\
+	gtkcalendar.c		\
+	gtkcellarea.c		\
+	gtkcellareabox.c	\
+	gtkcellareaboxcontext.c	\
+	gtkcellareacontext.c	\
+	gtkcelleditable.c	\
+	gtkcelllayout.c		\
+	gtkcellrenderer.c	\
+	gtkcellrendereraccel.c	\
+	gtkcellrenderercombo.c	\
+	gtkcellrendererpixbuf.c	\
+	gtkcellrendererprogress.c \
+	gtkcellrendererspin.c	\
+	gtkcellrendererspinner.c \
+	gtkcellrenderertext.c	\
+	gtkcellrenderertoggle.c	\
+	gtkcellview.c		\
+	gtkcheckbutton.c	\
+	gtkcheckmenuitem.c	\
+	gtkcolorbutton.c	\
+	gtkcolorchooser.c	\
+	gtkcolorchooserwidget.c	\
+	gtkcolorchooserdialog.c	\
+	gtkcoloreditor.c	\
+	gtkcolorpicker.c	\
+	gtkcolorpickerkwin.c	\
+	gtkcolorpickerportal.c	\
+	gtkcolorpickershell.c	\
+	gtkcolorplane.c		\
+	gtkcolorscale.c		\
+	gtkcolorswatch.c	\
+	gtkcolorutils.c		\
+	gtkcombobox.c		\
+	gtkcomboboxtext.c	\
+	gtkcomposetable.c	\
+	gtkcontainer.c		\
+	gtkcssanimation.c	\
+	gtkcssanimatedstyle.c	\
+	gtkcssarrayvalue.c	\
+	gtkcssbgsizevalue.c	\
+	gtkcssbordervalue.c	\
+	gtkcsscalcvalue.c	\
+	gtkcsscolorvalue.c	\
+	gtkcsscornervalue.c	\
+	gtkcsscustomgadget.c	\
+	gtkcsscustomproperty.c	\
+	gtkcssdimensionvalue.c	\
+	gtkcsseasevalue.c	\
+	gtkcssenumvalue.c	\
+	gtkcssenginevalue.c	\
+	gtkcssgadget.c		\
+	gtkcssiconthemevalue.c	\
+	gtkcssimage.c		\
+	gtkcssimagebuiltin.c	\
+	gtkcssimagecrossfade.c	\
+	gtkcssimagefallback.c	\
+	gtkcssimagegradient.c	\
+	gtkcssimageicontheme.c	\
+	gtkcssimagelinear.c	\
+	gtkcssimageradial.c	\
+	gtkcssimagesurface.c	\
+	gtkcssimageurl.c	\
+	gtkcssimagerecolor.c	\
+	gtkcssimagescaled.c	\
+	gtkcssimagevalue.c	\
+	gtkcssimagewin32.c	\
+	gtkcssinheritvalue.c	\
+	gtkcssinitialvalue.c	\
+	gtkcsskeyframes.c	\
+	gtkcsslookup.c		\
+	gtkcssmatcher.c		\
+	gtkcssnode.c		\
+	gtkcssnodedeclaration.c	\
+	gtkcssnodestylecache.c	\
+	gtkcssnumbervalue.c	\
+	gtkcsspalettevalue.c	\
+	gtkcssparser.c		\
+	gtkcsspathnode.c	\
+	gtkcsspositionvalue.c	\
+	gtkcssprovider.c	\
+	gtkcssrepeatvalue.c	\
+	gtkcssrgbavalue.c	\
+	gtkcsssection.c 	\
+	gtkcssselector.c	\
+	gtkcssstringvalue.c	\
+	gtkcssstyle.c		\
+	gtkcssstylechange.c 	\
+	gtkcssshadowsvalue.c	\
+	gtkcssshadowvalue.c	\
+	gtkcssshorthandproperty.c \
+	gtkcssshorthandpropertyimpl.c \
+	gtkcssstaticstyle.c	\
+	gtkcssstylefuncs.c	\
+	gtkcssstyleproperty.c	\
+	gtkcssstylepropertyimpl.c \
+	gtkcsstransformvalue.c	\
+	gtkcsstransientnode.c	\
+	gtkcsstransition.c	\
+	gtkcsstypedvalue.c	\
+	gtkcssunsetvalue.c	\
+	gtkcsstypes.c		\
+	gtkcssvalue.c		\
+	gtkcsswidgetnode.c	\
+	gtkcsswin32sizevalue.c  \
+	gtkdialog.c		\
+	gtkdragsource.c		\
+	gtkdrawingarea.c	\
+	gtkeditable.c		\
+	gtkemojichooser.c	\
+	gtkemojicompletion.c	\
+	gtkentry.c		\
+	gtkentrybuffer.c	\
+	gtkentrycompletion.c	\
+	gtkeventbox.c		\
+	gtkeventcontroller.c	\
+	gtkeventcontrollerkey.c	\
+	gtkeventcontrollermotion.c	\
+	gtkeventcontrollerscroll.c	\
+	gtkexpander.c		\
+	gtkfilechooser.c	\
+	gtkfilechooserbutton.c	\
+	gtkfilechooserdialog.c	\
+	gtkfilechooserembed.c	\
+	gtkfilechooserentry.c	\
+	gtkfilechoosernative.c	\
+	gtkfilechoosernativeportal.c	\
+	gtkfilechooserutils.c	\
+	gtkfilechooserwidget.c	\
+	gtkfilefilter.c		\
+	gtkfilesystem.c		\
+	gtkfilesystemmodel.c	\
+	gtkfixed.c		\
+	gtkflowbox.c		\
+	gtkfontbutton.c		\
+	gtkfontchooser.c	\
+	gtkfontchooserdialog.c	\
+	gtkfontchooserutils.c	\
+	gtkfontchooserwidget.c	\
+	gtkframe.c		\
+	gtkgladecatalog.c	\
+	gtkgesture.c		\
+	gtkgesturedrag.c	\
+	gtkgesturelongpress.c	\
+	gtkgesturemultipress.c	\
+	gtkgesturepan.c		\
+	gtkgesturerotate.c	\
+	gtkgesturesingle.c	\
+	gtkgesturestylus.c	\
+	gtkgestureswipe.c	\
+	gtkgesturezoom.c	\
+	gtkglarea.c		\
+	gtkgrid.c		\
+	gtkheaderbar.c		\
+	gtkhsla.c
+
+gtk_base_c_sources_base_gtki_gtkw =	\
+	gtkicon.c		\
+	gtkiconcache.c		\
+	gtkiconcachevalidator.c	\
+	gtkiconhelper.c		\
+	gtkicontheme.c		\
+	gtkiconview.c		\
+	gtkimage.c		\
+	gtkimagedefinition.c	\
+	gtkimcontext.c		\
+	gtkimcontextsimple.c	\
+	gtkimmodule.c		\
+	gtkimmulticontext.c	\
+	gtkinfobar.c		\
+	gtkinvisible.c	\
+	gtkkeyhash.c		\
+	gtkkineticscrolling.c	\
+	gtklabel.c		\
+	gtklayout.c		\
+	gtklevelbar.c		\
+	gtklinkbutton.c		\
+	gtklistbox.c		\
+	gtkliststore.c		\
+	gtklockbutton.c		\
+	gtkmain.c		\
+	gtkmagnifier.c		\
+	gtkmenu.c		\
+	gtkmenubar.c		\
+	gtkmenubutton.c		\
+	gtkmenuitem.c		\
+	gtkmenusectionbox.c	\
+	gtkmenushell.c		\
+	gtkmenutracker.c	\
+	gtkmenutrackeritem.c	\
+	gtkmenutoolbutton.c	\
+	gtkmessagedialog.c	\
+	gtkmnemonichash.c	\
+	gtkmodelmenuitem.c	\
+	gtkmodelbutton.c	\
+	gtkmodifierstyle.c	\
+	gtkmodules.c		\
+	gtkmountoperation.c	\
+	gtknativedialog.c	\
+	gtknotebook.c		\
+	gtkoffscreenwindow.c	\
+	gtkorientable.c		\
+	gtkoverlay.c		\
+	gtkpadcontroller.c	\
+	gtkpagesetup.c		\
+	gtkpaned.c		\
+	gtkpango.c		\
+	gtkpapersize.c		\
+	gtkpathbar.c		\
+	gtkplacessidebar.c	\
+	gtkplacesview.c		\
+	gtkplacesviewrow.c	\
+	gtkprintcontext.c	\
+	gtkprintoperation.c	\
+	gtkprintoperationpreview.c \
+	gtkprintsettings.c	\
+	gtkprintutils.c		\
+	gtkprivate.c		\
+	gtkprogressbar.c	\
+	gtkprogresstracker.c	\
+	gtkpixelcache.c		\
+	gtkpopover.c		\
+	gtkpopovermenu.c	\
+	gtkradiobutton.c	\
+	gtkradiomenuitem.c	\
+	gtkradiotoolbutton.c	\
+	gtkrange.c		\
+	gtkrbtree.c		\
+	gtkrecentchooserdefault.c \
+	gtkrecentchooserdialog.c \
+	gtkrecentchoosermenu.c	\
+	gtkrecentchooserwidget.c \
+	gtkrecentchooserutils.c	\
+	gtkrecentchooser.c	\
+	gtkrecentfilter.c	\
+	gtkrecentmanager.c	\
+	gtkrender.c		\
+	gtkrenderbackground.c	\
+	gtkrenderborder.c	\
+	gtkrendericon.c		\
+	gtkrevealer.c		\
+	gtkroundedbox.c		\
+	gtkscale.c		\
+	gtkscalebutton.c	\
+	gtkscrollable.c		\
+	gtkscrollbar.c		\
+	gtkscrolledwindow.c	\
+	gtkselection.c		\
+	gtkseparator.c		\
+	gtkseparatormenuitem.c	\
+	gtkseparatortoolitem.c	\
+	gtksettings.c		\
+	gtkshortcutsgroup.c	\
+	gtkshortcutlabel.c	\
+	gtkshortcutsshortcut.c	\
+	gtkshortcutssection.c	\
+	gtkshortcutswindow.c	\
+	gtksidebarrow.c		\
+	gtksizegroup.c		\
+	gtksizerequest.c	\
+	gtksizerequestcache.c	\
+	gtkshow.c		\
+	gtkstacksidebar.c	\
+	gtkspinbutton.c		\
+	gtkspinner.c		\
+	gtkstack.c		\
+	gtkstackswitcher.c	\
+	gtkstatusbar.c		\
+	gtkstyleanimation.c	\
+	gtkstylecascade.c	\
+	gtkstylecontext.c	\
+	gtkstyleproperty.c	\
+	gtkstyleprovider.c	\
+	gtkstyleproviderprivate.c	\
+	gtkswitch.c		\
+	gtktestutils.c		\
+	gtktextattributes.c	\
+	gtktextbtree.c		\
+	gtktextbuffer.c		\
+	gtktextbufferrichtext.c	\
+	gtktextbufferserialize.c \
+	gtktextchild.c		\
+	gtktextdisplay.c	\
+	gtktexthandle.c		\
+	gtktextiter.c		\
+	gtktextlayout.c		\
+	gtktextmark.c		\
+	gtktextsegment.c	\
+	gtktexttag.c		\
+	gtktexttagtable.c	\
+	gtktexttypes.c		\
+	gtktextutil.c		\
+	gtktextview.c		\
+	gtktogglebutton.c	\
+	gtktoggletoolbutton.c	\
+	gtktoolbar.c		\
+	gtktoolbutton.c		\
+	gtktoolitem.c		\
+	gtktoolitemgroup.c	\
+	gtktoolpalette.c	\
+	gtktoolshell.c		\
+	gtktooltip.c		\
+	gtktooltipwindow.c	\
+	gtktrashmonitor.c	\
+	gtktreedatalist.c	\
+	gtktreednd.c		\
+	gtktreemenu.c		\
+	gtktreemodel.c		\
+	gtktreemodelfilter.c	\
+	gtktreemodelsort.c	\
+	gtktreeselection.c	\
+	gtktreesortable.c	\
+	gtktreestore.c		\
+	gtktreeview.c		\
+	gtktreeviewcolumn.c	\
+	gtkutils.c		\
+	gtkvolumebutton.c	\
+	gtkviewport.c		\
+	gtkwidget.c		\
+	gtkwidgetpath.c		\
+	gtkwindow.c		\
+	gtkwindowgroup.c	\
+	gtkwin32draw.c		\
+	gtkwin32theme.c		\
+	gdkpixbufutils.c	\
+	language-names.c	\
+	script-names.c
+
+gtk_base_c_sources_base = $(gtk_base_c_sources_base_gtka_gtkh) $(gtk_base_c_sources_base_gtki_gtkw)
+
+# Clipboard/dnd platform-specific sources
+gtk_clipboard_dnd_c_sources_quartz =	\
+	gtkclipboard-quartz.c	\
+	gtkdnd-quartz.c
+
+gtk_clipboard_dnd_c_sources_generic =	\
+	gtkclipboard.c 		\
+	gtkdnd.c		\
+	gtkdragdest.c
+
+# Stub sources
+gtk_use_stub_c_sources = 	\
+	gtkmountoperation-stub.c
+	
+# Base platform-specific sources
+gtk_os_unix_c_sources_base =	\
+	gtkcustompaperunixdialog.c	\
+	gtkpagesetupunixdialog.c	\
+	gtkprinter.c			\
+	gtkprinteroption.c		\
+	gtkprinteroptionset.c		\
+	gtkprinteroptionwidget.c	\
+	gtkprintjob.c			\
+	gtkprintoperation-unix.c	\
+	gtkprintoperation-portal.h	\
+	gtkprintoperation-portal.c	\
+	gtkprintunixdialog.c		\
+	gtkprintbackend.c		\
+	gtksearchenginetracker.c
+
+gtk_os_unix_private_h_sources =	\
+	gtkiconcachevalidator.h		\
+	gtkprintbackend.h		\
+	gtkprinter-private.h		\
+	gtkprinteroption.h		\
+	gtkprinteroptionset.h		\
+	gtkprinteroptionwidget.h	\
+	gtksearchenginetracker.h
+
+gtk_os_unix_tracker3_private_h_sources = gtksearchenginetracker3.h
+gtk_os_unix_tracker3_c_sources = gtksearchenginetracker3.c
+
+gtk_use_wayland_c_sources = \
+	gtkapplication-wayland.c
+
+gtk_use_wayland_or_x11_c_sources = \
+	gtkapplication-dbus.c
+
+gtk_use_x11_c_sources = 	\
+	gtkplug.c		\
+	gtksocket.c		\
+	gtkxembed.c		\
+	deprecated/gtktrayicon-x11.c	\
+	gtkapplication-x11.c	\
+	gtkmountoperation-x11.c
+
+gtk_use_x11_private_h_sources = 	\
+	gtkxembed.h		\
+	deprecated/gtktrayicon.h	\
+	xembed.h
+
+gtk_os_win32_c_sources = \
+	gtkprint-win32.c		\
+	gtkprintoperation-win32.c	\
+	gtkfilechoosernativewin32.c	\
+	gtkwin32.c
+
+gtk_os_win32_private_h_sources = gtkprint-win32.h
+
+gtk_use_win32_private_h_sources = 	\
+	gtkwin32embed.h		\
+	gtkwin32embedwidget.h
+
+gtk_use_win32_c_sources = 	\
+	gtkwin32embed.c		\
+	gtkwin32embedwidget.c	\
+	$(gtk_use_stub_c_sources)
+
+gtk_use_quartz_c_sources = 	\
+	gtksearchenginequartz.c	\
+	$(gtk_use_stub_c_sources) \
+	gtkapplication-quartz.c \
+	gtkapplication-quartz-menu.c \
+	gtkfilechoosernativequartz.c \
+	gtkquartz.c
+
+gtk_use_quartz_private_h_sources = 	\
+	gtksearchenginequartz.h	\
+	gtkquartz.h
+
+# Generated sources
+# built sources that get installed with the header files
+gtk_built_public_sources =			\
+	gtktypebuiltins.h
+
+# built headers that don't get installed
+gtk_dbus_built_sources = gtkdbusgenerated.c gtkdbusgenerated.h
+
+gtk_built_private_headers =			\
+	gtkresources.h				\
+	gtkmarshalers.h				\
+	gtkprivatetypebuiltins.h
+
+gtk_other_built_sources =	\
+	gtkresources.c				\
+	gtk.gresource.xml			\
+	gtktypebuiltins.c			\
+	gtkmarshalers.c				\
+	gtkprivatetypebuiltins.c
+
+# non-header sources (headers should be specified in the above variables)
+# that don't serve as direct make target sources, i.e. they don't have
+# their own .lo rules and don't get publically installed
+gtk_extra_sources =				\
+	paper_names.c				\
+	paper_names_offsets.c			\
+	gen-paper-names.c			\
+	deprecated/gtkstatusicon-quartz.c	\
+	gtkversion.h.in				\
+	gtkmarshalers.list			\
+	fallback-c89.c
+
+# Resources
+# Base UI templates
+gtk_base_ui_templates =	\
+	ui/gtkapplication-quartz.ui	\
+	ui/gtkaboutdialog.ui		\
+	ui/gtkactionbar.ui		\
+	ui/gtkappchooserdialog.ui	\
+	ui/gtkappchooserwidget.ui	\
+	ui/gtkassistant.ui		\
+	ui/gtkcolorchooserdialog.ui	\
+	ui/gtkcoloreditor.ui		\
+	ui/gtkcombobox.ui		\
+	ui/gtkdialog.ui		\
+	ui/gtkfilechooserbutton.ui	\
+	ui/gtkemojichooser.ui		\
+	ui/gtkfilechooserwidget.ui	\
+	ui/gtkfilechooserdialog.ui	\
+	ui/gtkfontbutton.ui		\
+	ui/gtkfontchooserdialog.ui	\
+	ui/gtkfontchooserwidget.ui	\
+	ui/gtkinfobar.ui		\
+	ui/gtklockbutton.ui		\
+	ui/gtkmessagedialog.ui	\
+	ui/gtkpagesetupunixdialog.ui	\
+	ui/gtkpathbar.ui		\
+	ui/gtkplacesview.ui		\
+	ui/gtkplacesviewrow.ui		\
+	ui/gtkprintunixdialog.ui	\
+	ui/gtkrecentchooserdefault.ui	\
+	ui/gtksearchbar.ui		\
+	ui/gtkscalebutton.ui		\
+	ui/gtkstatusbar.ui		\
+	ui/gtktooltipwindow.ui		\
+	ui/gtkvolumebutton.ui		\
+	ui/gtksidebarrow.ui
+
+gesture_sources = 				\
+	gesture/gesture-pinch-symbolic.svg			\
+	gesture/gesture-stretch-symbolic.svg			\
+	gesture/gesture-rotate-clockwise-symbolic.svg		\
+	gesture/gesture-rotate-anticlockwise-symbolic.svg	\
+	gesture/gesture-two-finger-swipe-left-symbolic.svg	\
+	gesture/gesture-two-finger-swipe-right-symbolic.svg
+
+adwaita_theme_css_sources =	\
+	theme/Adwaita/gtk-contained.css 	\
+	theme/Adwaita/gtk-contained-dark.css 	\
+	theme/Adwaita/gtk.css 			\
+	theme/Adwaita/gtk-dark.css
+
+adwaita_theme_scss_sources =	\
+	theme/Adwaita/_colors-public.scss 	\
+	theme/Adwaita/_colors.scss 		\
+	theme/Adwaita/_common.scss 		\
+	theme/Adwaita/_drawing.scss 		\
+	theme/Adwaita/gtk-contained-dark.scss 	\
+	theme/Adwaita/gtk-contained.scss
+
+adwaita_theme_files =	\
+	theme/Adwaita/assets.txt 		\
+	theme/Adwaita/assets.svg 		\
+	theme/Adwaita/README 			\
+	$(adwaita_theme_css_sources)
+
+highcontrast_theme_css_sources =	\
+	theme/HighContrast/gtk-contained.css 	\
+	theme/HighContrast/gtk-contained-inverse.css \
+	theme/HighContrast/gtk.css 		\
+	theme/HighContrast/gtk-inverse.css
+
+highcontrast_theme_scss_sources =	\
+	theme/HighContrast/_colors-hc.scss 	\
+	theme/HighContrast/gtk-contained-inverse.scss \
+	theme/HighContrast/gtk-contained.scss
+
+win32_theme_css_sources =	\
+	theme/win32/gtk.css	 		\
+	theme/win32/gtk-win32-base.css
+	
+
diff --git a/gtk/gtkdnd-quartz.c b/gtk/gtkdnd-quartz.c
index 3460de6edd..225c9353d2 100644
--- a/gtk/gtkdnd-quartz.c
+++ b/gtk/gtkdnd-quartz.c
@@ -42,7 +42,7 @@
 #include "gtkintl.h"
 #include "gtkquartz.h"
 #include "gdk/quartz/gdkquartz.h"
-#include "gdk/quartz/gdkquartz-cocoa-access.h"
+#include "gdk/quartz/gdkinternal-quartz.h"
 #include "gdk/quartz/gdkquartz-gtk-only.h"
 #include "gdk/quartz/gdkquartzdnd.h"
 #include "gtkselectionprivate.h"
@@ -364,7 +364,7 @@ get_toplevel_nswindow (GtkWidget *widget)
     return NULL;
 
   if (gtk_widget_is_toplevel (toplevel) && window)
-    return [gdk_quartz_window_get_nsview (window) window];
+    return [gdk_quartz_window_search_for_nearest_nsview (window) window];
   else
     return NULL;
 }
diff --git a/gtk/gtkfilechoosernativequartz.c b/gtk/gtkfilechoosernativequartz.c
index fb5abd5390..e295143b97 100644
--- a/gtk/gtkfilechoosernativequartz.c
+++ b/gtk/gtkfilechoosernativequartz.c
@@ -40,7 +40,7 @@
 #include "gtklabel.h"
 #include "gtkfilechooserentry.h"
 #include "gtkfilefilterprivate.h"
-#include <quartz/gdkquartz-cocoa-access.h>
+#include "gdk/quartz/gdkinternal-quartz.h"
 
 #if MAC_OS_X_VERSION_MAX_ALLOWED >= 1060
 typedef struct {
@@ -533,7 +533,7 @@ gtk_file_chooser_native_quartz_show (GtkFileChooserNative *self)
   if (transient_for)
     {
       gtk_widget_realize (GTK_WIDGET (transient_for));
-      data->parent = gdk_quartz_window_get_nswindow (gtk_widget_get_window (GTK_WIDGET (transient_for)));
+      data->parent = gdk_quartz_window_search_for_nearest_nswindow (gtk_widget_get_window (GTK_WIDGET (transient_for)));
 
       if (gtk_native_dialog_get_modal (GTK_NATIVE_DIALOG (self)))
         data->modal = TRUE;
diff --git a/libgail-util/Makefile.am b/libgail-util/Makefile.am
index cfeb366060..0b389ad8b8 100644
--- a/libgail-util/Makefile.am
+++ b/libgail-util/Makefile.am
@@ -1,4 +1,5 @@
 include $(top_srcdir)/Makefile.decl
+include libgail-util-sources.inc
 
 EXTRA_DIST += \
 	gailutil.def \
@@ -35,17 +36,8 @@ endif
 
 lib_LTLIBRARIES = libgailutil-3.la
 
-util_c_sources =		\
-	gailmisc.c		\
-	gailtextutil.c
-
 libgailutilincludedir=$(includedir)/gail-3.0/libgail-util
 
-util_public_h_sources =		\
-	gailmisc.h		\
-	gailtextutil.h		\
-	gail-util.h
-
 libgailutil_3_la_SOURCES = 	\
 	$(util_c_sources)
 
@@ -90,16 +82,10 @@ MSVCPROJS = gailutil-3
 gailutil_3_FILES = $(libgailutil_3_la_SOURCES)
 
 gailutil_3_EXCLUDES = dummy
-gailutil_3_HEADERS_DIR = $(libgailutilincludedir)
-
-gailutil_3_HEADERS_INST = $(libgailutilinclude_HEADERS)
-
-gailutil_3_HEADERS_EXCLUDES = dummy
 
 include $(top_srcdir)/win32/Makefile.msvcproj
 
 dist-hook: \
-	$(top_builddir)/win32/vs9/gailutil-3.vcproj	\
-	$(top_builddir)/win32/vs9/gailutil-3.headers
+	$(top_builddir)/win32/vs9/gailutil-3.vcproj
 
 -include $(top_srcdir)/git.mk
diff --git a/libgail-util/libgail-util-sources.inc b/libgail-util/libgail-util-sources.inc
new file mode 100644
index 0000000000..4f71e1aa62
--- /dev/null
+++ b/libgail-util/libgail-util-sources.inc
@@ -0,0 +1,10 @@
+# Source listings for libgail-util
+
+util_c_sources =		\
+	gailmisc.c		\
+	gailtextutil.c
+
+util_public_h_sources =		\
+	gailmisc.h		\
+	gailtextutil.h		\
+	gail-util.h
diff --git a/modules/input/imquartz.c b/modules/input/imquartz.c
index bdee6da2f4..084e04f603 100644
--- a/modules/input/imquartz.c
+++ b/modules/input/imquartz.c
@@ -227,7 +227,7 @@ quartz_filter_keypress (GtkIMContext *context,
         return gtk_im_context_filter_keypress (qc->slave, event);
     }
 
-  nsview = gdk_quartz_window_get_nsview (qc->client_window);
+  nsview = gdk_quartz_window_search_for_nearest_nsview (qc->client_window);
 
   win = (GdkWindow *)[(GdkQuartzView *)[[nsevent window] contentView] gdkWindow];
   GTK_NOTE (MISC, g_print ("client_window: %p, win: %p, nsview: %p\n",
@@ -272,7 +272,7 @@ discard_preedit (GtkIMContext *context)
   if (!GDK_IS_QUARTZ_WINDOW (qc->client_window))
     return;
 
-  NSView *nsview = gdk_quartz_window_get_nsview (qc->client_window);
+  NSView *nsview = gdk_quartz_window_search_for_nearest_nsview (qc->client_window);
   if (!nsview)
     return;
 
@@ -361,8 +361,17 @@ quartz_set_cursor_location (GtkIMContext *context, GdkRectangle *area)
   if (!GDK_IS_QUARTZ_WINDOW (qc->client_window))
     return;
 
-  nsview = gdk_quartz_window_get_nsview (qc->client_window);
-  win = (GdkWindow *)[ (GdkQuartzView*)nsview gdkWindow];
+  nsview = gdk_quartz_window_search_for_nearest_nsview (qc->client_window);
+  if (nsview == NULL)
+    return;
+
+  win = (GdkWindow *)[(GdkQuartzView*)nsview gdkWindow];
+  if (win == NULL)
+    {
+      g_warning ("quartz_set_cursor_location received NULL gdkWindow");
+      return;
+    }
+
   g_object_set_data (G_OBJECT (win), GIC_CURSOR_RECT, qc->cursor_rect);
 }
 
diff --git a/win32/Makefile-newvs.am b/win32/Makefile-newvs.am
index a68e2f99ca..44c927a867 100644
--- a/win32/Makefile-newvs.am
+++ b/win32/Makefile-newvs.am
@@ -38,13 +38,6 @@ endif
 		sed 's/v100/v$(MSVC_TOOLSET)/g' < $(top_builddir)/win32/vs10/$@ > $(top_builddir)/win32/vs$(MSVC_VER)/$@; \
 	fi
 
-%.props: $(top_builddir)/win32/vs10/Makefile
-	if test -e $(top_srcdir)/win32/vs10/$@; then \
-		sed 's/<VSVer>10<\/VSVer>/<VSVer>$(MSVC_VER)<\/VSVer>/g' < $(top_srcdir)/win32/vs10/$@ > $(top_builddir)/win32/vs$(MSVC_VER)/$@; \
-	elif test -e $(top_builddir)/win32/vs10/$@; then \
-		sed 's/<VSVer>10<\/VSVer>/<VSVer>$(MSVC_VER)<\/VSVer>/g' < $(top_builddir)/win32/vs10/$@ > $(top_builddir)/win32/vs$(MSVC_VER)/$@; \
-	fi
-
 %.vcxproj.filters: $(top_builddir)/win32/vs10/Makefile
 	if test -e $(top_srcdir)/win32/vs10/$@; then \
 		cp $(top_srcdir)/win32/vs10/$@ $(top_builddir)/win32/vs$(MSVC_VER)/$@; \
diff --git a/win32/Makefile.am b/win32/Makefile.am
index 0e70d0d665..bc7a513ad5 100644
--- a/win32/Makefile.am
+++ b/win32/Makefile.am
@@ -1,31 +1,5 @@
 include $(top_srcdir)/Makefile.decl
 
-if HAVE_INTROSPECTION
-GENERATED_ITEMS = \
-	introspection.body.mak	\
-	Gdk_3_0_gir_list		\
-	GdkWin32_3_0_gir_list	\
-	Gtk_3_0_gir_list
-
-MSVC_INTROSPECTION_INTERMEDIATE_FILES = Gdk-3.0.gir.msvc.introspect GdkWin32-3.0.gir.msvc.introspect Gtk-3.0.gir.msvc.introspect
-
-introspection.body.mak: $(MSVC_INTROSPECTION_INTERMEDIATE_FILES)
-	-$(RM) introspection.body.mak
-	for F in `ls *.msvc.introspect`; do \
-		case $$F in \
-			*)	cat $(top_builddir)/win32/$$F >>introspection.body.mak \
-			;; \
-		esac; \
-	done
-	$(RM) $(MSVC_INTROSPECTION_INTERMEDIATE_FILES)
-
-DISTCLEANFILES = $(GENERATED_ITEMS)
-
-else
-GENERATED_ITEMS =
-DISTCLEANFILES =
-endif
-
 SUBDIRS =	\
 	vs9 	\
 	vs10	\
@@ -34,7 +8,8 @@ SUBDIRS =	\
 	vs14	\
 	vs15	\
 	vs16	\
-	vs17
+	vs17	\
+	vs1x-props
 
 EXTRA_DIST +=	\
 	config-msvc.mak		\
@@ -46,10 +21,10 @@ EXTRA_DIST +=	\
 	generate-msvc.mak	\
 	gtk-introspection-msvc.mak	\
 	introspection-msvc.mak		\
+	install-msvc.mak		\
 	replace.py			\
 	pc_base.py			\
 	gtkpc.py			\
-	README_FEATURES_MSVC.txt	\
-	$(GENERATED_ITEMS)
+	README_FEATURES_MSVC.txt
 
 -include $(top_srcdir)/git.mk
diff --git a/win32/Makefile.msvc-introspection b/win32/Makefile.msvc-introspection
deleted file mode 100644
index e472ac795e..0000000000
--- a/win32/Makefile.msvc-introspection
+++ /dev/null
@@ -1,128 +0,0 @@
-# Author: Fan, Chun-wei
-# Common autotools file for constructing the g-ir-scanner and
-# g-ir-compiler command lines for Visual Studio builds.
-
-# This is copied from $(srcroot)/build from the gobject-introspection
-# project, which may be included in projects that support both
-# Visual Studio builds and introspection.
-
-# * Input variables:
-#
-#   MSVC_INTROSPECT_GIRS - List of .gir's that should be built
-#                          in the NMake Makefiles
-#
-# * Simple tutorial
-#
-# Add this to Makefile.am where your library/program is built:
-#   (Either YourLib_1_0_gir_MSVC_LIBS or YourLib_1_0_gir_MSVC_PROGRAM
-#    is required unless --headers-only is specified in
-#    YourLib_1_0_gir__MSVC_SCANNERFLAGS)
-#
-#   include $(top_srcdir)/build/Makefile.msvc-introspection
-#   MSVC_INTROSPECT_GIRS = YourLib-1.0.gir
-#   YourLib_1_0_gir_NAMESPACE = YourLib # This is optional
-#   YourLib_1_0_gir_VERSION = 1.0 # This is optional
-#   YourLib_1_0_gir_MSVC_LIBS = yourlib-1.0
-#   YourLib_1_0_gir_MSVC_FILES = $(libyourlib_1_0_SOURCES)
-#   YourLib_1_0_gir_MSVC_PROGRAM = YourProgram
-#   YourLib_1_0_gir_MSVC_PACKAGES = (Dependent .pc files)
-#   YourLib_1_0_gir_MSVC_INCLUDE_GIRS = (Dependent external .gir's)
-#   YourLiv_1_0_gir_MSVC_EXPORT_PACKAGES = (Packages exported by this .gir)
-
-# Private functions
-
-## Transform the MSVC project filename (no filename extensions) to something which can reference through a variable
-## without automake/make complaining, eg Gtk-2.0 -> Gtk_2_0
-_gir_name=$(subst /,_,$(subst -,_,$(subst .,_,$(1))))
-
-# Namespace and Version is either fetched from the gir filename
-# or the _NAMESPACE/_VERSION variable combo
-_gir_namespace_msvc = $(or $($(_gir_name)_NAMESPACE),$(firstword $(subst -, ,$(notdir $(1)))))
-_gir_version_msvc = $(or $($(_gir_name)_VERSION),$(lastword $(subst -, ,$(1:.gir=))))
-_typelib_basename_msvc = $(_gir_namespace_msvc)'-'$(_gir_version_msvc)
-
-# _PROGRAM is an optional variable which needs its own --program argument
-_gir_program_msvc = $(if $($(_gir_name)_MSVC_PROGRAM),--program=$($(_gir_name)_MSVC_PROGRAM))
-
-# Deduce the sub-folder from $(srcroot) where the sources reside in
-_gir_source_path_raw_msvc:=$(subst $(abs_top_srcdir),,$(abs_srcdir))
-_gir_source_path_msvc=$(subst /,\\,$(_gir_source_path_raw_msvc))
-_gir_source_subdir_int_msvc=$(subst \\\\,\\,\\$(_gir_source_path_msvc)\\)
-_gir_source_subdir_msvc=$(subst \\.\\,\\,$(_gir_source_subdir_int_msvc))
-
-_gir_files_raw_msvc=$(subst /,\\,$($(_gir_name)_MSVC_FILES))
-_gir_files_msvc=$(subst $(srcdir)\\,,$(subst $(builddir)\\,,$(subst $(top_builddir)\\$(_gir_source_path_msvc)\\,\\,$(_gir_files_raw_msvc))))
-
-# Create a list of items for:
-# - Libraries
-# - Packages
-# - GIRs to include
-# - packages to export
-
-_gir_libraries_msvc = $(foreach lib,$($(_gir_name)_MSVC_LIBS),--library=$(lib))
-_gir_packages_msvc = $(foreach pkg,$($(_gir_name)_MSVC_PACKAGES),--pkg=$(pkg))
-_gir_includes_msvc = $(foreach include,$($(_gir_name)_MSVC_INCLUDE_GIRS),--include=$(include))
-_gir_export_packages_msvc = $(foreach pkg,$($(_gir_name)_MSVC_EXPORT_PACKAGES),--pkg-export=$(pkg))
-
-#
-# Create NMake Makefile Sections for Building Introspection files
-# from autotools files
-# $(1) - File Name of the .gir that is to be generated
-#
-
-define gir-nmake-builder
-
-# Basic sanity check, to make sure required variables are set
-$(if $($(_gir_name)_MSVC_FILES),,$(error Need to define $(_gir_name)_MSVC_FILES))
-$(if $(or $(findstring --header-only,$($(_gir_name)_MSVC_SCANNERFLAGS)),
-          $($(_gir_name)_MSVC_LIBS),
-          $($(_gir_name)_MSVC_PROGRAM)),,
-    $(error Need to define $(_gir_name)_MSVC_LIBS or $(_gir_name)_MSVC_PROGRAM))
-
-$(top_builddir)/win32/$(_gir_name)_list: Makefile
-	rm -f $(top_builddir)/win32/$(_gir_name)_list
-	for F in $(_gir_files_msvc); do \
-		case $$$$F in \
-		*.c|*.cpp|*.cc|*.cxx|*.h|*.hpp|*.hh|*.hxx) \
-			echo '..'$(_gir_source_subdir_msvc)$$$$F >>$(top_builddir)/win32/$(_gir_name)_list \
-			;; \
-		esac; \
-	done
-
-$(top_builddir)/win32/$(1).msvc.introspect: Makefile
-	-$(RM) $(top_builddir)/win32/$(1).msvc.introspect
-
-# Assemble the Command to Run g-ir-scanner
-	echo 'vs$$$$(VSVER)\$$$$(CFG)\$$$$(PLAT)\bin\'$(1)': '$(_gir_name)'_list_final '$($(_gir_name)_MSVC_GIR_DEPS)>>$(top_builddir)/win32/$(1).msvc.introspect
-	echo '	@-echo Generating $$$$@...'>>$(top_builddir)/win32/$(1).msvc.introspect
-	echo '	$$$$(PYTHON) $$$$(G_IR_SCANNER)	\'>>$(top_builddir)/win32/$(1).msvc.introspect
-	echo '	--verbose -no-libtool	\'>>$(top_builddir)/win32/$(1).msvc.introspect
-	echo '	--namespace='$(_gir_namespace_msvc)'	\'>>$(top_builddir)/win32/$(1).msvc.introspect
-	echo '	--nsversion='$(_gir_version_msvc)'	\'>>$(top_builddir)/win32/$(1).msvc.introspect
-	echo '	'$(_gir_packages_msvc)'	\'>>$(top_builddir)/win32/$(1).msvc.introspect
-	echo '	'$(_gir_libraries_msvc)'	\'>>$(top_builddir)/win32/$(1).msvc.introspect
-	echo '	'$(_gir_program_msvc)'	\'>>$(top_builddir)/win32/$(1).msvc.introspect
-	echo '	--add-include-path=./vs$$$$(VSVER)/$$$$(CFG)/$$$$(PLAT)/bin	\'>>$(top_builddir)/win32/$(1).msvc.introspect
-	echo '	--add-include-path=$$$$(G_IR_INCLUDEDIR)	\'>>$(top_builddir)/win32/$(1).msvc.introspect
-	echo '	'$(_gir_includes_msvc)'	\'>>$(top_builddir)/win32/$(1).msvc.introspect
-	echo '	'$(_gir_export_packages_msvc)'	\'>>$(top_builddir)/win32/$(1).msvc.introspect
-	echo '	--cflags-begin	\'>>$(top_builddir)/win32/$(1).msvc.introspect
-	echo '	'$($(_gir_name)_MSVC_CFLAGS)'	\'>>$(top_builddir)/win32/$(1).msvc.introspect
-	echo '	--cflags-end	\'>>$(top_builddir)/win32/$(1).msvc.introspect
-	echo '	'$($(_gir_name)_MSVC_SCANNERFLAGS)'	\'>>$(top_builddir)/win32/$(1).msvc.introspect
-	echo '	--filelist='$(_gir_name)'_list_final	\'>>$(top_builddir)/win32/$(1).msvc.introspect
-	echo '	-L.\vs$$$$(VSVER)\$$$$(CFG)\$$$$(PLAT)\bin	\'>>$(top_builddir)/win32/$(1).msvc.introspect
-	echo '	-o $$$$@'>>$(top_builddir)/win32/$(1).msvc.introspect
-	echo '' >>$(top_builddir)/win32/$(1).msvc.introspect
-
-# Finally Assemble the Command to Compile the generated .gir
-	echo 'vs$$$$(VSVER)\$$$$(CFG)\$$$$(PLAT)\bin\$(_typelib_basename_msvc).typelib: vs$$$$(VSVER)\$$$$(CFG)\$$$$(PLAT)\bin\'$(_typelib_basename_msvc)'.gir'>>$(top_builddir)/win32/$(1).msvc.introspect
-	echo '	@-echo Compiling $$$$@...'>>$(top_builddir)/win32/$(1).msvc.introspect
-	echo '	$$$$(G_IR_COMPILER)	\'>>$(top_builddir)/win32/$(1).msvc.introspect
-	echo '	--includedir=$$$$(@D:\=/) --debug --verbose	\'>>$(top_builddir)/win32/$(1).msvc.introspect
-	echo '	$$$$(@R:\=/).gir	\'>>$(top_builddir)/win32/$(1).msvc.introspect
-	echo '	-o $$$$@'>>$(top_builddir)/win32/$(1).msvc.introspect
-	echo '' >>$(top_builddir)/win32/$(1).msvc.introspect
-endef
-
-$(foreach gir,$(MSVC_INTROSPECT_GIRS),$(eval $(call gir-nmake-builder,$(gir))))
diff --git a/win32/Makefile.msvcproj b/win32/Makefile.msvcproj
index cd7e469fb1..c341313aee 100644
--- a/win32/Makefile.msvcproj
+++ b/win32/Makefile.msvcproj
@@ -17,13 +17,9 @@
 #   MSVCPROJS = YourProject (can be multiple projects in a single srcdir)
 #   YourProject_FILES = $(libyourlib_1_0_SOURCES)
 #   YourProject_EXCLUDES = ... # list of sources to exclude, separated by '|', wildcards allowed; use random unsed value if none
-#   YourProject_HEADERS_DIR = $(libyourlibincludedir)
-#   YourProject_HEADERS_INST = $(libyourlib_1_0_HEADERS)
-#   YourProject_HEADERS_EXCLUDES = ... # <list of headers to exclude from installation, separated by '|', wildcards allowed; use random unsed value if none>
 #
 #   dist-hook: \ # (or add to it if it is already there, note the vs9 items will also call the vs10 items in the process)
-#   	$(top_builddir)/win32/vs9/YourProject.vcproj	\
-#   	$(top_builddir)/win32/vs9/YourProject.headers
+#   	$(top_builddir)/win32/vs9/YourProject.vcproj
 
 
 # Private functions
@@ -40,13 +36,6 @@ _proj_files_raw=$(subst /,\\,$($(_proj_name)_FILES))
 _proj_files=$(subst $(srcdir)\\,,$(subst $(builddir)\\,,$(subst $(top_builddir)\\$(_proj_path)\\,\\,$(_proj_files_raw))))
 _proj_filters=$($(_proj_name)_EXCLUDES)
 
-_proj_headers_raw=$(subst /,\\,$($(_proj_name)_HEADERS_INST))
-_proj_headers=$(subst $(srcdir)\\,,$(subst $(builddir)\\,,$(subst $(top_builddir)\\$(_proj_path)\\,\\,$(_proj_headers_raw))))
-_proj_headers_excludes=$($(_proj_name)_HEADERS_EXCLUDES)
-
-_headers_dest_posix=$(subst $(includedir),,$($(_proj_name)_HEADERS_DIR))
-_headers_destdir=$(subst /,\\,$(_headers_dest_posix))
-
 #
 # Creates Visual Studio 2008/2010 projects from items passed in from autotools files
 # $(1) - Base Name of the MSVC project files (outputs)
@@ -95,23 +84,6 @@ $(top_builddir)/win32/vs9/$(1).vcproj: Makefile
 	$(RM) $(1).vs10.sourcefiles
 	$(RM) $(1).vs10.sourcefiles.filters
 
-$(top_builddir)/win32/vs10/$(1).vs10.headers: $(top_builddir)/win32/vs9/$(1).headers
-
-$(top_builddir)/win32/vs9/$(1).headers: Makefile
-	-$(RM) $(top_builddir)/win32/vs9/$(1).headers
-	-$(RM) $(top_builddir)/win32/vs10/$(1).vs10.headers
-
-	for F in $(_proj_headers); do \
-		case $$$$F in \
-		$(_proj_headers_excludes)) \
-			;; \
-		*.h|*.hpp|*.hh|*.hxx) \
-			echo 'copy ..\..'$(_proj_subdir)$$$$F' $$$$(CopyDir)\include'$(_headers_destdir)'\'$$$$F'&#x0D;&#x0A;' >>$(top_builddir)/win32/vs9/$(1).headers && \
-			echo 'copy ..\..'$(_proj_subdir)$$$$F' $$$$(CopyDir)\include'$(_headers_destdir)'\'$$$$F >>$(top_builddir)/win32/vs10/$(1).vs10.headers \
-			;; \
-		esac;	\
-	done
-
 endef
 
 $(foreach proj,$(MSVCPROJS),$(eval $(call msvcproj-builder,$(proj))))
diff --git a/win32/config-msvc.mak.in b/win32/config-msvc.mak.in
index 296235e975..c39d7170b0 100644
--- a/win32/config-msvc.mak.in
+++ b/win32/config-msvc.mak.in
@@ -38,12 +38,18 @@ GLIB_COMPILE_RESOURCES = $(PREFIX)\bin\glib-compile-resources.exe
 GDBUS_CODEGEN = $(PREFIX)\bin\gdbus-codegen
 !endif
 
+!ifndef GLIB_COMPILE_SCHEMAS
+GLIB_COMPILE_SCHEMAS = $(PREFIX)\bin\glib-compile-schemas.exe
+!endif
+
 !if "$(PLAT)" == "x64"
 AT_PLAT=x86_64
 !elseif "$(PLAT)" == "arm64"
 AT_PLAT=aarch64
-!else
+!elseif "$(PLAT)" == "Win32"
 AT_PLAT=i686
+!else
+AT_PLAT=unknown
 !endif
 
 demo_sources = $(demos_base)
diff --git a/win32/create-lists-msvc.mak b/win32/create-lists-msvc.mak
index d19e3a4d59..3158c02544 100644
--- a/win32/create-lists-msvc.mak
+++ b/win32/create-lists-msvc.mak
@@ -33,8 +33,8 @@
 
 NULL=
 
-# For GDK enumeration sources
-!include ..\gdk\gdk-pub-headers.mak
+# For GDK public headers and sources
+!include ..\gdk\gdk-sources.inc
 
 !if [call create-lists.bat header gdk_headers.mak GDK_PUBLIC_HEADERS]
 !endif
@@ -45,6 +45,39 @@ NULL=
 !if [call create-lists.bat footer gdk_headers.mak]
 !endif
 
+!if [call create-lists.bat header gdk_headers.mak GDK_C_SRCS]
+!endif
+
+!if [for %f in ($(gdk_c_sources)) do @call create-lists.bat file gdk_headers.mak ../gdk/%f]
+!endif
+
+!if [call create-lists.bat footer gdk_headers.mak]
+!endif
+
+# For GDK-Win32 public headers and sources
+!include ..\gdk\win32\gdk-win32-sources.inc
+
+!if [call create-lists.bat header gdk_headers.mak GDK_WIN32_PUBLIC_HEADERS]
+!endif
+
+!if [for %f in ($(libgdkwin32include_HEADERS)) do @call create-lists.bat file gdk_headers.mak ../gdk/win32/%f]
+!endif
+
+!if [call create-lists.bat footer gdk_headers.mak]
+!endif
+
+!if [call create-lists.bat header gdk_headers.mak GDK_WIN32_INTROSPECTION_SRCS]
+!endif
+
+!if [for %f in ($(w32_introspection_files)) do @call create-lists.bat file gdk_headers.mak ../gdk/%f]
+!endif
+
+!if [call create-lists.bat footer gdk_headers.mak]
+!endif
+
+# For GDK-Broadway public headers
+!include ..\gdk\broadway\gdk-broadway-sources.inc
+
 !include gdk_headers.mak
 
 !if [del /f /q gdk_headers.mak]
@@ -64,10 +97,11 @@ NULL=
 !if [call create-lists.bat header resources_sources.mak GTK_RESOURCES]
 !endif
 
-# For GTK enumeration sources
-!include ..\gtk\gtk-mkenums-headers.mak
+# For GTK public headers and sources
+!include ..\gtk\gtk-sources.inc
 !include ..\gtk\a11y\Makefile.inc
 !include ..\gtk\deprecated\Makefile.inc
+!include ..\gtk\inspector\Makefile.inc
 
 !if [call create-lists.bat header gtk_headers.mak GTK_PUBLIC_ENUM_HEADERS]
 !endif
@@ -90,26 +124,56 @@ NULL=
 !if [call create-lists.bat footer gtk_headers.mak]
 !endif
 
+!if [call create-lists.bat header gtk_headers.mak GTK_SEMI_PRIVATE_HEADERS]
+!endif
+
+!if [for %f in ($(gtk_semi_private_h_sources)) do @call create-lists.bat file gtk_headers.mak ../gtk/%f]
+!endif
+
+!if [call create-lists.bat footer gtk_headers.mak]
+!endif
+
+!if [call create-lists.bat header gtk_headers.mak GTK_C_SRCS]
+!endif
+
+!if [for %f in ($(a11y_c_sources) $(gtk_deprecated_c_sources) $(inspector_c_sources)) do @call create-lists.bat file gtk_headers.mak ../gtk/%f]
+!endif
+
+!if [for %f in ($(gtk_base_c_sources_base_gtka_gtkh:.c=)) do @call create-lists.bat file gtk_headers.mak ../gtk/%f.c]
+!endif
+
+!if [for %f in ($(gtk_base_c_sources_base_gtki_gtkw:.c=)) do @call create-lists.bat file gtk_headers.mak ../gtk/%f.c]
+!endif
+
+!if [for %f in ($(gtk_os_win32_c_sources)) do @call create-lists.bat file gtk_headers.mak ../gtk/%f]
+!endif
+
+!if [call create-lists.bat footer gtk_headers.mak]
+!endif
+
 !include gtk_headers.mak
 
 !if [del /f /q gtk_headers.mak]
 !endif
 
+# For the libgail-util public headers
+!include ..\libgail-util\libgail-util-sources.inc
+
 # For GTK resources
 
-!if [for %f in (..\gtk\theme\Adwaita\gtk.css ..\gtk\theme\Adwaita\gtk-dark.css ..\gtk\theme\Adwaita\gtk-contained.css ..\gtk\theme\Adwaita\gtk-contained-dark.css) do @call create-lists.bat file resources_sources.mak %f]
+!if [for %f in ($(adwaita_theme_css_sources:/=\)) do @call create-lists.bat file resources_sources.mak ..\gtk\%f]
 !endif
 
 !if [for %x in (png svg) do @(for %f in (..\gtk\theme\Adwaita\assets\*.%x) do @call create-lists.bat file resources_sources.mak %f)]
 !endif
 
-!if [for %f in (..\gtk\theme\HighContrast\gtk.css ..\gtk\theme\HighContrast\gtk-inverse.css ..\gtk\theme\HighContrast\gtk-contained.css ..\gtk\theme\HighContrast\gtk-contained-inverse.css) do @call create-lists.bat file resources_sources.mak %f]
+!if [for %f in ($(highcontrast_theme_css_sources:/=\)) do @call create-lists.bat file resources_sources.mak ..\gtk\%f]
 !endif
 
 !if [for %x in (png svg) do @(for %f in (..\gtk\theme\HighContrast\assets\*.%x) do @call create-lists.bat file resources_sources.mak %f)]
 !endif
 
-!if [for %f in (..\gtk\theme\win32\gtk-win32-base.css ..\gtk\theme\win32\gtk.css) do @call create-lists.bat file resources_sources.mak %f]
+!if [for %f in ($(win32_theme_css_sources:/=\)) do @call create-lists.bat file resources_sources.mak ..\gtk\%f]
 !endif
 
 !if [for %f in (..\gtk\cursor\*.png ..\gtk\gesture\*.symbolic.png ..\gtk\ui\*.ui) do @call create-lists.bat file resources_sources.mak %f]
diff --git a/win32/generate-msvc.mak b/win32/generate-msvc.mak
index 63cf6c5c00..e32c1571a9 100644
--- a/win32/generate-msvc.mak
+++ b/win32/generate-msvc.mak
@@ -39,6 +39,8 @@ GDK_GENERATED_SOURCES =	\
 	.\vs$(VSVER)\$(CFG)\$(PLAT)\obj\gdk-3\gdk\gdkresources.c	\
 	.\vs$(VSVER)\$(CFG)\$(PLAT)\obj\gdk-3\gdk\gdkversionmacros.h
 
+GTK_VERSION_H = .\vs$(VSVER)\$(CFG)\$(PLAT)\obj\gtk-3\gtk\gtkversion.h
+
 GTK_TYPEBUILTIN_SOURCES =	\
 	.\vs$(VSVER)\$(CFG)\$(PLAT)\obj\gtk-3\gtk\gtktypebuiltins.h	\
 	.\vs$(VSVER)\$(CFG)\$(PLAT)\obj\gtk-3\gtk\gtktypebuiltins.c
@@ -54,7 +56,7 @@ GTK_GENERATED_SOURCES =	\
 	.\vs$(VSVER)\$(CFG)\$(PLAT)\obj\gtk-3\gtk\gtkmarshalers.c	\
 	.\vs$(VSVER)\$(CFG)\$(PLAT)\obj\gtk-3\gtk\gtkresources.h	\
 	.\vs$(VSVER)\$(CFG)\$(PLAT)\obj\gtk-3\gtk\gtkresources.c	\
-	.\vs$(VSVER)\$(CFG)\$(PLAT)\obj\gtk-3\gtk\gtkversion.h
+	$(GTK_VERSION_H)
 
 generate-base-sources:	\
 	.\vs$(VSVER)\$(CFG)\$(PLAT)\obj\gdk-3\config.h	\
@@ -269,7 +271,7 @@ regenerate-demos-h-win32: ..\demos\gtk-demo\geninclude.py $(demo_actual_sources)
 	@cd ..\..\win32
 	@echo Regenerating gtk3-demo VS project files...
 	@-del vs9\$(DEMO_VS9_PROJ) vs10\$(DEMO_VS10_PROJ) vs10\$(DEMO_VS10_PROJ_FILTERS)
-	@for %%s in ($(demo_sources) gtkfishbowl.c demo_resources.c main.c) do	\
+	@for %%s in ($(demo_sources) gtkfishbowl.c main.c) do	\
 	@echo.   ^<File RelativePath^="..\..\demos\gtk-demo\%%s" /^>>>gtk3-demo.sourcefiles & \
 	@echo.   ^<ClCompile Include^="..\..\demos\gtk-demo\%%s" /^>>>gtk3-demo.vs10.sourcefiles & \
 	@echo.   ^<ClCompile Include^="..\..\demos\gtk-demo\%%s"^>^<Filter^>Source Files^</Filter^>^</ClCompile^>>>gtk3-demo.vs10.sourcefiles.filters
@@ -297,20 +299,6 @@ regenerate-demos-h-win32: ..\demos\gtk-demo\geninclude.py $(demo_actual_sources)
 	@$(PYTHON) replace.py -a=replace-str -i=vs10\$(DEMO_VS10_PROJ) -o=vs16\$(DEMO_VS10_PROJ) --instring=">v100<" --outstring=">v142<"
 	@$(PYTHON) replace.py -a=replace-str -i=vs10\$(DEMO_VS10_PROJ) -o=vs17\$(DEMO_VS10_PROJ) --instring=">v100<" --outstring=">v143<"
 
-Gdk_3_0_gir_list_final: Gdk_3_0_gir_list $(GDK_GENERATED_SOURCES)
-	@echo Generating $@...
-	@type Gdk_3_0_gir_list>$@
-	@for %%s in ($(GDK_GENERATED_SOURCES)) do echo %%s>>$@
-
-Gtk_3_0_gir_list_final: Gtk_3_0_gir_list $(GTK_TYPEBUILTIN_SOURCES)
-	@echo Generating $@...
-	@type Gtk_3_0_gir_list>$@
-	@for %%s in ($(GTK_TYPEBUILTIN_SOURCES) .\vs$(VSVER)\$(CFG)\$(PLAT)\obj\gtk-3\gtk\gtkversion.h) do echo %%s>>$@
-
-GdkWin32_3_0_gir_list_final: GdkWin32_3_0_gir_list
-	@echo Copying $@...
-	@copy $** $@
-
 # Remove the generated files
 clean:
 	@-del /f /q ..\demos\icon-browser\resources.c
diff --git a/win32/gtk-introspection-msvc.mak b/win32/gtk-introspection-msvc.mak
index 07d0e2c762..abf122e0e0 100644
--- a/win32/gtk-introspection-msvc.mak
+++ b/win32/gtk-introspection-msvc.mak
@@ -29,19 +29,113 @@ AT_PLAT=aarch64
 AT_PLAT=i686
 !endif
 
-introspect: setgirbuildenv $(built_install_girs) $(built_install_typelibs)
+vs$(VSVER)\$(CFG)\$(PLAT)\obj\gdk-3\Gdk-$(APIVERSION).gir.filelist: $(GDK_PUBLIC_HEADERS) $(GDK_C_SRCS) $(GDK_GENERATED_SOURCES)
+	@if exist $@ del $@
+	@for %f in ($(gdk_h_sources:/=\) $(gdk_c_sources:/=\)) do @if not "%f" == "gdkkeysyms-compat.h" echo ..\gdk\%f>>$@
+	@for %f in ($(GDK_GENERATED_SOURCES)) do @if not "%~nxf" == "gdkconfig.h" echo %f>>$@
 
-setgirbuildenv:
+vs$(VSVER)\$(CFG)\$(PLAT)\obj\gdk3-win32\GdkWin32-$(APIVERSION).gir.filelist: $(GDK_WIN32_INTROSPECTION_SRCS)
+	@if exist $@ del $@
+	@for %f in ($(w32_introspection_files:/=\)) do @echo ..\gdk\%f>>$@
+
+vs$(VSVER)\$(CFG)\$(PLAT)\obj\gtk-3\Gtk-$(APIVERSION).gir.filelist:	\
+$(GTK_PUBLIC_ENUM_HEADERS) $(GTK_SEMI_PRIVATE_HEADERS)	\
+$(GTK_GENERATED_PUB_HDRS) $(GTK_C_SRCS)
+	@if exist $@ del $@
+	@for %f in ($(GTK_PUB_HDRS:.h=)) do @if not "%f" == "gtktextdisplay" if not "%f" == "gtkx" echo ..\gtk\%f.h>>$@
+	@for %f in ($(a11y_h_sources:/=\) $(gtk_deprecated_h_sources:/=\) $(gtk_semi_private_h_sources)) do @if not "%f" == "gtktextlayout.h" echo ..\gtk\%f>>$@
+	@for %f in ($(a11y_c_sources:/=\) $(gtk_deprecated_c_sources:/=\) $(inspector_c_sources:/=\)) do @echo ..\gtk\%f>>$@
+	@for %f in ($(gtk_base_c_sources_base_gtka_gtkh:.c=)) do @echo ..\gtk\%f.c>>$@
+	@for %f in ($(gtk_base_c_sources_base_gtki_gtkw:.c=)) do @echo ..\gtk\%f.c>>$@
+	@for %f in ($(gtk_clipboard_dnd_c_sources_generic) $(gtk_os_win32_c_sources)) do @echo ..\gtk\%f>>$@
+	@for %f in ($(GTK_TYPEBUILTIN_SOURCES) $(GTK_VERSION_H)) do @echo %f>>$@
+
+vs$(VSVER)\$(CFG)\$(PLAT)\bin\Gdk-$(APIVERSION).gir: vs$(VSVER)\$(CFG)\$(PLAT)\obj\gdk-3\Gdk-$(APIVERSION).gir.filelist
+	@-echo Generating $@...
+	@set PYTHONPATH=$(PREFIX)\lib\gobject-introspection
+	@set PATH=vs$(VSVER)\$(CFG)\$(PLAT)\bin;$(PREFIX)\bin;$(PATH)
+	@set PKG_CONFIG_PATH=$(PKG_CONFIG_PATH)
+	@set LIB=vs$(VSVER)\$(CFG)\$(PLAT)\bin;$(LIB)
+	@$(PYTHON) $(G_IR_SCANNER) --verbose -no-libtool	\
+	--namespace=Gdk	--nsversion=$(APIVERSION)	\
+	--library=gdk-$(APIVERSION)	\
+	--add-include-path=./vs$(VSVER)/$(CFG)/$(PLAT)/bin	\
+	--add-include-path=$(G_IR_INCLUDEDIR)	\
+	--include=Gio-2.0 --include=GdkPixbuf-2.0 --include=Pango-1.0 --include=cairo-1.0	\
+	--cflags-begin	\
+	-DG_LOG_USE_STRUCTURED=1 -DGDK_COMPILATION -I./vs$(VSVER)/$(CFG)/$(PLAT)/obj/gdk-3	\
+	-I.. -I./vs$(VSVER)/$(CFG)/$(PLAT)/obj/gdk-3/gdk -I../gdk -I../gdk/win32	\
+	--cflags-end	\
+	--c-include=gdk/gdk.h	\
+	--filelist=$**	\
+	-L.\vs$(VSVER)\$(CFG)\$(PLAT)\bin	\
+	-o $@
+
+vs$(VSVER)\$(CFG)\$(PLAT)\bin\GdkWin32-$(APIVERSION).gir:	\
+./vs$(VSVER)/$(CFG)/$(PLAT)/bin/Gdk-$(APIVERSION).gir	\
+vs$(VSVER)\$(CFG)\$(PLAT)\obj\gdk3-win32\GdkWin32-$(APIVERSION).gir.filelist
+	@-echo Generating $@...
 	@set PYTHONPATH=$(PREFIX)\lib\gobject-introspection
 	@set PATH=vs$(VSVER)\$(CFG)\$(PLAT)\bin;$(PREFIX)\bin;$(PATH)
 	@set PKG_CONFIG_PATH=$(PKG_CONFIG_PATH)
 	@set LIB=vs$(VSVER)\$(CFG)\$(PLAT)\bin;$(LIB)
+	$(PYTHON) $(G_IR_SCANNER) --verbose -no-libtool	\
+	--namespace=GdkWin32 --nsversion=$(APIVERSION)	\
+	--library=gdk-$(APIVERSION)	\
+	--add-include-path=./vs$(VSVER)/$(CFG)/$(PLAT)/bin	\
+	--add-include-path=$(G_IR_INCLUDEDIR)	\
+	--cflags-begin	\
+	-DG_LOG_USE_STRUCTURED=1 -DGDK_COMPILATION -I./vs$(VSVER)/$(CFG)/$(PLAT)/obj/gdk-3	\
+	-I.. -I./vs$(VSVER)/$(CFG)/$(PLAT)/obj/gdk-3/gdk -I../gdk -I../gdk/win32	\
+	--cflags-end	\
+	--identifier-prefix=Gdk --c-include=gdk/gdkwin32.h	\
+	--include-uninstalled=./vs$(VSVER)/$(CFG)/$(PLAT)/bin/Gdk-$(APIVERSION).gir	\
+	--filelist=vs$(VSVER)\$(CFG)\$(PLAT)\obj\gdk3-win32\GdkWin32-$(APIVERSION).gir.filelist	\
+	-L.\vs$(VSVER)\$(CFG)\$(PLAT)\bin	\
+	-o $@
+
+vs$(VSVER)\$(CFG)\$(PLAT)\bin\Gtk-$(APIVERSION).gir:	\
+./vs$(VSVER)/$(CFG)/$(PLAT)/bin/Gdk-$(APIVERSION).gir	\
+vs$(VSVER)\$(CFG)\$(PLAT)\obj\gtk-3\Gtk-$(APIVERSION).gir.filelist
+	@-echo Generating $@...
+	@set PYTHONPATH=$(PREFIX)\lib\gobject-introspection
+	@set PATH=vs$(VSVER)\$(CFG)\$(PLAT)\bin;$(PREFIX)\bin;$(PATH)
+	@set PKG_CONFIG_PATH=$(PKG_CONFIG_PATH)
+	@set LIB=vs$(VSVER)\$(CFG)\$(PLAT)\bin;$(LIB)
+	$(PYTHON) $(G_IR_SCANNER) --verbose -no-libtool	\
+	--namespace=Gtk --nsversion=$(APIVERSION)	\
+	--library=gtk-$(APIVERSION) --library=gdk-$(APIVERSION)	\
+	--add-include-path=./vs$(VSVER)/$(CFG)/$(PLAT)/bin	\
+	--add-include-path=$(G_IR_INCLUDEDIR)	\
+	--include=Atk-1.0	\
+	--pkg-export=gtk+-$(APIVERSION)	\
+	--cflags-begin	\
+	-DG_LOG_USE_STRUCTURED=1 -DGTK_VERSION="$(GTK_VERSION)" -DGTK_BINARY_VERSION="3.0.0" -DGTK_COMPILATION	\
+	-DGTK_PRINT_BACKEND_ENABLE_UNSUPPORTED -DGTK_LIBDIR=\"/dummy/lib\" -DGTK_DATADIR=\"/dummy/share\"	\
+	-DGTK_DATA_PREFIX=\"/dummy\" -DGTK_SYSCONFDIR=\"/dummy/etc\" -DGTK_HOST=\"$(AT_PLAT)-pc-vs$(VSVER)\"	\
+	-DGTK_PRINT_BACKENDS=\"file\" -DINCLUDE_IM_am_et -DINCLUDE_IM_cedilla -DINCLUDE_IM_cyrillic_translit	\
+	-DINCLUDE_IM_ime -DINCLUDE_IM_inuktitu -DINCLUDE_IM_ipa -DINCLUDE_IM_multipress -DINCLUDE_IM_thai	\
+	-DINCLUDE_IM_ti_er -DINCLUDE_IM_ti_et -DINCLUDE_IM_viqr	\
+	-DGTK_TEXT_USE_INTERNAL_UNSUPPORTED_API	\
+	-I./vs$(VSVER)/$(CFG)/$(PLAT)/obj/gtk-3	\
+	-I./vs$(VSVER)/$(CFG)/$(PLAT)/obj/gdk-3	\
+	-I.. -I./vs$(VSVER)/$(CFG)/$(PLAT)/obj/gtk-3/gtk -I../gtk	\
+	-I./vs$(VSVER)/$(CFG)/$(PLAT)/obj/gdk-3/gdk -I../gdk	\
+	--cflags-end	\
+	--warn-all --include-uninstalled=./vs$(VSVER)/$(CFG)/$(PLAT)/bin/Gdk-$(APIVERSION).gir	\
+	--filelist=vs$(VSVER)\$(CFG)\$(PLAT)\obj\gtk-3\Gtk-$(APIVERSION).gir.filelist	\
+	-L.\vs$(VSVER)\$(CFG)\$(PLAT)\bin	\
+	-o $@
+
+vs$(VSVER)\$(CFG)\$(PLAT)\bin\Gdk-$(APIVERSION).typelib: vs$(VSVER)\$(CFG)\$(PLAT)\bin\Gdk-$(APIVERSION).gir
+vs$(VSVER)\$(CFG)\$(PLAT)\bin\GdkWin32-$(APIVERSION).typelib: vs$(VSVER)\$(CFG)\$(PLAT)\bin\GdkWin32-$(APIVERSION).gir
+vs$(VSVER)\$(CFG)\$(PLAT)\bin\Gtk-$(APIVERSION).typelib: vs$(VSVER)\$(CFG)\$(PLAT)\bin\Gtk-$(APIVERSION).gir
 
-!include introspection.body.mak
+$(built_install_typelibs):
+	@-echo Compiling $@...
+	$(G_IR_COMPILER) --includedir=$(@D:\=/) --debug --verbose $(@R:\=/).gir	-o $@
 
-install-introspection: introspect
-	@-copy vs$(VSVER)\$(CFG)\$(PLAT)\bin\*.gir "$(G_IR_INCLUDEDIR)"
-	@-copy /b vs$(VSVER)\$(CFG)\$(PLAT)\bin\*.typelib "$(G_IR_TYPELIBDIR)"
+introspect: $(built_install_girs) $(built_install_typelibs)
 
 !else
 introspect:
@@ -49,8 +143,8 @@ introspect:
 !endif
 
 introspect-clean:
-	@-del /f/q Gtk_3_0_gir_list_final
-	@-del /f/q GdkWin32_3_0_gir_list_final
-	@-del /f/q Gdk_3_0_gir_list_final
+	@-del /f/q vs$(VSVER)\$(CFG)\$(PLAT)\obj\gtk-3\Gtk-$(APIVERSION).gir.filelist
+	@-del /f/q vs$(VSVER)\$(CFG)\$(PLAT)\obj\gdk3-win32\GdkWin32-$(APIVERSION).gir.filelist
+	@-del /f/q vs$(VSVER)\$(CFG)\$(PLAT)\obj\gdk-3\Gdk-$(APIVERSION).gir.filelist
 	@-del /f/q vs$(VSVER)\$(CFG)\$(PLAT)\bin\*.typelib
 	@-del /f/q vs$(VSVER)\$(CFG)\$(PLAT)\bin\*.gir
diff --git a/win32/install-msvc.mak b/win32/install-msvc.mak
new file mode 100644
index 0000000000..4bd136feb4
--- /dev/null
+++ b/win32/install-msvc.mak
@@ -0,0 +1,126 @@
+# NMake Makefile portion for copying the built files to directories as appropriate
+# under $(PREFIX)
+
+!include config-msvc.mak
+!include create-lists-msvc.mak
+
+GTK_API_VERSION = 3
+BASE_BUILT_BIN_DIR = .\vs$(VSVER)\$(CFG)\$(PLAT)\bin
+
+!ifdef BROADWAY
+GDK_OUTPUT_CONFIGDIR = $(CFG)_Broadway
+GDK_BROADWAY_BIN = .\vs$(VSVER)\$(GDK_OUTPUT_CONFIGDIR)\$(PLAT)\bin\broadwayd.exe
+GDK_BROADWAY_PDB = $(GDK_BROADWAY_BIN:.exe=.pdb)
+GEN_PC_BROADWAY_FLAG = --broadway
+!else
+GDK_OUTPUT_CONFIGDIR = $(CFG)
+GDK_BROADWAY_BIN =
+GDK_BROADWAY_PDB =
+GEN_PC_BROADWAY_FLAG =
+!endif
+
+IMPLIB_SUFFIX = $(GTK_API_VERSION).0.lib
+GDK_DLL = .\vs$(VSVER)\$(GDK_OUTPUT_CONFIGDIR)\$(PLAT)\bin\gdk-$(GTK_API_VERSION)-vs$(VSVER).dll
+GDK_PDB = $(GDK_DLL:.dll=.pdb)
+GDK_LIB = .\vs$(VSVER)\$(GDK_OUTPUT_CONFIGDIR)\$(PLAT)\bin\gdk-$(IMPLIB_SUFFIX)
+GDK_BIN_ITEMS = $(GDK_DLL) $(GDK_PDB) $(GDK_BROADWAY_BIN) $(GDK_BROADWAY_PDB)
+GTK_DLL_FILENAME = gtk-$(GTK_API_VERSION)-vs$(VSVER)
+GTK_LIB = $(BASE_BUILT_BIN_DIR)\gtk-$(IMPLIB_SUFFIX)
+LIBGAIL_UTIL_DLL_FILENAME = gailutil-$(GTK_API_VERSION)-vs$(VSVER)
+LIBGAIL_UTIL_LIB = $(BASE_BUILT_BIN_DIR)\gailutil-$(IMPLIB_SUFFIX)
+GTK_PROGRAMS_NAMES = builder-tool encode-symbolic-svg query-settings update-icon-cache
+GTK3_PROGRAMS_NAMES = demo demo-application icon-browser
+GDK_GIR_FILE = $(BASE_BUILT_BIN_DIR)\Gdk-$(IMPLIB_SUFFIX:.lib=.gir)
+GDKWIN32_GIR_FILE = $(BASE_BUILT_BIN_DIR)\GdkWin32-$(IMPLIB_SUFFIX:.lib=.gir)
+GTK_GIR_FILE = $(BASE_BUILT_BIN_DIR)\Gtk-$(IMPLIB_SUFFIX:.lib=.gir)
+GDK_TYPELIB_FILE = $(GDK_GIR_FILE:.gir=.typelib)
+GDKWIN32_TYPELIB_FILE = $(GDKWIN32_GIR_FILE:.gir=.typelib)
+GTK_TYPELIB_FILE = $(GTK_GIR_FILE:.gir=.typelib)
+
+GTK_HEADERS_BASE_INSTALL_DIR = $(PREFIX)\include\gtk-$(GTK_API_VERSION).0
+GAILUTIL_HEADERS_BASE_INSTALL_DIR = $(PREFIX)\include\gail-$(GTK_API_VERSION).0
+
+GDK_BASE_HEADERS = $(gdk_public_h_sources)
+
+GDK_CONFIG_H = .\vs$(VSVER)\$(CFG)\$(PLAT)\obj\gdk-$(GTK_API_VERSION)\gdk\gdkconfig.h
+GDK_ENUM_TYPES_H = .\vs$(VSVER)\$(CFG)\$(PLAT)\obj\gdk-$(GTK_API_VERSION)\gdk\gdkenumtypes.h
+GDK_VERSION_MACROS_H = .\vs$(VSVER)\$(CFG)\$(PLAT)\obj\gdk-$(GTK_API_VERSION)\gdk\gdkversionmacros.h
+GDK_GENERATED_PUBLIC_H = $(GDK_CONFIG_H) $(GDK_ENUM_TYPES_H) $(GDK_VERSION_MACROS_H)
+
+GTK_TYPE_BULITINS_H = .\vs$(VSVER)\$(CFG)\$(PLAT)\obj\gtk-$(GTK_API_VERSION)\gtk\gtktypebuiltins.h
+GTK_VERSION_H = .\vs$(VSVER)\$(CFG)\$(PLAT)\obj\gtk-$(GTK_API_VERSION)\gtk\gtkversion.h
+GTK_GENERATED_PUBLIC_H = $(GTK_TYPE_BULITINS_H) $(GTK_VERSION_H)
+
+all: install-bin install-headers install-data
+
+# Copy the built files
+install-bin:
+	@echo Copying built binaries and data files...
+
+# Copy the DLLs and programs and their .pdb's
+	@for %d in (bin lib) do @if not exist $(PREFIX)\%d\ mkdir $(PREFIX)\%d
+	@for %f in ($(GDK_BIN_ITEMS)) do @copy /b %f "$(PREFIX)\bin"
+	@for %f in ($(GTK_DLL_FILENAME) $(LIBGAIL_UTIL_DLL_FILENAME)) do @for %x in (dll pdb) do @copy /b $(BASE_BUILT_BIN_DIR)\%f.%x "$(PREFIX)\bin"
+	@for %f in ($(GTK_PROGRAMS_NAMES)) do @for %x in (exe pdb) do @copy /b $(BASE_BUILT_BIN_DIR)\gtk-%f.%x "$(PREFIX)\bin"
+	@for %f in ($(GTK3_PROGRAMS_NAMES)) do @for %x in (exe pdb) do @copy /b $(BASE_BUILT_BIN_DIR)\gtk3-%f.%x "$(PREFIX)\bin"
+
+# Copy the .lib's
+	@for %f in ($(GDK_LIB) $(GTK_LIB) $(LIBGAIL_UTIL_LIB)) do @copy /b %f "$(PREFIX)\lib"
+	@for %f in (gdk gtk gailutil) do @copy /b "$(PREFIX)\lib\%f-$(IMPLIB_SUFFIX)" "$(PREFIX)\lib\%f-$(GTK_API_VERSION).lib"
+
+# Generate the pkg-config files, if Python is callable and if it is not disabled
+	@if "$(NO_PKGCONFIG)" == "" if not exist $(PREFIX)\lib\pkgconfig\ mkdir $(PREFIX)\lib\pkgconfig
+	@-if "$(NO_PKGCONFIG)" == "" if exist $(PYTHON) $(PYTHON) gtkpc.py --prefix=$(PREFIX) --version=$(GTK_VERSION) --host=$(AT_PLAT)-pc-vs$(VSVER) $(GEN_PC_BROADWAY_FLAG)
+	@-if "$(NO_PKGCONFIG)" == "" if exist $(PYTHON).exe $(PYTHON) gtkpc.py --prefix=$(PREFIX) --version=$(GTK_VERSION) --host=$(AT_PLAT)-pc-vs$(VSVER) $(GEN_PC_BROADWAY_FLAG)
+	@for %f in (gdk gtk+) do @if exist %f-$(GTK_API_VERSION).0.pc copy "%f-$(GTK_API_VERSION).0.pc" "$(PREFIX)\lib\pkgconfig"
+	@for %f in (gail) do @if exist %f-$(GTK_API_VERSION).0.pc move %f-$(GTK_API_VERSION).0.pc $(PREFIX)\lib\pkgconfig
+	@for %f in (gdk gtk+) do @if exist %f-$(GTK_API_VERSION).0.pc move %f-$(GTK_API_VERSION).0.pc $(PREFIX)\lib\pkgconfig\%f-win32-$(GTK_API_VERSION).0.pc
+
+# Copy the introspection files, if built
+	@if exist $(GTK_TYPELIB_FILE) @for %d in (lib\girepository-1.0 share\gir-1.0) do @if not exist $(PREFIX)\%d\ mkdir $(PREFIX)\%d
+	@for %f in ($(GDK_GIR_FILE) $(GDKWIN32_GIR_FILE) $(GTK_GIR_FILE)) do @if exist %f copy /b %f "$(PREFIX)\share\gir-1.0"
+	@for %f in ($(GDK_TYPELIB_FILE) $(GDKWIN32_TYPELIB_FILE) $(GTK_TYPELIB_FILE)) do @if exist %f copy /b %f "$(PREFIX)\lib\girepository-1.0"
+
+# Copy the public headers
+install-headers:
+	@echo Copying the headers...
+
+# Create the GDK header directories
+	@for %d in (gdk gdk\deprecated gdk\win32) do @if not exist $(GTK_HEADERS_BASE_INSTALL_DIR)\%d\ mkdir $(GTK_HEADERS_BASE_INSTALL_DIR)\%d
+	@if not "$(BROADWAY)" == "" if not exist $(GTK_HEADERS_BASE_INSTALL_DIR)\gdk\broadway\ mkdir $(GTK_HEADERS_BASE_INSTALL_DIR)\gdk\broadway
+
+# Create the GTK header directories
+	@for %d in (gtk gtk\a11y gtk\deprecated) do @if not exist $(GTK_HEADERS_BASE_INSTALL_DIR)\%d\ mkdir $(GTK_HEADERS_BASE_INSTALL_DIR)\%d
+
+# Create the libgail-util header directories
+	@for %d in (libgail-util) do @if not exist $(GAILUTIL_HEADERS_BASE_INSTALL_DIR)\%d\ mkdir $(GAILUTIL_HEADERS_BASE_INSTALL_DIR)\%d
+
+# Copy the GDK headers (with GdkWin32 and with Gdk-Broadway, if built)
+	@for %f in ($(GDK_GENERATED_PUBLIC_H)) do @copy %f "$(GTK_HEADERS_BASE_INSTALL_DIR)\gdk"
+	@for %f in ($(gdk_public_h_sources)) do @copy ..\gdk\%f "$(GTK_HEADERS_BASE_INSTALL_DIR)\gdk"
+	@for %f in ($(gdk_deprecated_h_sources:/=\)) do @copy ..\gdk\%f "$(GTK_HEADERS_BASE_INSTALL_DIR)\gdk\deprecated"
+	@for %f in ($(GDK_PUBLIC_H_SRCS_WIN32)) do @copy ..\gdk\win32\%f "$(GTK_HEADERS_BASE_INSTALL_DIR)\gdk"
+	@for %f in ($(libgdkwin32include_HEADERS)) do @copy ..\gdk\win32\%f "$(GTK_HEADERS_BASE_INSTALL_DIR)\gdk\win32"
+	@if not "$(BROADWAY)" == "" for %f in ($(GDK_PUBLIC_H_SRCS_BROADWAY)) do @copy ..\gdk\broadway\%f "$(GTK_HEADERS_BASE_INSTALL_DIR)\gdk"
+	@if not "$(BROADWAY)" == "" for %f in ($(libgdkbroadwayinclude_HEADERS)) do @copy ..\gdk\broadway\%f "$(GTK_HEADERS_BASE_INSTALL_DIR)\gdk\broadway"
+
+# Copy the GTK headers
+	@for %f in ($(GTK_GENERATED_PUBLIC_H)) do @copy %f "$(GTK_HEADERS_BASE_INSTALL_DIR)\gtk"
+# I hate the U1095 command line too long fatal error :|, work around it...
+	@for %f in ($(GTK_PUB_HDRS:.h=) $(gtk_semi_private_h_sources:.h=)) do @copy ..\gtk\%f.h "$(GTK_HEADERS_BASE_INSTALL_DIR)\gtk"
+	@for %f in ($(a11y_h_sources:a11y/=)) do @copy ..\gtk\a11y\%f "$(GTK_HEADERS_BASE_INSTALL_DIR)\gtk\a11y"
+	@for %f in ($(gtk_deprecated_h_sources:deprecated/=)) do @copy ..\gtk\deprecated\%f "$(GTK_HEADERS_BASE_INSTALL_DIR)\gtk\deprecated"
+
+# Copy the libgail-util headers
+	@for %f in ($(util_public_h_sources)) do @copy ..\libgail-util\%f "$(GAILUTIL_HEADERS_BASE_INSTALL_DIR)\libgail-util"
+
+# install the data files
+install-data:
+	@echo Copying the non-generated data files...
+# GSettings schemas
+	@if not exist $(PREFIX)\share\glib-2.0\schemas\ mkdir $(PREFIX)\share\glib-2.0\schemas
+	@for %f in (..\gtk\org.gtk.Settings.*.gschema.xml ..\demos\gtk-demo\org.gtk.Demo.gschema.xml) do @copy %f "$(PREFIX)\share\glib-2.0\schemas"
+	@-$(GLIB_COMPILE_SCHEMAS) $(PREFIX)\share\glib-2.0\schemas
+# Demo icons
+	@for %t in (16 22 24 32 48 256) do @for %d in ($(PREFIX)\share\icons\hicolor\%tx%t\apps) do @((if not exist %d\ mkdir %d) & copy /b ..\demos\gtk-demo\data\%tx%t\gtk3-demo.png "%d")
+	@-$(BASE_BUILT_BIN_DIR)\gtk-update-icon-cache.exe --ignore-theme-index --force "$(PREFIX)\share\icons\hicolor"
diff --git a/win32/vs10/Makefile.am b/win32/vs10/Makefile.am
index ef627102d4..b49bb752fe 100644
--- a/win32/vs10/Makefile.am
+++ b/win32/vs10/Makefile.am
@@ -18,16 +18,7 @@ GENERATED_ITEMS = \
 	gtk3-icon-browser.vcxproj		\
 	gtk3-icon-browser.vcxproj.filters	\
 	gailutil-3.vcxproj			\
-	gailutil-3.vcxproj.filters		\
-	gtk3-install.props			\
-	gtk3-version-paths.props
-
-MSVC10_HEADERS_LISTS =	\
-	gdk3-win32.vs10.headers		\
-	gdk3-broadway.vs10.headers	\
-	gdk-3.vs10.headers		\
-	gtk-3.vs10.headers		\
-	gailutil-3.vs10.headers
+	gailutil-3.vcxproj.filters
 
 EXTRA_DIST += \
 	README.txt				\
@@ -60,25 +51,10 @@ EXTRA_DIST += \
 	gailutil-3.vcxprojin			\
 	gailutil-3.vcxproj.filtersin		\
 	gtk3-install.vcxproj			\
-	gtk3-install.vcxproj.filters		\
 	gtk3-introspect.vcxproj			\
-	gtk3-build-defines.props		\
-	gtk3-copy-gdk-broadway.props		\
-	gtk3-ignore-broadway.props		\
-	gtk3-install.propsin			\
-	gtk3-version-paths.props.in		\
 	$(GENERATED_ITEMS)
 
 DISTCLEANFILES = \
 	$(GENERATED_ITEMS)
 
-gtk3-install.props: $(top_srcdir)/win32/vs10/gtk3-install.propsin $(MSVC10_HEADERS_LISTS)
-	-$(RM) $(top_builddir)/win32/vs11/gtk3-install.props
-	-$(RM) $(top_builddir)/win32/vs12/gtk3-install.props
-	-$(RM) $(top_builddir)/win32/vs14/gtk3-install.props
-	-$(RM) $(top_builddir)/win32/vs15/gtk3-install.props
-	-$(RM) $(top_builddir)/win32/vs16/gtk3-install.props
-	$(CPP) -P - <$(top_srcdir)/win32/vs10/gtk3-install.propsin >$@
-	rm $(MSVC10_HEADERS_LISTS)
-
 -include $(top_srcdir)/git.mk
diff --git a/win32/vs10/broadwayd.vcxprojin b/win32/vs10/broadwayd.vcxprojin
index 5e4f3e5415..9436f2e94e 100644
--- a/win32/vs10/broadwayd.vcxprojin
+++ b/win32/vs10/broadwayd.vcxprojin
@@ -24,142 +24,60 @@
     <Keyword>Win32Proj</Keyword>
   </PropertyGroup>
   <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|Win32'" Label="Configuration">
-    <ConfigurationType>Application</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|Win32'" Label="Configuration">
-    <ConfigurationType>Application</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|x64'" Label="Configuration">
-    <ConfigurationType>Application</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|x64'" Label="Configuration">
+  <PropertyGroup Label="Configuration">
     <ConfigurationType>Application</ConfigurationType>
     <CharacterSet>MultiByte</CharacterSet>
+    <WholeProgramOptimization Condition="'$(Configuration)' == 'Release_Broadway'">true</WholeProgramOptimization>
     <PlatformToolset>v100</PlatformToolset>
   </PropertyGroup>
   <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
   <ImportGroup Label="ExtensionSettings">
   </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|Win32'" Label="PropertySheets">
+  <ImportGroup Label="PropertySheets">
     <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|Win32'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
+    <Import Project="..\vs1x-props\gtk3-build-defines.props" />
   </ImportGroup>
   <PropertyGroup Label="UserMacros" />
   <PropertyGroup>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|Win32'">true</LinkIncremental>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|Win32'">false</LinkIncremental>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|x64'">true</LinkIncremental>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|x64'">false</LinkIncremental>
+    <LinkIncremental Condition="'$(Configuration)' == 'Debug_Broadway'">true</LinkIncremental>
+    <LinkIncremental Condition="'$(Configuration)' == 'Release_Broadway'">false</LinkIncremental>
   </PropertyGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|Win32'">
-    <ClCompile>
-      <Optimization>Disabled</Optimization>
-      <AdditionalIncludeDirectories>$(GdkBaseIncludes);..\..\gdk\broadway;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>_DEBUG;$(GdkDefines);%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <MinimalRebuild>true</MinimalRebuild>
-      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
-      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>
-    </ClCompile>
-    <Link>
-      <AdditionalDependencies>ws2_32.lib;%(AdditionalDependencies)</AdditionalDependencies>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <SubSystem>Console</SubSystem>
-      <TargetMachine>MachineX86</TargetMachine>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|Win32'">
-    <ClCompile>
-      <Optimization>MaxSpeed</Optimization>
-      <AdditionalIncludeDirectories>$(GdkBaseIncludes);..\..\gdk\broadway;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <IntrinsicFunctions>true</IntrinsicFunctions>
-      <PreprocessorDefinitions>$(GdkDefines);%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <FunctionLevelLinking>true</FunctionLevelLinking>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-    </ClCompile>
-    <Link>
-      <AdditionalDependencies>ws2_32.lib;%(AdditionalDependencies)</AdditionalDependencies>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <SubSystem>Console</SubSystem>
-      <OptimizeReferences>true</OptimizeReferences>
-      <EnableCOMDATFolding>true</EnableCOMDATFolding>
-      <TargetMachine>MachineX86</TargetMachine>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|x64'">
-    <Midl>
-      <TargetEnvironment>X64</TargetEnvironment>
-    </Midl>
-    <ClCompile>
-      <Optimization>Disabled</Optimization>
-      <AdditionalIncludeDirectories>$(GdkBaseIncludes);..\..\gdk\broadway;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>_DEBUG;$(GdkDefines);%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <MinimalRebuild>true</MinimalRebuild>
-      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
-      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-    </ClCompile>
-    <Link>
-      <AdditionalDependencies>ws2_32.lib;%(AdditionalDependencies)</AdditionalDependencies>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <SubSystem>Console</SubSystem>
-      <TargetMachine>MachineX64</TargetMachine>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|x64'">
+  <ItemDefinitionGroup>
     <Midl>
-      <TargetEnvironment>X64</TargetEnvironment>
+      <TargetEnvironment Condition="'$(Platform)' == 'x64'">X64</TargetEnvironment>
     </Midl>
     <ClCompile>
-      <Optimization>MaxSpeed</Optimization>
       <AdditionalIncludeDirectories>$(GdkBaseIncludes);..\..\gdk\broadway;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <IntrinsicFunctions>true</IntrinsicFunctions>
-      <PreprocessorDefinitions>$(GdkDefines);%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <FunctionLevelLinking>true</FunctionLevelLinking>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
+      <PrecompiledHeader></PrecompiledHeader>
       <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+      
+      <!-- For Broadway_Debug -->
+      <Optimization Condition="'$(Configuration)' == 'Debug_Broadway'">Disabled</Optimization>
+      <PreprocessorDefinitions Condition="'$(Configuration)' == 'Debug_Broadway'">_DEBUG;$(GdkDefines);%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <MinimalRebuild Condition="'$(Configuration)' == 'Debug_Broadway'">true</MinimalRebuild>
+      <BasicRuntimeChecks Condition="'$(Configuration)' == 'Debug_Broadway'">EnableFastChecks</BasicRuntimeChecks>
+      <RuntimeLibrary Condition="'$(Configuration)' == 'Debug_Broadway'">MultiThreadedDebugDLL</RuntimeLibrary>
+      <DebugInformationFormat Condition="'$(Configuration)|$(Platform)' == 'Debug_Broadway|Win32'">EditAndContinue</DebugInformationFormat>
+      <DebugInformationFormat Condition="'$(Configuration)|$(Platform)' == 'Debug_Broadway|x64'">ProgramDatabase</DebugInformationFormat>
+
+      <!-- For Broadway_Release -->
+      <Optimization Condition="'$(Configuration)' == 'Release_Broadway'">MaxSpeed</Optimization>
+      <PreprocessorDefinitions Condition="'$(Configuration)' == 'Release_Broadway'">$(GdkDefines);%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <IntrinsicFunctions Condition="'$(Configuration)' == 'Release_Broadway'">true</IntrinsicFunctions>
+      <RuntimeLibrary Condition="'$(Configuration)' == 'Release_Broadway'">MultiThreadedDLL</RuntimeLibrary>
+      <DebugInformationFormat Condition="'$(Configuration)' == 'Release_Broadway'">ProgramDatabase</DebugInformationFormat>
     </ClCompile>
     <Link>
       <AdditionalDependencies>ws2_32.lib;%(AdditionalDependencies)</AdditionalDependencies>
       <GenerateDebugInformation>true</GenerateDebugInformation>
       <SubSystem>Console</SubSystem>
-      <OptimizeReferences>true</OptimizeReferences>
-      <EnableCOMDATFolding>true</EnableCOMDATFolding>
-      <TargetMachine>MachineX64</TargetMachine>
+
+      <!-- For Release_Broadway -->
+      <OptimizeReferences Condition="'$(Configuration)' == 'Release_Broadway'">true</OptimizeReferences>
+      <EnableCOMDATFolding Condition="'$(Configuration)' == 'Release_Broadway'">true</EnableCOMDATFolding>
+
+      <TargetMachine Condition="'$(Platform)' == 'Win32'">MachineX86</TargetMachine>
+      <TargetMachine Condition="'$(Platform)' == 'x64'">MachineX64</TargetMachine>
     </Link>
   </ItemDefinitionGroup>
   <ItemGroup>
diff --git a/win32/vs10/gailutil-3.vcxprojin b/win32/vs10/gailutil-3.vcxprojin
index b28b1df7e8..423b338b97 100644
--- a/win32/vs10/gailutil-3.vcxprojin
+++ b/win32/vs10/gailutil-3.vcxprojin
@@ -24,137 +24,46 @@
     <Keyword>Win32Proj</Keyword>
   </PropertyGroup>
   <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
-    <ConfigurationType>DynamicLibrary</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
-    <ConfigurationType>DynamicLibrary</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
-    <ConfigurationType>DynamicLibrary</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
+  <PropertyGroup Label="Configuration">
     <ConfigurationType>DynamicLibrary</ConfigurationType>
     <CharacterSet>MultiByte</CharacterSet>
+    <WholeProgramOptimization Condition="'$(Configuration)' == 'Release'">true</WholeProgramOptimization>
     <PlatformToolset>v100</PlatformToolset>
   </PropertyGroup>
   <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
   <ImportGroup Label="ExtensionSettings">
   </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
+  <ImportGroup Label="PropertySheets">
     <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
+    <Import Project="..\vs1x-props\gtk3-build-defines.props" />
   </ImportGroup>
   <PropertyGroup Label="UserMacros" />
   <PropertyGroup>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</LinkIncremental>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</LinkIncremental>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkIncremental>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkIncremental>
+    <LinkIncremental Condition="'$(Configuration)' == 'Debug'">true</LinkIncremental>
+    <LinkIncremental Condition="'$(Configuration)' == 'Release'">false</LinkIncremental>
   </PropertyGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
-    <ClCompile>
-      <Optimization>Disabled</Optimization>
-      <AdditionalIncludeDirectories>$(GtkBaseIncludes);..\..\gdk\win32;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>_DEBUG;G_ENABLE_DEBUG;GTK_DISABLE_DEPRECATED;GDK_DISABLE_DEPRECATED;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <MinimalRebuild>true</MinimalRebuild>
-      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
-      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>
-    </ClCompile>
-    <Link>
-      <AdditionalDependencies>atk-1.0.lib;%(AdditionalDependencies)</AdditionalDependencies>
-      <OutputFile>$(OutDir)$(GtkDllPrefix)$(ProjectName)$(GtkDllSuffix).dll</OutputFile>
-      <ModuleDefinitionFile>..\..\libgail-util\gailutil.def</ModuleDefinitionFile>
-      <ImportLibrary>$(TargetDir)$(ProjectName).0.lib</ImportLibrary>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <ProgramDatabaseFile>$(OutDir)$(GtkDllPrefix)$(ProjectName)$(GtkDllSuffix).pdb</ProgramDatabaseFile>
-      <SubSystem>Windows</SubSystem>
-      <TargetMachine>MachineX86</TargetMachine>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
-    <ClCompile>
-      <Optimization>MaxSpeed</Optimization>
-      <IntrinsicFunctions>true</IntrinsicFunctions>
-      <AdditionalIncludeDirectories>$(GtkBaseIncludes);..\..\gdk\win32;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>GTK_DISABLE_DEPRECATED;GDK_DISABLE_DEPRECATED;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <FunctionLevelLinking>true</FunctionLevelLinking>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-    </ClCompile>
-    <Link>
-      <AdditionalDependencies>atk-1.0.lib;%(AdditionalDependencies)</AdditionalDependencies>
-      <OutputFile>$(OutDir)$(GtkDllPrefix)$(ProjectName)$(GtkDllSuffix).dll</OutputFile>
-      <ModuleDefinitionFile>..\..\libgail-util\gailutil.def</ModuleDefinitionFile>
-      <ImportLibrary>$(TargetDir)$(ProjectName).0.lib</ImportLibrary>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <ProgramDatabaseFile>$(OutDir)$(GtkDllPrefix)$(ProjectName)$(GtkDllSuffix).pdb</ProgramDatabaseFile>
-      <SubSystem>Windows</SubSystem>
-      <OptimizeReferences>true</OptimizeReferences>
-      <EnableCOMDATFolding>true</EnableCOMDATFolding>
-      <TargetMachine>MachineX86</TargetMachine>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
-    <ClCompile>
-      <Optimization>Disabled</Optimization>
-      <AdditionalIncludeDirectories>$(GtkBaseIncludes);..\..\gdk\win32;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>_DEBUG;G_ENABLE_DEBUG;GTK_DISABLE_DEPRECATED;GDK_DISABLE_DEPRECATED;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <MinimalRebuild>true</MinimalRebuild>
-      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
-      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-    </ClCompile>
-    <Link>
-      <AdditionalDependencies>atk-1.0.lib;%(AdditionalDependencies)</AdditionalDependencies>
-      <OutputFile>$(OutDir)$(GtkDllPrefix)$(ProjectName)$(GtkDllSuffix).dll</OutputFile>
-      <ModuleDefinitionFile>..\..\libgail-util\gailutil.def</ModuleDefinitionFile>
-      <ImportLibrary>$(TargetDir)$(ProjectName).0.lib</ImportLibrary>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <ProgramDatabaseFile>$(OutDir)$(GtkDllPrefix)$(ProjectName)$(GtkDllSuffix).pdb</ProgramDatabaseFile>
-      <SubSystem>Windows</SubSystem>
-      <TargetMachine>MachineX64</TargetMachine>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
+  <ItemDefinitionGroup>
     <ClCompile>
       <AdditionalIncludeDirectories>$(GtkBaseIncludes);..\..\gdk\win32;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>GTK_DISABLE_DEPRECATED;GDK_DISABLE_DEPRECATED;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
+      <PrecompiledHeader></PrecompiledHeader>
       <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+
+      <!-- For Debug -->
+      <Optimization Condition="'$(Configuration)' == 'Debug'">Disabled</Optimization>
+      <PreprocessorDefinitions Condition="'$(Configuration)' == 'Debug'">_DEBUG;G_ENABLE_DEBUG;GTK_DISABLE_DEPRECATED;GDK_DISABLE_DEPRECATED;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <MinimalRebuild Condition="'$(Configuration)' == 'Debug'">true</MinimalRebuild>
+      <BasicRuntimeChecks Condition="'$(Configuration)' == 'Debug'">EnableFastChecks</BasicRuntimeChecks>
+      <RuntimeLibrary Condition="'$(Configuration)' == 'Debug'">MultiThreadedDebugDLL</RuntimeLibrary>
+      <DebugInformationFormat Condition="'$(Configuration)|$(Platform)'== 'Debug|Win32'">EditAndContinue</DebugInformationFormat>
+      <DebugInformationFormat Condition="'$(Configuration)|$(Platform)'== 'Debug|x64'">ProgramDatabase</DebugInformationFormat>
+
+      <!-- For Release -->
+      <Optimization Condition="'$(Configuration)' == 'Release'">MaxSpeed</Optimization>
+      <IntrinsicFunctions Condition="'$(Configuration)' == 'Release'">true</IntrinsicFunctions>
+      <PreprocessorDefinitions Condition="'$(Configuration)' == 'Release'">G_ENABLE_DEBUG;GTK_DISABLE_DEPRECATED;GDK_DISABLE_DEPRECATED;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary Condition="'$(Configuration)' == 'Release'">MultiThreadedDLL</RuntimeLibrary>
+      <FunctionLevelLinking Condition="'$(Configuration)|$(Platform)'== 'Release|Win32'">true</FunctionLevelLinking>
+      <DebugInformationFormat Condition="'$(Configuration)' == 'Release'">ProgramDatabase</DebugInformationFormat>
     </ClCompile>
     <Link>
       <AdditionalDependencies>atk-1.0.lib;%(AdditionalDependencies)</AdditionalDependencies>
@@ -164,9 +73,13 @@
       <GenerateDebugInformation>true</GenerateDebugInformation>
       <ProgramDatabaseFile>$(OutDir)$(GtkDllPrefix)$(ProjectName)$(GtkDllSuffix).pdb</ProgramDatabaseFile>
       <SubSystem>Windows</SubSystem>
-      <OptimizeReferences>true</OptimizeReferences>
-      <EnableCOMDATFolding>true</EnableCOMDATFolding>
-      <TargetMachine>MachineX64</TargetMachine>
+
+      <!-- For Release -->
+      <OptimizeReferences Condition="'$(Configuration)' == 'Release'">true</OptimizeReferences>
+      <EnableCOMDATFolding Condition="'$(Configuration)' == 'Release'">true</EnableCOMDATFolding>
+
+      <TargetMachine Condition="'$(Platform)' == 'Win32'">MachineX86</TargetMachine>
+      <TargetMachine Condition="'$(Platform)' == 'x64'">MachineX64</TargetMachine>
     </Link>
   </ItemDefinitionGroup>
   <ItemGroup>
diff --git a/win32/vs10/gdk-3.vcxprojin b/win32/vs10/gdk-3.vcxprojin
index fd5e79eb17..96b8cd137b 100644
--- a/win32/vs10/gdk-3.vcxprojin
+++ b/win32/vs10/gdk-3.vcxprojin
@@ -40,299 +40,104 @@
     <Keyword>Win32Proj</Keyword>
   </PropertyGroup>
   <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
-    <ConfigurationType>DynamicLibrary</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
-    <ConfigurationType>DynamicLibrary</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
-    <ConfigurationType>DynamicLibrary</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
-    <ConfigurationType>DynamicLibrary</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|Win32'" Label="Configuration">
-    <ConfigurationType>DynamicLibrary</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|Win32'" Label="Configuration">
-    <ConfigurationType>DynamicLibrary</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|x64'" Label="Configuration">
-    <ConfigurationType>DynamicLibrary</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|x64'" Label="Configuration">
+  <PropertyGroup Label="Configuration">
     <ConfigurationType>DynamicLibrary</ConfigurationType>
     <CharacterSet>MultiByte</CharacterSet>
+    <WholeProgramOptimization Condition="'$(Configuration)' == 'Release'">true</WholeProgramOptimization>
+    <WholeProgramOptimization Condition="'$(Configuration)' == 'Release_Broadway'">true</WholeProgramOptimization>
     <PlatformToolset>v100</PlatformToolset>
   </PropertyGroup>
   <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
   <ImportGroup Label="ExtensionSettings">
   </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-ignore-broadway.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-ignore-broadway.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-ignore-broadway.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-ignore-broadway.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|Win32'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-copy-gdk-broadway.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|Win32'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-copy-gdk-broadway.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|x64'" Label="PropertySheets">
+  <ImportGroup Label="PropertySheets">
     <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-copy-gdk-broadway.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-copy-gdk-broadway.props" />
+    <Import Project="..\vs1x-props\gtk3-build-defines.props" />
   </ImportGroup>
   <PropertyGroup Label="UserMacros" />
   <PropertyGroup>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</LinkIncremental>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkIncremental>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</LinkIncremental>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkIncremental>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|Win32'">true</LinkIncremental>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|Win32'">false</LinkIncremental>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|x64'">true</LinkIncremental>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|x64'">false</LinkIncremental>
+    <LinkIncremental Condition="'$(Configuration)' == 'Debug'">true</LinkIncremental>
+    <LinkIncremental Condition="'$(Configuration)' == 'Release'">false</LinkIncremental>
+    <LinkIncremental Condition="'$(Configuration)' == 'Debug_Broadway'">true</LinkIncremental>
+    <LinkIncremental Condition="'$(Configuration)' == 'Release_Broadway'">false</LinkIncremental>
   </PropertyGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
+  <ItemDefinitionGroup>
     <ClCompile>
-      <Optimization>Disabled</Optimization>
-      <AdditionalIncludeDirectories>$(GdkBaseIncludes);..\..\gdk\win32;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>_DEBUG;G_ENABLE_DEBUG;$(GdkDefines);%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <MinimalRebuild>true</MinimalRebuild>
-      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
-      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
+      <PrecompiledHeader></PrecompiledHeader>
       <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>
+
+      <!-- non-Broadway -->
+      <AdditionalIncludeDirectories Condition="'$(Configuration)' == 'Debug'">$(GdkBaseIncludes);..\..\gdk\win32;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <AdditionalIncludeDirectories Condition="'$(Configuration)' == 'Release'">$(GdkBaseIncludes);..\..\gdk\win32;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+
+      <!-- Broadway -->
+      <AdditionalIncludeDirectories Condition="'$(Configuration)' == 'Debug_Broadway'">$(GdkBaseIncludes);..\..\gdk\win32;..\..\gdk\broadway;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <AdditionalIncludeDirectories Condition="'$(Configuration)' == 'Release_Broadway'">$(GdkBaseIncludes);..\..\gdk\win32;..\..\gdk\broadway;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+
+      <!-- Debug -->
+      <Optimization Condition="'$(Configuration)' == 'Debug'">Disabled</Optimization>
+      <Optimization Condition="'$(Configuration)' == 'Debug_Broadway'">Disabled</Optimization>
+      <PreprocessorDefinitions Condition="'$(Configuration)' == 'Debug'">_DEBUG;G_ENABLE_DEBUG;$(GdkDefines);%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <PreprocessorDefinitions Condition="'$(Configuration)' == 'Debug_Broadway'">_DEBUG;G_ENABLE_DEBUG;$(GdkDefines);%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <MinimalRebuild Condition="'$(Configuration)' == 'Debug'">true</MinimalRebuild>
+      <MinimalRebuild Condition="'$(Configuration)' == 'Debug_Broadway'">true</MinimalRebuild>
+      <BasicRuntimeChecks Condition="'$(Configuration)' == 'Debug'">EnableFastChecks</BasicRuntimeChecks>
+      <BasicRuntimeChecks Condition="'$(Configuration)' == 'Debug_Broadway'">EnableFastChecks</BasicRuntimeChecks>
+      <RuntimeLibrary Condition="'$(Configuration)' == 'Debug'">MultiThreadedDebugDLL</RuntimeLibrary>
+      <RuntimeLibrary Condition="'$(Configuration)' == 'Debug_Broadway'">MultiThreadedDebugDLL</RuntimeLibrary>
+      <DebugInformationFormat Condition="'$(Configuration)|$(Platform)'== 'Debug|Win32'">EditAndContinue</DebugInformationFormat>
+      <DebugInformationFormat Condition="'$(Configuration)|$(Platform)'== 'Debug_Broadway|Win32'">EditAndContinue</DebugInformationFormat>
+      <DebugInformationFormat Condition="'$(Configuration)|$(Platform)'== 'Debug|x64'">ProgramDatabase</DebugInformationFormat>
+      <DebugInformationFormat Condition="'$(Configuration)|$(Platform)'== 'Debug_Broadway|x64'">ProgramDatabase</DebugInformationFormat>
+
+      <!-- Release -->
+      <PreprocessorDefinitions Condition="'$(Configuration)' == 'Release'">$(GdkDefines);%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <PreprocessorDefinitions Condition="'$(Configuration)' == 'Release_Broadway'">$(GdkDefines);%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary Condition="'$(Configuration)' == 'Release'">MultiThreadedDLL</RuntimeLibrary>
+      <RuntimeLibrary Condition="'$(Configuration)' == 'Release_Broadway'">MultiThreadedDLL</RuntimeLibrary>
+      <DebugInformationFormat Condition="'$(Configuration)' == 'Release'">ProgramDatabase</DebugInformationFormat>
+      <DebugInformationFormat Condition="'$(Configuration)' == 'Release_Broadway'">ProgramDatabase</DebugInformationFormat>
     </ClCompile>
     <ResourceCompile>
       <AdditionalIncludeDirectories>..\..\gdk\win32\rc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
     </ResourceCompile>
     <Link>
-      <AdditionalDependencies>$(GdkAdditionalLibs);%(AdditionalDependencies)</AdditionalDependencies>
       <OutputFile>$(OutDir)$(GtkDllPrefix)$(ProjectName)$(GtkDllSuffix).dll</OutputFile>
       <GenerateDebugInformation>true</GenerateDebugInformation>
       <ProgramDatabaseFile>$(OutDir)$(GtkDllPrefix)$(ProjectName)$(GtkDllSuffix).pdb</ProgramDatabaseFile>
       <SubSystem>Windows</SubSystem>
       <ImportLibrary>$(TargetDir)$(ProjectName).0.lib</ImportLibrary>
-      <TargetMachine>MachineX86</TargetMachine>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|Win32'">
-    <ClCompile>
-      <Optimization>Disabled</Optimization>
-      <AdditionalIncludeDirectories>$(GdkBaseIncludes);..\..\gdk\win32;..\..\gdk\broadway;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>_DEBUG;G_ENABLE_DEBUG;$(GdkDefines);%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <MinimalRebuild>true</MinimalRebuild>
-      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
-      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>
-    </ClCompile>
-    <ResourceCompile>
-      <AdditionalIncludeDirectories>..\..\gdk\win32\rc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-    </ResourceCompile>
-    <Link>
-      <AdditionalDependencies>$(GdkAdditionalLibs);$(GdkBroadwayAdditionalLibs);%(AdditionalDependencies)</AdditionalDependencies>
-      <OutputFile>$(OutDir)$(GtkDllPrefix)$(ProjectName)$(GtkDllSuffix).dll</OutputFile>
-      <ImportLibrary>$(TargetDir)$(ProjectName).0.lib</ImportLibrary>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <ProgramDatabaseFile>$(OutDir)$(GtkDllPrefix)$(ProjectName)$(GtkDllSuffix).pdb</ProgramDatabaseFile>
-      <SubSystem>Windows</SubSystem>
-      <TargetMachine>MachineX86</TargetMachine>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
-    <ClCompile>
-      <AdditionalIncludeDirectories>$(GdkBaseIncludes);..\..\gdk\win32;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>$(GdkDefines);%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-    </ClCompile>
-    <ResourceCompile>
-      <AdditionalIncludeDirectories>..\..\gdk\win32\rc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-    </ResourceCompile>
-    <Link>
-      <AdditionalDependencies>$(GdkAdditionalLibs);%(AdditionalDependencies)</AdditionalDependencies>
-      <OutputFile>$(OutDir)$(GtkDllPrefix)$(ProjectName)$(GtkDllSuffix).dll</OutputFile>
-      <ImportLibrary>$(TargetDir)$(ProjectName).0.lib</ImportLibrary>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <ProgramDatabaseFile>$(OutDir)$(GtkDllPrefix)$(ProjectName)$(GtkDllSuffix).pdb</ProgramDatabaseFile>
-      <SubSystem>Windows</SubSystem>
-      <OptimizeReferences>true</OptimizeReferences>
-      <EnableCOMDATFolding>true</EnableCOMDATFolding>
-      <TargetMachine>MachineX86</TargetMachine>
+      <AdditionalOptions>/EXPORT:gdk_win32_display_manager_get_type</AdditionalOptions>
+
+      <!-- non-Broadway -->
+      <AdditionalDependencies Condition="'$(Configuration)' == 'Debug'">$(GdkAdditionalLibs);%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies Condition="'$(Configuration)' == 'Release'">$(GdkAdditionalLibs);%(AdditionalDependencies)</AdditionalDependencies>
+
+      <!-- Broadway -->
+      <AdditionalDependencies Condition="'$(Configuration)' == 'Debug_Broadway'">$(GdkAdditionalLibs);$(GdkBroadwayAdditionalLibs);%(AdditionalDependencies)</AdditionalDependencies>
+      <AdditionalDependencies Condition="'$(Configuration)' == 'Release_Broadway'">$(GdkAdditionalLibs);$(GdkBroadwayAdditionalLibs);%(AdditionalDependencies)</AdditionalDependencies>
+
+      <!-- Release -->
+      <OptimizeReferences Condition="'$(Configuration)' == 'Release'">true</OptimizeReferences>
+      <OptimizeReferences Condition="'$(Configuration)' == 'Release_Broadway'">true</OptimizeReferences>
+      <EnableCOMDATFolding Condition="'$(Configuration)' == 'Release'">true</EnableCOMDATFolding>
+      <EnableCOMDATFolding Condition="'$(Configuration)' == 'Release_Broadway'">true</EnableCOMDATFolding>
+
+      <TargetMachine Condition="'$(Platform)' == 'Win32'">MachineX86</TargetMachine>
+      <TargetMachine Condition="'$(Platform)' == 'x64'">MachineX64</TargetMachine>
     </Link>
   </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|Win32'">
-    <ClCompile>
-      <AdditionalIncludeDirectories>$(GdkBaseIncludes);..\..\gdk\win32;..\..\gdk\broadway;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>$(GdkDefines);%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-    </ClCompile>
-    <ResourceCompile>
-      <AdditionalIncludeDirectories>..\..\gdk\win32\rc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-    </ResourceCompile>
-    <Link>
-      <AdditionalDependencies>$(GdkAdditionalLibs);$(GdkBroadwayAdditionalLibs);%(AdditionalDependencies)</AdditionalDependencies>
-      <OutputFile>$(OutDir)$(GtkDllPrefix)$(ProjectName)$(GtkDllSuffix).dll</OutputFile>
-      <ImportLibrary>$(TargetDir)$(ProjectName).0.lib</ImportLibrary>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <ProgramDatabaseFile>$(OutDir)$(GtkDllPrefix)$(ProjectName)$(GtkDllSuffix).pdb</ProgramDatabaseFile>
-      <SubSystem>Windows</SubSystem>
-      <OptimizeReferences>true</OptimizeReferences>
-      <EnableCOMDATFolding>true</EnableCOMDATFolding>
-      <TargetMachine>MachineX86</TargetMachine>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
-    <ClCompile>
-      <Optimization>Disabled</Optimization>
-      <AdditionalIncludeDirectories>$(GdkBaseIncludes);..\..\gdk\win32;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>_DEBUG;G_ENABLE_DEBUG;$(GdkDefines);%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <MinimalRebuild>true</MinimalRebuild>
-      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
-      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-    </ClCompile>
-    <ResourceCompile>
-      <AdditionalIncludeDirectories>..\..\gdk\win32\rc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-    </ResourceCompile>
-    <Link>
-      <AdditionalDependencies>$(GdkAdditionalLibs);%(AdditionalDependencies)</AdditionalDependencies>
-      <OutputFile>$(OutDir)$(GtkDllPrefix)$(ProjectName)$(GtkDllSuffix).dll</OutputFile>
-      <ImportLibrary>$(TargetDir)$(ProjectName).0.lib</ImportLibrary>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <ProgramDatabaseFile>$(OutDir)$(GtkDllPrefix)$(ProjectName)$(GtkDllSuffix).pdb</ProgramDatabaseFile>
-      <SubSystem>Windows</SubSystem>
-      <TargetMachine>MachineX64</TargetMachine>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|x64'">
-    <ClCompile>
-      <Optimization>Disabled</Optimization>
-      <AdditionalIncludeDirectories>$(GdkBaseIncludes);..\..\gdk\win32;..\..\gdk\broadway;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>_DEBUG;G_ENABLE_DEBUG;$(GdkDefines);%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <MinimalRebuild>true</MinimalRebuild>
-      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
-      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-    </ClCompile>
-    <ResourceCompile>
-      <AdditionalIncludeDirectories>..\..\gdk\win32\rc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-    </ResourceCompile>
-    <Link>
-      <AdditionalDependencies>$(GdkAdditionalLibs);$(GdkBroadwayAdditionalLibs);%(AdditionalDependencies)</AdditionalDependencies>
-      <OutputFile>$(OutDir)$(GtkDllPrefix)$(ProjectName)$(GtkDllSuffix).dll</OutputFile>
-      <ImportLibrary>$(TargetDir)$(ProjectName).0.lib</ImportLibrary>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <ProgramDatabaseFile>$(OutDir)$(GtkDllPrefix)$(ProjectName)$(GtkDllSuffix).pdb</ProgramDatabaseFile>
-      <SubSystem>Windows</SubSystem>
-      <TargetMachine>MachineX64</TargetMachine>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
-    <ClCompile>
-      <AdditionalIncludeDirectories>$(GdkBaseIncludes);..\..\gdk\win32;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>$(GdkDefines);%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-    </ClCompile>
-    <ResourceCompile>
-      <AdditionalIncludeDirectories>..\..\gdk\win32\rc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-    </ResourceCompile>
-    <Link>
-      <AdditionalDependencies>$(GdkAdditionalLibs);%(AdditionalDependencies)</AdditionalDependencies>
-      <OutputFile>$(OutDir)$(GtkDllPrefix)$(ProjectName)$(GtkDllSuffix).dll</OutputFile>
-      <ImportLibrary>$(TargetDir)$(ProjectName).0.lib</ImportLibrary>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <ProgramDatabaseFile>$(OutDir)$(GtkDllPrefix)$(ProjectName)$(GtkDllSuffix).pdb</ProgramDatabaseFile>
-      <SubSystem>Windows</SubSystem>
-      <OptimizeReferences>true</OptimizeReferences>
-      <EnableCOMDATFolding>true</EnableCOMDATFolding>
-      <TargetMachine>MachineX64</TargetMachine>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|x64'">
-    <ClCompile>
-      <AdditionalIncludeDirectories>$(GdkBaseIncludes);..\..\gdk\win32;..\..\gdk\broadway;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>$(GdkDefines);%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-    </ClCompile>
-    <ResourceCompile>
-      <AdditionalIncludeDirectories>..\..\gdk\win32\rc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-    </ResourceCompile>
-    <Link>
-      <AdditionalDependencies>$(GdkAdditionalLibs);$(GdkBroadwayAdditionalLibs);%(AdditionalDependencies)</AdditionalDependencies>
-      <OutputFile>$(OutDir)$(GtkDllPrefix)$(ProjectName)$(GtkDllSuffix).dll</OutputFile>
-      <ImportLibrary>$(TargetDir)$(ProjectName).0.lib</ImportLibrary>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <ProgramDatabaseFile>$(OutDir)$(GtkDllPrefix)$(ProjectName)$(GtkDllSuffix).pdb</ProgramDatabaseFile>
-      <SubSystem>Windows</SubSystem>
-      <OptimizeReferences>true</OptimizeReferences>
-      <EnableCOMDATFolding>true</EnableCOMDATFolding>
-      <TargetMachine>MachineX64</TargetMachine>
-    </Link>
+  <ItemDefinitionGroup>
+    <PostBuildEvent>
+      <Command Condition="'$(Configuration)' == 'Debug_Broadway'">
+if not exist $(OutDir)\..\..\..\Debug\$(Platform)\bin\ mkdir $(OutDir)\..\..\..\Debug\$(Platform)\bin
+copy /b "$(OutDir)$(GtkDllPrefix)$(ProjectName)$(GtkDllSuffix).dll" "$(OutDir)\..\..\..\Debug\$(Platform)\bin"
+copy /b "$(TargetDir)$(ProjectName).0.lib" "$(OutDir)\..\..\..\Debug\$(Platform)\bin"</Command>
+      <Command Condition="'$(Configuration)' == 'Release_Broadway'">
+if not exist $(OutDir)\..\..\..\Release\$(Platform)\bin\ mkdir $(OutDir)\..\..\..\Release\$(Platform)\bin
+copy /b "$(OutDir)$(GtkDllPrefix)$(ProjectName)$(GtkDllSuffix).dll" "$(OutDir)\..\..\..\Release\$(Platform)\bin"
+copy /b "$(TargetDir)$(ProjectName).0.lib" "$(OutDir)\..\..\..\Release\$(Platform)\bin"</Command>
+    </PostBuildEvent>
   </ItemDefinitionGroup>
   <ItemGroup>
     <ResourceCompile Include="$(GdkGenSrcDir)\gdk\gdk.rc" />
@@ -348,6 +153,8 @@
     <ProjectReference Include="gdk3-broadway.vcxproj">
       <Project>{1df4c475-4472-4ee4-ac2b-3ab5a4c1a453}</Project>
       <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
+      <LinkLibraryDependencies Condition="'$(Configuration)' == 'Debug'">false</LinkLibraryDependencies>
+      <LinkLibraryDependencies Condition="'$(Configuration)' == 'Release'">false</LinkLibraryDependencies>
     </ProjectReference>
     <ProjectReference Include="gdk3-win32.vcxproj">
       <Project>{aba7685a-7cbb-4626-b5e5-6eeea5b489ef}</Project>
diff --git a/win32/vs10/gdk3-broadway.vcxprojin b/win32/vs10/gdk3-broadway.vcxprojin
index 9827954fac..123d6d70e8 100644
--- a/win32/vs10/gdk3-broadway.vcxprojin
+++ b/win32/vs10/gdk3-broadway.vcxprojin
@@ -24,96 +24,39 @@
     <Keyword>Win32Proj</Keyword>
   </PropertyGroup>
   <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|Win32'" Label="Configuration">
-    <ConfigurationType>StaticLibrary</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|Win32'" Label="Configuration">
-    <ConfigurationType>StaticLibrary</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|x64'" Label="Configuration">
-    <ConfigurationType>StaticLibrary</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|x64'" Label="Configuration">
+  <PropertyGroup Label="Configuration">
     <ConfigurationType>StaticLibrary</ConfigurationType>
     <CharacterSet>MultiByte</CharacterSet>
+    <WholeProgramOptimization Condition="'$(Configuration)' == 'Release_Broadway'">true</WholeProgramOptimization>
     <PlatformToolset>v100</PlatformToolset>
   </PropertyGroup>
   <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
   <ImportGroup Label="ExtensionSettings">
   </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|Win32'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|Win32'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|x64'" Label="PropertySheets">
+  <ImportGroup Label="PropertySheets">
     <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
+    <Import Project="..\vs1x-props\gtk3-build-defines.props" />
   </ImportGroup>
   <PropertyGroup Label="UserMacros" />
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|Win32'">
-    <ClCompile>
-      <Optimization>Disabled</Optimization>
-      <AdditionalIncludeDirectories>$(GdkBaseIncludes);..\..\gdk\broadway;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>_DEBUG;G_ENABLE_DEBUG;$(GdkDefines);%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <MinimalRebuild>true</MinimalRebuild>
-      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
-      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>
-    </ClCompile>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|Win32'">
-    <ClCompile>
-      <AdditionalIncludeDirectories>$(GdkBaseIncludes);..\..\gdk\broadway;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>$(GdkDefines);%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-    </ClCompile>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|x64'">
-    <ClCompile>
-      <Optimization>Disabled</Optimization>
-      <AdditionalIncludeDirectories>$(GdkBaseIncludes);..\..\gdk\broadway;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>_DEBUG;G_ENABLE_DEBUG;$(GdkDefines);%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <MinimalRebuild>true</MinimalRebuild>
-      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
-      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-    </ClCompile>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|x64'">
+  <ItemDefinitionGroup>
     <ClCompile>
       <AdditionalIncludeDirectories>$(GdkBaseIncludes);..\..\gdk\broadway;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>$(GdkDefines);%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
+      <PrecompiledHeader></PrecompiledHeader>
       <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+
+      <!-- For Debug_Broadway -->
+      <Optimization Condition="'$(Configuration)' == 'Debug_Broadway'">Disabled</Optimization>
+      <PreprocessorDefinitions Condition="'$(Configuration)' == 'Debug_Broadway'">_DEBUG;G_ENABLE_DEBUG;$(GdkDefines);%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <MinimalRebuild Condition="'$(Configuration)' == 'Debug_Broadway'">true</MinimalRebuild>
+      <BasicRuntimeChecks Condition="'$(Configuration)' == 'Debug_Broadway'">EnableFastChecks</BasicRuntimeChecks>
+      <RuntimeLibrary Condition="'$(Configuration)' == 'Debug_Broadway'">MultiThreadedDebugDLL</RuntimeLibrary>
+      <DebugInformationFormat Condition="'$(Configuration)|$(Platform)'== 'Debug_Broadway|Win32'">EditAndContinue</DebugInformationFormat>
+      <DebugInformationFormat Condition="'$(Configuration)|$(Platform)'== 'Debug_Broadway|x64'">ProgramDatabase</DebugInformationFormat>
+
+      <!-- For Release_Broadway -->
+      <PreprocessorDefinitions Condition="'$(Configuration)' == 'Release_Broadway'">$(GdkDefines);%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary Condition="'$(Configuration)' == 'Release_Broadway'">MultiThreadedDLL</RuntimeLibrary>
+      <DebugInformationFormat Condition="'$(Configuration)' == 'Release_Broadway'">ProgramDatabase</DebugInformationFormat>
     </ClCompile>
   </ItemDefinitionGroup>
   <ItemGroup>
diff --git a/win32/vs10/gdk3-win32.vcxprojin b/win32/vs10/gdk3-win32.vcxprojin
index 37e5586c01..f49e8de447 100644
--- a/win32/vs10/gdk3-win32.vcxprojin
+++ b/win32/vs10/gdk3-win32.vcxprojin
@@ -24,96 +24,39 @@
     <Keyword>Win32Proj</Keyword>
   </PropertyGroup>
   <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
-    <ConfigurationType>StaticLibrary</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
-    <ConfigurationType>StaticLibrary</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
-    <ConfigurationType>StaticLibrary</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
+  <PropertyGroup Label="Configuration">
     <ConfigurationType>StaticLibrary</ConfigurationType>
     <CharacterSet>MultiByte</CharacterSet>
+    <WholeProgramOptimization Condition="'$(Configuration)' == 'Release'">true</WholeProgramOptimization>
     <PlatformToolset>v100</PlatformToolset>
   </PropertyGroup>
   <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
   <ImportGroup Label="ExtensionSettings">
   </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
+  <ImportGroup Label="PropertySheets">
     <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
+    <Import Project="..\vs1x-props\gtk3-build-defines.props" />
   </ImportGroup>
   <PropertyGroup Label="UserMacros" />
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
-    <ClCompile>
-      <Optimization>Disabled</Optimization>
-      <AdditionalIncludeDirectories>$(GdkBaseIncludes);..\..\gdk\win32;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>_DEBUG;G_ENABLE_DEBUG;$(GdkDefines);INSIDE_GDK_WIN32;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <MinimalRebuild>true</MinimalRebuild>
-      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
-      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>
-    </ClCompile>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
-    <ClCompile>
-      <AdditionalIncludeDirectories>$(GdkBaseIncludes);..\..\gdk\win32;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>$(GdkDefines);INSIDE_GDK_WIN32;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-    </ClCompile>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
-    <ClCompile>
-      <Optimization>Disabled</Optimization>
-      <AdditionalIncludeDirectories>$(GdkBaseIncludes);..\..\gdk\win32;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>_DEBUG;G_ENABLE_DEBUG;$(GdkDefines);INSIDE_GDK_WIN32;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <MinimalRebuild>true</MinimalRebuild>
-      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
-      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-    </ClCompile>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
+  <ItemDefinitionGroup>
     <ClCompile>
       <AdditionalIncludeDirectories>$(GdkBaseIncludes);..\..\gdk\win32;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>$(GdkDefines);INSIDE_GDK_WIN32;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
+      <PrecompiledHeader></PrecompiledHeader>
       <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+
+      <!-- For Debug -->
+      <Optimization Condition="'$(Configuration)' == 'Debug'">Disabled</Optimization>
+      <PreprocessorDefinitions Condition="'$(Configuration)' == 'Debug'">_DEBUG;G_ENABLE_DEBUG;$(GdkDefines);INSIDE_GDK_WIN32;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <MinimalRebuild Condition="'$(Configuration)' == 'Debug'">true</MinimalRebuild>
+      <BasicRuntimeChecks Condition="'$(Configuration)' == 'Debug'">EnableFastChecks</BasicRuntimeChecks>
+      <RuntimeLibrary Condition="'$(Configuration)' == 'Debug'">MultiThreadedDebugDLL</RuntimeLibrary>
+      <DebugInformationFormat Condition="'$(Configuration)|$(Platform)'== 'Debug|Win32'">EditAndContinue</DebugInformationFormat>
+      <DebugInformationFormat Condition="'$(Configuration)|$(Platform)'== 'Debug|x64'">ProgramDatabase</DebugInformationFormat>
+
+      <!-- For Release -->
+      <PreprocessorDefinitions Condition="'$(Configuration)' == 'Release'">$(GdkDefines);INSIDE_GDK_WIN32;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary Condition="'$(Configuration)' == 'Release'">MultiThreadedDLL</RuntimeLibrary>
+      <DebugInformationFormat Condition="'$(Configuration)' == 'Release'">ProgramDatabase</DebugInformationFormat>
     </ClCompile>
   </ItemDefinitionGroup>
   <ItemGroup>
diff --git a/win32/vs10/gtk-3.vcxprojin b/win32/vs10/gtk-3.vcxprojin
index 188340308c..c9922105cb 100644
--- a/win32/vs10/gtk-3.vcxprojin
+++ b/win32/vs10/gtk-3.vcxprojin
@@ -26,22 +26,7 @@
     <Keyword>Win32Proj</Keyword>
   </PropertyGroup>
   <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
-    <ConfigurationType>DynamicLibrary</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
-    <ConfigurationType>DynamicLibrary</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
-    <ConfigurationType>DynamicLibrary</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
+  <PropertyGroup Label="Configuration">
     <ConfigurationType>DynamicLibrary</ConfigurationType>
     <CharacterSet>MultiByte</CharacterSet>
     <PlatformToolset>v100</PlatformToolset>
@@ -49,106 +34,34 @@
   <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
   <ImportGroup Label="ExtensionSettings">
   </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="PropertySheets">
+  <ImportGroup Label="PropertySheets">
     <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
+    <Import Project="..\vs1x-props\gtk3-build-defines.props" />
   </ImportGroup>
   <PropertyGroup Label="UserMacros" />
   <PropertyGroup>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</LinkIncremental>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkIncremental>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</LinkIncremental>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkIncremental>
+    <LinkIncremental Condition="'$(Configuration)' == 'Debug'">true</LinkIncremental>
+    <LinkIncremental Condition="'$(Configuration)' == 'Release'">false</LinkIncremental>
   </PropertyGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
-    <ClCompile>
-      <Optimization>Disabled</Optimization>
-      <AdditionalIncludeDirectories>$(GtkBaseIncludes);..\..\gdk\win32;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>_DEBUG;G_ENABLE_DEBUG;$(GtkDefines);%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <MinimalRebuild>true</MinimalRebuild>
-      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
-      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>
-    </ClCompile>
-    <Link>
-      <AdditionalDependencies>$(GtkAdditionalLibs);%(AdditionalDependencies)</AdditionalDependencies>
-      <OutputFile>$(OutDir)$(GtkDllPrefix)$(ProjectName)$(GtkDllSuffix).dll</OutputFile>
-      <ImportLibrary>$(TargetDir)$(ProjectName).0.lib</ImportLibrary>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <ProgramDatabaseFile>$(OutDir)$(GtkDllPrefix)$(ProjectName)$(GtkDllSuffix).pdb</ProgramDatabaseFile>
-      <SubSystem>Windows</SubSystem>
-      <TargetMachine>MachineX86</TargetMachine>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
+  <ItemDefinitionGroup>
     <ClCompile>
       <AdditionalIncludeDirectories>$(GtkBaseIncludes);..\..\gdk\win32;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>$(GtkDefines);%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
+      <PrecompiledHeader></PrecompiledHeader>
       <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-    </ClCompile>
-    <Link>
-      <AdditionalDependencies>$(GtkAdditionalLibs);%(AdditionalDependencies)</AdditionalDependencies>
-      <OutputFile>$(OutDir)$(GtkDllPrefix)$(ProjectName)$(GtkDllSuffix).dll</OutputFile>
-      <ImportLibrary>$(TargetDir)$(ProjectName).0.lib</ImportLibrary>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <ProgramDatabaseFile>$(OutDir)$(GtkDllPrefix)$(ProjectName)$(GtkDllSuffix).pdb</ProgramDatabaseFile>
-      <SubSystem>Windows</SubSystem>
-      <OptimizeReferences>true</OptimizeReferences>
-      <EnableCOMDATFolding>true</EnableCOMDATFolding>
-      <TargetMachine>MachineX86</TargetMachine>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
-    <ClCompile>
+
+      <!-- For Debug -->
       <Optimization>Disabled</Optimization>
-      <AdditionalIncludeDirectories>$(GtkBaseIncludes);..\..\gdk\win32;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>_DEBUG;G_ENABLE_DEBUG;$(GtkDefines);%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <MinimalRebuild>true</MinimalRebuild>
-      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
-      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-    </ClCompile>
-    <Link>
-      <AdditionalDependencies>$(GtkAdditionalLibs);%(AdditionalDependencies)</AdditionalDependencies>
-      <OutputFile>$(OutDir)$(GtkDllPrefix)$(ProjectName)$(GtkDllSuffix).dll</OutputFile>
-      <ImportLibrary>$(TargetDir)$(ProjectName).0.lib</ImportLibrary>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <ProgramDatabaseFile>$(OutDir)$(GtkDllPrefix)$(ProjectName)$(GtkDllSuffix).pdb</ProgramDatabaseFile>
-      <SubSystem>Windows</SubSystem>
-      <TargetMachine>MachineX64</TargetMachine>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
-    <ClCompile>
-      <AdditionalIncludeDirectories>$(GtkBaseIncludes);..\..\gdk\win32;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>$(GtkDefines);%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+      <PreprocessorDefinitions Condition="'$(Configuration)' == 'Debug'">_DEBUG;G_ENABLE_DEBUG;$(GtkDefines);%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <MinimalRebuild Condition="'$(Configuration)' == 'Debug'">true</MinimalRebuild>
+      <BasicRuntimeChecks Condition="'$(Configuration)' == 'Debug'">EnableFastChecks</BasicRuntimeChecks>
+      <RuntimeLibrary Condition="'$(Configuration)' == 'Debug'">MultiThreadedDebugDLL</RuntimeLibrary>
+      <DebugInformationFormat Condition="'$(Configuration)|$(Platform)'== 'Debug|Win32'">EditAndContinue</DebugInformationFormat>
+      <DebugInformationFormat Condition="'$(Configuration)|$(Platform)'== 'Debug|x64'">ProgramDatabase</DebugInformationFormat>
+
+      <!-- For Release -->
+      <PreprocessorDefinitions Condition="'$(Configuration)' == 'Release'">$(GtkDefines);%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary Condition="'$(Configuration)' == 'Release'">MultiThreadedDLL</RuntimeLibrary>
+      <DebugInformationFormat Condition="'$(Configuration)' == 'Release'">ProgramDatabase</DebugInformationFormat>
     </ClCompile>
     <Link>
       <AdditionalDependencies>$(GtkAdditionalLibs);%(AdditionalDependencies)</AdditionalDependencies>
@@ -157,9 +70,13 @@
       <GenerateDebugInformation>true</GenerateDebugInformation>
       <ProgramDatabaseFile>$(OutDir)$(GtkDllPrefix)$(ProjectName)$(GtkDllSuffix).pdb</ProgramDatabaseFile>
       <SubSystem>Windows</SubSystem>
-      <OptimizeReferences>true</OptimizeReferences>
-      <EnableCOMDATFolding>true</EnableCOMDATFolding>
-      <TargetMachine>MachineX64</TargetMachine>
+
+      <!-- For Release -->
+      <OptimizeReferences Condition="'$(Configuration)' == 'Release'">true</OptimizeReferences>
+      <EnableCOMDATFolding Condition="'$(Configuration)' == 'Release'">true</EnableCOMDATFolding>
+
+      <TargetMachine Condition="'$(Platform)'=='Win32'">MachineX86</TargetMachine>
+      <TargetMachine Condition="'$(Platform)'=='x64'">MachineX64</TargetMachine>
     </Link>
   </ItemDefinitionGroup>
   <ItemGroup>
diff --git a/win32/vs10/gtk-builder-tool.vcxproj b/win32/vs10/gtk-builder-tool.vcxproj
index d88a9e65d7..12420c3377 100644
--- a/win32/vs10/gtk-builder-tool.vcxproj
+++ b/win32/vs10/gtk-builder-tool.vcxproj
@@ -24,142 +24,61 @@
     <Keyword>Win32Proj</Keyword>
   </PropertyGroup>
   <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
-    <ConfigurationType>Application</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
-    <ConfigurationType>Application</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
-    <ConfigurationType>Application</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
+  <PropertyGroup Label="Configuration">
     <ConfigurationType>Application</ConfigurationType>
     <CharacterSet>MultiByte</CharacterSet>
+    <WholeProgramOptimization Condition="'$(Configuration)' == 'Release'">true</WholeProgramOptimization>
     <PlatformToolset>v100</PlatformToolset>
   </PropertyGroup>
   <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
   <ImportGroup Label="ExtensionSettings">
   </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="PropertySheets">
+  <ImportGroup Label="PropertySheets">
     <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
+    <Import Project="..\vs1x-props\gtk3-build-defines.props" />
   </ImportGroup>
   <PropertyGroup Label="UserMacros" />
   <PropertyGroup>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</LinkIncremental>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkIncremental>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</LinkIncremental>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkIncremental>
+    <LinkIncremental Condition="'$(Configuration)' == 'Debug'">true</LinkIncremental>
+    <LinkIncremental Condition="'$(Configuration)' == 'Release'">false</LinkIncremental>
   </PropertyGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
-    <ClCompile>
-      <Optimization>Disabled</Optimization>
-      <AdditionalIncludeDirectories>$(BaseConfigIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <MinimalRebuild>true</MinimalRebuild>
-      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
-      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>
-    </ClCompile>
-    <Link>
-      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <SubSystem>Console</SubSystem>
-      <TargetMachine>MachineX86</TargetMachine>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
-    <ClCompile>
-      <Optimization>MaxSpeed</Optimization>
-      <AdditionalIncludeDirectories>$(BaseConfigIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <IntrinsicFunctions>true</IntrinsicFunctions>
-      <PreprocessorDefinitions>%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <FunctionLevelLinking>true</FunctionLevelLinking>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-    </ClCompile>
-    <Link>
-      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <SubSystem>Console</SubSystem>
-      <OptimizeReferences>true</OptimizeReferences>
-      <EnableCOMDATFolding>true</EnableCOMDATFolding>
-      <TargetMachine>MachineX86</TargetMachine>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
-    <Midl>
-      <TargetEnvironment>X64</TargetEnvironment>
-    </Midl>
-    <ClCompile>
-      <Optimization>Disabled</Optimization>
-      <AdditionalIncludeDirectories>$(BaseConfigIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <MinimalRebuild>true</MinimalRebuild>
-      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
-      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-    </ClCompile>
-    <Link>
-      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <SubSystem>Console</SubSystem>
-      <TargetMachine>MachineX64</TargetMachine>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
+  <ItemDefinitionGroup>
     <Midl>
-      <TargetEnvironment>X64</TargetEnvironment>
+      <TargetEnvironment Condition="'$(Platform)' == 'x64'">X64</TargetEnvironment>
     </Midl>
     <ClCompile>
-      <Optimization>MaxSpeed</Optimization>
       <AdditionalIncludeDirectories>$(BaseConfigIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <IntrinsicFunctions>true</IntrinsicFunctions>
-      <PreprocessorDefinitions>%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <FunctionLevelLinking>true</FunctionLevelLinking>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
+      <PrecompiledHeader></PrecompiledHeader>
       <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+
+      <!-- for Debug -->
+      <Optimization Condition="'$(Configuration)' == 'Debug'">Disabled</Optimization>
+      <PreprocessorDefinitions Condition="'$(Configuration)' == 'Debug'">_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <MinimalRebuild Condition="'$(Configuration)' == 'Debug'">true</MinimalRebuild>
+      <BasicRuntimeChecks Condition="'$(Configuration)' == 'Debug'">EnableFastChecks</BasicRuntimeChecks>
+      <RuntimeLibrary Condition="'$(Configuration)' == 'Debug'">MultiThreadedDebugDLL</RuntimeLibrary>
+      <DebugInformationFormat Condition="'$(Configuration)|$(Platform)' == 'Debug|Win32'">EditAndContinue</DebugInformationFormat>
+      <DebugInformationFormat Condition="'$(Configuration)|$(Platform)' == 'Debug|x64'">ProgramDatabase</DebugInformationFormat>
+
+      <!-- for Release -->
+      <Optimization Condition="'$(Configuration)' == 'Release'">MaxSpeed</Optimization>
+      <IntrinsicFunctions Condition="'$(Configuration)' == 'Release'">true</IntrinsicFunctions>
+      <PreprocessorDefinitions Condition="'$(Configuration)' == 'Release'">%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary Condition="'$(Configuration)' == 'Release'">MultiThreadedDLL</RuntimeLibrary>
+      <FunctionLevelLinking Condition="'$(Configuration)' == 'Release'">true</FunctionLevelLinking>
+      <DebugInformationFormat Condition="'$(Configuration)' == 'Release'">ProgramDatabase</DebugInformationFormat>
     </ClCompile>
     <Link>
       <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
       <GenerateDebugInformation>true</GenerateDebugInformation>
       <SubSystem>Console</SubSystem>
-      <OptimizeReferences>true</OptimizeReferences>
-      <EnableCOMDATFolding>true</EnableCOMDATFolding>
-      <TargetMachine>MachineX64</TargetMachine>
+
+      <!-- for Release -->
+      <OptimizeReferences Condition="'$(Configuration)' == 'Release'">true</OptimizeReferences>
+      <EnableCOMDATFolding Condition="'$(Configuration)' == 'Release'">true</EnableCOMDATFolding>
+
+      <TargetMachine Condition="'$(Platform)' == 'Win32'">MachineX86</TargetMachine>
+      <TargetMachine Condition="'$(Platform)' == 'x64'">MachineX64</TargetMachine>
     </Link>
   </ItemDefinitionGroup>
   <ItemGroup>
diff --git a/win32/vs10/gtk-encode-symbolic-svg.vcxproj b/win32/vs10/gtk-encode-symbolic-svg.vcxproj
index da630f7f51..fcd0a6df75 100644
--- a/win32/vs10/gtk-encode-symbolic-svg.vcxproj
+++ b/win32/vs10/gtk-encode-symbolic-svg.vcxproj
@@ -24,142 +24,61 @@
     <Keyword>Win32Proj</Keyword>
   </PropertyGroup>
   <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
-    <ConfigurationType>Application</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
-    <ConfigurationType>Application</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
-    <ConfigurationType>Application</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
+  <PropertyGroup Label="Configuration">
     <ConfigurationType>Application</ConfigurationType>
     <CharacterSet>MultiByte</CharacterSet>
+    <WholeProgramOptimization Condition="'$(Configuration)' == 'Release'">true</WholeProgramOptimization>
     <PlatformToolset>v100</PlatformToolset>
   </PropertyGroup>
   <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
   <ImportGroup Label="ExtensionSettings">
   </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="PropertySheets">
+  <ImportGroup Label="PropertySheets">
     <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
+    <Import Project="..\vs1x-props\gtk3-build-defines.props" />
   </ImportGroup>
   <PropertyGroup Label="UserMacros" />
   <PropertyGroup>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</LinkIncremental>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkIncremental>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</LinkIncremental>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkIncremental>
+    <LinkIncremental Condition="'$(Configuration)' == 'Debug'">true</LinkIncremental>
+    <LinkIncremental Condition="'$(Configuration)' == 'Release'">false</LinkIncremental>
   </PropertyGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
-    <ClCompile>
-      <Optimization>Disabled</Optimization>
-      <AdditionalIncludeDirectories>$(GdkBaseIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <MinimalRebuild>true</MinimalRebuild>
-      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
-      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>
-    </ClCompile>
-    <Link>
-      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <SubSystem>Console</SubSystem>
-      <TargetMachine>MachineX86</TargetMachine>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
-    <ClCompile>
-      <Optimization>MaxSpeed</Optimization>
-      <AdditionalIncludeDirectories>$(GdkBaseIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <IntrinsicFunctions>true</IntrinsicFunctions>
-      <PreprocessorDefinitions>%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <FunctionLevelLinking>true</FunctionLevelLinking>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-    </ClCompile>
-    <Link>
-      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <SubSystem>Console</SubSystem>
-      <OptimizeReferences>true</OptimizeReferences>
-      <EnableCOMDATFolding>true</EnableCOMDATFolding>
-      <TargetMachine>MachineX86</TargetMachine>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
-    <Midl>
-      <TargetEnvironment>X64</TargetEnvironment>
-    </Midl>
-    <ClCompile>
-      <Optimization>Disabled</Optimization>
-      <AdditionalIncludeDirectories>$(GdkBaseIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <MinimalRebuild>true</MinimalRebuild>
-      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
-      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-    </ClCompile>
-    <Link>
-      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <SubSystem>Console</SubSystem>
-      <TargetMachine>MachineX64</TargetMachine>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
+  <ItemDefinitionGroup>
     <Midl>
-      <TargetEnvironment>X64</TargetEnvironment>
+      <TargetEnvironment Condition="'$(Platform)' == 'x64'">X64</TargetEnvironment>
     </Midl>
     <ClCompile>
-      <Optimization>MaxSpeed</Optimization>
       <AdditionalIncludeDirectories>$(GdkBaseIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <IntrinsicFunctions>true</IntrinsicFunctions>
-      <PreprocessorDefinitions>%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <FunctionLevelLinking>true</FunctionLevelLinking>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
+      <PrecompiledHeader></PrecompiledHeader>
       <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+
+      <!-- for Debug -->
+      <Optimization Condition="'$(Configuration)' == 'Debug'">Disabled</Optimization>
+      <PreprocessorDefinitions Condition="'$(Configuration)' == 'Debug'">_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <MinimalRebuild Condition="'$(Configuration)' == 'Debug'">true</MinimalRebuild>
+      <BasicRuntimeChecks Condition="'$(Configuration)' == 'Debug'">EnableFastChecks</BasicRuntimeChecks>
+      <RuntimeLibrary Condition="'$(Configuration)' == 'Debug'">MultiThreadedDebugDLL</RuntimeLibrary>
+      <DebugInformationFormat Condition="'$(Configuration)|$(Platform)' == 'Debug|Win32'">EditAndContinue</DebugInformationFormat>
+      <DebugInformationFormat Condition="'$(Configuration)|$(Platform)' == 'Debug|x64'">ProgramDatabase</DebugInformationFormat>
+
+      <!-- for Release -->
+      <Optimization Condition="'$(Configuration)' == 'Release'">MaxSpeed</Optimization>
+      <IntrinsicFunctions Condition="'$(Configuration)' == 'Release'">true</IntrinsicFunctions>
+      <PreprocessorDefinitions Condition="'$(Configuration)' == 'Release'">%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary Condition="'$(Configuration)' == 'Release'">MultiThreadedDLL</RuntimeLibrary>
+      <FunctionLevelLinking Condition="'$(Configuration)' == 'Release'">true</FunctionLevelLinking>
+      <DebugInformationFormat Condition="'$(Configuration)' == 'Release'">ProgramDatabase</DebugInformationFormat>
     </ClCompile>
     <Link>
       <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
       <GenerateDebugInformation>true</GenerateDebugInformation>
       <SubSystem>Console</SubSystem>
-      <OptimizeReferences>true</OptimizeReferences>
-      <EnableCOMDATFolding>true</EnableCOMDATFolding>
-      <TargetMachine>MachineX64</TargetMachine>
+
+      <!-- for Release -->
+      <OptimizeReferences Condition="'$(Configuration)' == 'Release'">true</OptimizeReferences>
+      <EnableCOMDATFolding Condition="'$(Configuration)' == 'Release'">true</EnableCOMDATFolding>
+
+      <TargetMachine Condition="'$(Platform)' == 'Win32'">MachineX86</TargetMachine>
+      <TargetMachine Condition="'$(Platform)' == 'x64'">MachineX64</TargetMachine>
     </Link>
   </ItemDefinitionGroup>
   <ItemGroup>
diff --git a/win32/vs10/gtk-query-settings.vcxproj b/win32/vs10/gtk-query-settings.vcxproj
index 24717aa73f..610b04815f 100644
--- a/win32/vs10/gtk-query-settings.vcxproj
+++ b/win32/vs10/gtk-query-settings.vcxproj
@@ -24,142 +24,61 @@
     <Keyword>Win32Proj</Keyword>
   </PropertyGroup>
   <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
-    <ConfigurationType>Application</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
-    <ConfigurationType>Application</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
-    <ConfigurationType>Application</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
+  <PropertyGroup Label="Configuration">
     <ConfigurationType>Application</ConfigurationType>
     <CharacterSet>MultiByte</CharacterSet>
+    <WholeProgramOptimization Condition="'$(Configuration)' == 'Release'">true</WholeProgramOptimization>
     <PlatformToolset>v100</PlatformToolset>
   </PropertyGroup>
   <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
   <ImportGroup Label="ExtensionSettings">
   </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="PropertySheets">
+  <ImportGroup Label="PropertySheets">
     <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
+    <Import Project="..\vs1x-props\gtk3-build-defines.props" />
   </ImportGroup>
   <PropertyGroup Label="UserMacros" />
   <PropertyGroup>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</LinkIncremental>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkIncremental>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</LinkIncremental>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkIncremental>
+    <LinkIncremental Condition="'$(Configuration)' == 'Debug'">true</LinkIncremental>
+    <LinkIncremental Condition="'$(Configuration)' == 'Release'">false</LinkIncremental>
   </PropertyGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
-    <ClCompile>
-      <Optimization>Disabled</Optimization>
-      <AdditionalIncludeDirectories>$(BaseConfigIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <MinimalRebuild>true</MinimalRebuild>
-      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
-      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>
-    </ClCompile>
-    <Link>
-      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <SubSystem>Console</SubSystem>
-      <TargetMachine>MachineX86</TargetMachine>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
-    <ClCompile>
-      <Optimization>MaxSpeed</Optimization>
-      <AdditionalIncludeDirectories>$(BaseConfigIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <IntrinsicFunctions>true</IntrinsicFunctions>
-      <PreprocessorDefinitions>%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <FunctionLevelLinking>true</FunctionLevelLinking>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-    </ClCompile>
-    <Link>
-      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <SubSystem>Console</SubSystem>
-      <OptimizeReferences>true</OptimizeReferences>
-      <EnableCOMDATFolding>true</EnableCOMDATFolding>
-      <TargetMachine>MachineX86</TargetMachine>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
-    <Midl>
-      <TargetEnvironment>X64</TargetEnvironment>
-    </Midl>
-    <ClCompile>
-      <Optimization>Disabled</Optimization>
-      <AdditionalIncludeDirectories>$(BaseConfigIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <MinimalRebuild>true</MinimalRebuild>
-      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
-      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-    </ClCompile>
-    <Link>
-      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <SubSystem>Console</SubSystem>
-      <TargetMachine>MachineX64</TargetMachine>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
+  <ItemDefinitionGroup>
     <Midl>
-      <TargetEnvironment>X64</TargetEnvironment>
+      <TargetEnvironment Condition="'$(Platform)' == 'x64'">X64</TargetEnvironment>
     </Midl>
     <ClCompile>
-      <Optimization>MaxSpeed</Optimization>
       <AdditionalIncludeDirectories>$(BaseConfigIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <IntrinsicFunctions>true</IntrinsicFunctions>
-      <PreprocessorDefinitions>%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <FunctionLevelLinking>true</FunctionLevelLinking>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
+      <PrecompiledHeader></PrecompiledHeader>
       <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+
+      <!-- for Debug -->
+      <Optimization Condition="'$(Configuration)' == 'Debug'">Disabled</Optimization>
+      <PreprocessorDefinitions Condition="'$(Configuration)' == 'Debug'">_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <MinimalRebuild Condition="'$(Configuration)' == 'Debug'">true</MinimalRebuild>
+      <BasicRuntimeChecks Condition="'$(Configuration)' == 'Debug'">EnableFastChecks</BasicRuntimeChecks>
+      <RuntimeLibrary Condition="'$(Configuration)' == 'Debug'">MultiThreadedDebugDLL</RuntimeLibrary>
+      <DebugInformationFormat Condition="'$(Configuration)|$(Platform)' == 'Debug|Win32'">EditAndContinue</DebugInformationFormat>
+      <DebugInformationFormat Condition="'$(Configuration)|$(Platform)' == 'Debug|x64'">ProgramDatabase</DebugInformationFormat>
+
+      <!-- for Release -->
+      <Optimization Condition="'$(Configuration)' == 'Release'">MaxSpeed</Optimization>
+      <IntrinsicFunctions Condition="'$(Configuration)' == 'Release'">true</IntrinsicFunctions>
+      <PreprocessorDefinitions Condition="'$(Configuration)' == 'Release'">%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary Condition="'$(Configuration)' == 'Release'">MultiThreadedDLL</RuntimeLibrary>
+      <FunctionLevelLinking Condition="'$(Configuration)' == 'Release'">true</FunctionLevelLinking>
+      <DebugInformationFormat Condition="'$(Configuration)' == 'Release'">ProgramDatabase</DebugInformationFormat>
     </ClCompile>
     <Link>
       <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
       <GenerateDebugInformation>true</GenerateDebugInformation>
       <SubSystem>Console</SubSystem>
-      <OptimizeReferences>true</OptimizeReferences>
-      <EnableCOMDATFolding>true</EnableCOMDATFolding>
-      <TargetMachine>MachineX64</TargetMachine>
+
+      <!-- for Release -->
+      <OptimizeReferences Condition="'$(Configuration)' == 'Release'">true</OptimizeReferences>
+      <EnableCOMDATFolding Condition="'$(Configuration)' == 'Release'">true</EnableCOMDATFolding>
+
+      <TargetMachine Condition="'$(Platform)' == 'Win32'">MachineX86</TargetMachine>
+      <TargetMachine Condition="'$(Platform)' == 'x64'">MachineX64</TargetMachine>
     </Link>
   </ItemDefinitionGroup>
   <ItemGroup>
diff --git a/win32/vs10/gtk-update-icon-cache.vcxproj b/win32/vs10/gtk-update-icon-cache.vcxproj
index b94c809e0c..f6ea9eb54f 100644
--- a/win32/vs10/gtk-update-icon-cache.vcxproj
+++ b/win32/vs10/gtk-update-icon-cache.vcxproj
@@ -24,142 +24,61 @@
     <Keyword>Win32Proj</Keyword>
   </PropertyGroup>
   <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
-    <ConfigurationType>Application</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
-    <ConfigurationType>Application</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
-    <ConfigurationType>Application</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
+  <PropertyGroup Label="Configuration">
     <ConfigurationType>Application</ConfigurationType>
     <CharacterSet>MultiByte</CharacterSet>
+    <WholeProgramOptimization Condition="'$(Configuration)|$(Platform)' == 'Release'">true</WholeProgramOptimization>
     <PlatformToolset>v100</PlatformToolset>
   </PropertyGroup>
   <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
   <ImportGroup Label="ExtensionSettings">
   </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="PropertySheets">
+  <ImportGroup Label="PropertySheets">
     <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
+    <Import Project="..\vs1x-props\gtk3-build-defines.props" />
   </ImportGroup>
   <PropertyGroup Label="UserMacros" />
   <PropertyGroup>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</LinkIncremental>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkIncremental>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</LinkIncremental>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkIncremental>
+    <LinkIncremental Condition="'$(Configuration)' == 'Debug'">true</LinkIncremental>
+    <LinkIncremental Condition="'$(Configuration)' == 'Release'">false</LinkIncremental>
   </PropertyGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
-    <ClCompile>
-      <Optimization>Disabled</Optimization>
-      <AdditionalIncludeDirectories>$(BaseConfigIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <MinimalRebuild>true</MinimalRebuild>
-      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
-      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>
-    </ClCompile>
-    <Link>
-      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <SubSystem>Console</SubSystem>
-      <TargetMachine>MachineX86</TargetMachine>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
-    <ClCompile>
-      <Optimization>MaxSpeed</Optimization>
-      <AdditionalIncludeDirectories>$(BaseConfigIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <IntrinsicFunctions>true</IntrinsicFunctions>
-      <PreprocessorDefinitions>%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <FunctionLevelLinking>true</FunctionLevelLinking>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-    </ClCompile>
-    <Link>
-      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <SubSystem>Console</SubSystem>
-      <OptimizeReferences>true</OptimizeReferences>
-      <EnableCOMDATFolding>true</EnableCOMDATFolding>
-      <TargetMachine>MachineX86</TargetMachine>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
-    <Midl>
-      <TargetEnvironment>X64</TargetEnvironment>
-    </Midl>
-    <ClCompile>
-      <Optimization>Disabled</Optimization>
-      <AdditionalIncludeDirectories>$(BaseConfigIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <MinimalRebuild>true</MinimalRebuild>
-      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
-      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-    </ClCompile>
-    <Link>
-      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <SubSystem>Console</SubSystem>
-      <TargetMachine>MachineX64</TargetMachine>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
+  <ItemDefinitionGroup>
     <Midl>
-      <TargetEnvironment>X64</TargetEnvironment>
+      <TargetEnvironment Condition="'$(Platform)'  ==  'x64'">X64</TargetEnvironment>
     </Midl>
     <ClCompile>
-      <Optimization>MaxSpeed</Optimization>
       <AdditionalIncludeDirectories>$(BaseConfigIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <IntrinsicFunctions>true</IntrinsicFunctions>
-      <PreprocessorDefinitions>%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <FunctionLevelLinking>true</FunctionLevelLinking>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
+      <PrecompiledHeader></PrecompiledHeader>
       <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+
+      <!-- for Debug -->
+      <Optimization Condition="'$(Configuration)' == 'Debug'">Disabled</Optimization>
+      <PreprocessorDefinitions Condition="'$(Configuration)' == 'Debug'">_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <MinimalRebuild Condition="'$(Configuration)' == 'Debug'">true</MinimalRebuild>
+      <BasicRuntimeChecks Condition="'$(Configuration)' == 'Debug'">EnableFastChecks</BasicRuntimeChecks>
+      <RuntimeLibrary Condition="'$(Configuration)' == 'Debug'">MultiThreadedDebugDLL</RuntimeLibrary>
+      <DebugInformationFormat Condition="'$(Configuration)|$(Platform)' == 'Debug|Win32'">EditAndContinue</DebugInformationFormat>
+      <DebugInformationFormat Condition="'$(Configuration)|$(Platform)' == 'Debug|x64'">ProgramDatabase</DebugInformationFormat>
+
+      <!-- for Release -->
+      <Optimization Condition="'$(Configuration)' == 'Release'">MaxSpeed</Optimization>
+      <IntrinsicFunctions Condition="'$(Configuration)' == 'Release'">true</IntrinsicFunctions>
+      <PreprocessorDefinitions Condition="'$(Configuration)' == 'Release'">%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary Condition="'$(Configuration)' == 'Release'">MultiThreadedDLL</RuntimeLibrary>
+      <FunctionLevelLinking Condition="'$(Configuration)' == 'Release'">true</FunctionLevelLinking>
+      <DebugInformationFormat Condition="'$(Configuration)' == 'Release'">ProgramDatabase</DebugInformationFormat>
     </ClCompile>
     <Link>
       <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
       <GenerateDebugInformation>true</GenerateDebugInformation>
       <SubSystem>Console</SubSystem>
-      <OptimizeReferences>true</OptimizeReferences>
-      <EnableCOMDATFolding>true</EnableCOMDATFolding>
-      <TargetMachine>MachineX64</TargetMachine>
+
+      <!-- for Release -->
+      <OptimizeReferences Condition="'$(Configuration)' == 'Release'">true</OptimizeReferences>
+      <EnableCOMDATFolding Condition="'$(Configuration)' == 'Release'">true</EnableCOMDATFolding>
+
+      <TargetMachine Condition="'$(Platform)' == 'Win32'">MachineX86</TargetMachine>
+      <TargetMachine Condition="'$(Platform)' == 'x64'">MachineX64</TargetMachine>
     </Link>
   </ItemDefinitionGroup>
   <ItemGroup>
diff --git a/win32/vs10/gtk3-copy-gdk-broadway.props b/win32/vs10/gtk3-copy-gdk-broadway.props
deleted file mode 100644
index c2e6829250..0000000000
--- a/win32/vs10/gtk3-copy-gdk-broadway.props
+++ /dev/null
@@ -1,50 +0,0 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <ImportGroup Label="PropertySheets">
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <PropertyGroup>
-    <_PropertySheetDisplayName>gtk3copygdkbroadwayprops</_PropertySheetDisplayName>
-  </PropertyGroup>
-  <ItemDefinitionGroup>
-    <Link>
-      <AdditionalOptions>/EXPORT:gdk_win32_display_manager_get_type</AdditionalOptions>
-    </Link>
-    <PostBuildEvent>
-      <Command>
-if "$(Configuration)" == "Release" goto END
-
-if "$(Configuration)" == "Debug" goto END
-
-if "$(Configuration)" == "Release_Broadway" goto DoRelease
-
-if "$(Configuration)" == "Debug_Broadway" goto DoDebug
-
-
-:DoRelease
-
-mkdir .\Release\$(Platform)\bin
-
-copy /b $(Configuration)\$(Platform)\bin\$(GtkDllPrefix)gdk-3$(GtkDllSuffix).dll .\Release\$(Platform)\bin\
-
-copy /b $(Configuration)\$(Platform)\bin\gdk-$(ApiVersion).lib .\Release\$(Platform)\bin\
-
-goto END
-
-
-:DoDebug
-
-mkdir .\Debug\$(Platform)\bin
-
-copy /b $(Configuration)\$(Platform)\bin\$(GtkDllPrefix)gdk$(GtkDllSuffix).dll .\Debug\$(Platform)\bin\
-
-copy /b $(Configuration)\$(Platform)\bin\gdk-$(ApiVersion).lib .\Debug\$(Platform)\bin\
-
-goto END
-
-
-:END
-      </Command>
-    </PostBuildEvent>
-  </ItemDefinitionGroup>
-</Project>
diff --git a/win32/vs10/gtk3-demo-application.vcxproj.filtersin b/win32/vs10/gtk3-demo-application.vcxproj.filtersin
index 5b356ef76b..b6dc6bdd9d 100644
--- a/win32/vs10/gtk3-demo-application.vcxproj.filtersin
+++ b/win32/vs10/gtk3-demo-application.vcxproj.filtersin
@@ -16,5 +16,6 @@
   </ItemGroup>
   <ItemGroup>
 #include "gtk3-demo-application.vs10.sourcefiles.filters"
+    <ClCompile Include="..\..\demos\gtk-demo\demo_resources.c"><Filter>Source Files</Filter></ClCompile>
   </ItemGroup>
 </Project>
diff --git a/win32/vs10/gtk3-demo-application.vcxprojin b/win32/vs10/gtk3-demo-application.vcxprojin
index 9167c4c2c4..d4dae5b14b 100644
--- a/win32/vs10/gtk3-demo-application.vcxprojin
+++ b/win32/vs10/gtk3-demo-application.vcxprojin
@@ -24,142 +24,62 @@
     <Keyword>Win32Proj</Keyword>
   </PropertyGroup>
   <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
-    <ConfigurationType>Application</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
-    <ConfigurationType>Application</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
-    <ConfigurationType>Application</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
+  <PropertyGroup Label="Configuration">
     <ConfigurationType>Application</ConfigurationType>
     <CharacterSet>MultiByte</CharacterSet>
+    <WholeProgramOptimization Condition="'$(Configuration)' == 'Release'">true</WholeProgramOptimization>
     <PlatformToolset>v100</PlatformToolset>
   </PropertyGroup>
   <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
   <ImportGroup Label="ExtensionSettings">
   </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="PropertySheets">
+  <ImportGroup Label="PropertySheets">
     <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
+    <Import Project="..\vs1x-props\gtk3-build-defines.props" />
   </ImportGroup>
   <PropertyGroup Label="UserMacros" />
   <PropertyGroup>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</LinkIncremental>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkIncremental>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</LinkIncremental>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkIncremental>
+    <LinkIncremental Condition="'$(Configuration)' == 'Debug'">true</LinkIncremental>
+    <LinkIncremental Condition="'$(Configuration)' == 'Release'">false</LinkIncremental>
   </PropertyGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
-    <ClCompile>
-      <Optimization>Disabled</Optimization>
-      <AdditionalIncludeDirectories>$(BaseConfigIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <MinimalRebuild>true</MinimalRebuild>
-      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
-      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>
-    </ClCompile>
-    <Link>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <SubSystem>Console</SubSystem>
-      <TargetMachine>MachineX86</TargetMachine>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
-    <ClCompile>
-      <Optimization>MaxSpeed</Optimization>
-      <AdditionalIncludeDirectories>$(BaseConfigIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <IntrinsicFunctions>true</IntrinsicFunctions>
-      <PreprocessorDefinitions>%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <FunctionLevelLinking>false</FunctionLevelLinking>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-    </ClCompile>
-    <Link>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <SubSystem>Console</SubSystem>
-      <OptimizeReferences>true</OptimizeReferences>
-      <EnableCOMDATFolding>true</EnableCOMDATFolding>
-      <TargetMachine>MachineX86</TargetMachine>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
-    <Midl>
-      <TargetEnvironment>X64</TargetEnvironment>
-    </Midl>
-    <ClCompile>
-      <Optimization>Disabled</Optimization>
-      <AdditionalIncludeDirectories>$(BaseConfigIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <MinimalRebuild>true</MinimalRebuild>
-      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
-      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-    </ClCompile>
-    <Link>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <SubSystem>Console</SubSystem>
-      <TargetMachine>MachineX64</TargetMachine>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
-    <Midl>
-      <TargetEnvironment>X64</TargetEnvironment>
-    </Midl>
+  <ItemDefinitionGroup>
     <ClCompile>
-      <Optimization>MaxSpeed</Optimization>
       <AdditionalIncludeDirectories>$(BaseConfigIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <IntrinsicFunctions>true</IntrinsicFunctions>
-      <PreprocessorDefinitions>%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <FunctionLevelLinking>false</FunctionLevelLinking>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
+      <PrecompiledHeader></PrecompiledHeader>
       <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+
+      <!-- For Debug -->
+      <Optimization Condition="'$(Configuration)' == 'Debug'">Disabled</Optimization>
+      <PreprocessorDefinitions Condition="'$(Configuration)' == 'Debug'">_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <MinimalRebuild Condition="'$(Configuration)' == 'Debug'">true</MinimalRebuild>
+      <BasicRuntimeChecks Condition="'$(Configuration)' == 'Debug'">EnableFastChecks</BasicRuntimeChecks>
+      <RuntimeLibrary Condition="'$(Configuration)' == 'Debug'">MultiThreadedDebugDLL</RuntimeLibrary>
+      <DebugInformationFormat Condition="'$(Configuration)|$(Platform)'== 'Debug|Win32'">EditAndContinue</DebugInformationFormat>
+      <DebugInformationFormat Condition="'$(Configuration)|$(Platform)'== 'Debug|x64'">ProgramDatabase</DebugInformationFormat>
+
+      <!-- For Release -->
+      <Optimization Condition="'$(Configuration)' == 'Release'">MaxSpeed</Optimization>
+      <IntrinsicFunctions Condition="'$(Configuration)' == 'Release'">true</IntrinsicFunctions>
+      <PreprocessorDefinitions Condition="'$(Configuration)' == 'Release'">%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary Condition="'$(Configuration)' == 'Release'">MultiThreadedDLL</RuntimeLibrary>
+      <FunctionLevelLinking Condition="'$(Configuration)' == 'Release'">false</FunctionLevelLinking>
+      <DebugInformationFormat Condition="'$(Configuration)' == 'Release'">ProgramDatabase</DebugInformationFormat>
     </ClCompile>
     <Link>
       <GenerateDebugInformation>true</GenerateDebugInformation>
       <SubSystem>Console</SubSystem>
+
+      <!-- For Release -->
       <OptimizeReferences>true</OptimizeReferences>
       <EnableCOMDATFolding>true</EnableCOMDATFolding>
-      <TargetMachine>MachineX64</TargetMachine>
+
+      <TargetMachine Condition="'$(Platform)'=='Win32'">MachineX86</TargetMachine>
+      <TargetMachine Condition="'$(Platform)'=='x64'">MachineX64</TargetMachine>
     </Link>
   </ItemDefinitionGroup>
   <ItemGroup>
 #include "gtk3-demo-application.vs10.sourcefiles"
+    <ClCompile Include="..\..\demos\gtk-demo\demo_resources.c" />
   </ItemGroup>
   <ItemGroup>
     <ProjectReference Include="gdk-3.vcxproj">
diff --git a/win32/vs10/gtk3-demo.vcxproj.filtersin b/win32/vs10/gtk3-demo.vcxproj.filtersin
index a8fa97ddc6..b67f402acb 100644
--- a/win32/vs10/gtk3-demo.vcxproj.filtersin
+++ b/win32/vs10/gtk3-demo.vcxproj.filtersin
@@ -12,5 +12,6 @@
   </ItemGroup>
   <ItemGroup>
 #include "gtk3-demo.vs10.sourcefiles.filters"
+    <ClCompile Include="..\..\demos\gtk-demo\demo_resources.c"><Filter>Source Files</Filter></ClCompile>
   </ItemGroup>
 </Project>
diff --git a/win32/vs10/gtk3-demo.vcxprojin b/win32/vs10/gtk3-demo.vcxprojin
index 76f22e512a..4d00d11f2d 100644
--- a/win32/vs10/gtk3-demo.vcxprojin
+++ b/win32/vs10/gtk3-demo.vcxprojin
@@ -24,148 +24,63 @@
     <Keyword>Win32Proj</Keyword>
   </PropertyGroup>
   <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
-    <ConfigurationType>Application</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
-    <ConfigurationType>Application</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
-    <ConfigurationType>Application</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
+  <PropertyGroup Label="Configuration">
     <ConfigurationType>Application</ConfigurationType>
     <CharacterSet>MultiByte</CharacterSet>
+    <WholeProgramOptimization Condition="'$(Configuration)' == 'Release'">true</WholeProgramOptimization>
     <PlatformToolset>v100</PlatformToolset>
   </PropertyGroup>
   <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
   <ImportGroup Label="ExtensionSettings">
   </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
+  <ImportGroup Label="PropertySheets">
     <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
+    <Import Project="..\vs1x-props\gtk3-build-defines.props" />
   </ImportGroup>
   <PropertyGroup Label="UserMacros" />
   <PropertyGroup>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</LinkIncremental>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</LinkIncremental>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkIncremental>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkIncremental>
+    <LinkIncremental Condition="'$(Configuration)' == 'Debug'">true</LinkIncremental>
+    <LinkIncremental Condition="'$(Configuration)' == 'Release'">false</LinkIncremental>
   </PropertyGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
-    <ClCompile>
-      <Optimization>Disabled</Optimization>
-      <AdditionalIncludeDirectories>$(GtkBaseIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>_DEBUG;$(GtkPrefixDefine);%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <MinimalRebuild>true</MinimalRebuild>
-      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
-      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>
-      <CompileAs>CompileAsC</CompileAs>
-    </ClCompile>
-    <Link>
-      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <SubSystem>Console</SubSystem>
-      <DataExecutionPrevention>
-      </DataExecutionPrevention>
-      <TargetMachine>MachineX86</TargetMachine>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
-    <ClCompile>
-      <AdditionalIncludeDirectories>$(GtkBaseIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>$(GtkPrefixDefine);%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-      <CompileAs>CompileAsC</CompileAs>
-    </ClCompile>
-    <Link>
-      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <SubSystem>Console</SubSystem>
-      <FunctionLevelLinking>false</FunctionLevelLinking>
-      <OptimizeReferences>true</OptimizeReferences>
-      <EnableCOMDATFolding>true</EnableCOMDATFolding>
-      <DataExecutionPrevention>
-      </DataExecutionPrevention>
-      <TargetMachine>MachineX86</TargetMachine>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
-    <ClCompile>
-      <Optimization>Disabled</Optimization>
-      <AdditionalIncludeDirectories>$(GtkBaseIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>_DEBUG;$(GtkPrefixDefine);%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <MinimalRebuild>true</MinimalRebuild>
-      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
-      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-      <CompileAs>CompileAsC</CompileAs>
-    </ClCompile>
-    <Link>
-      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <SubSystem>Console</SubSystem>
-      <DataExecutionPrevention>
-      </DataExecutionPrevention>
-      <TargetMachine>MachineX64</TargetMachine>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
+  <ItemDefinitionGroup>
     <ClCompile>
       <AdditionalIncludeDirectories>$(GtkBaseIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>$(GtkPrefixDefine);%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
+      <PrecompiledHeader></PrecompiledHeader>
       <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
       <CompileAs>CompileAsC</CompileAs>
+
+      <!-- For Debug -->
+      <Optimization Condition="'$(Configuration)' == 'Debug'">Disabled</Optimization>
+      <PreprocessorDefinitions Condition="'$(Configuration)' == 'Debug'">_DEBUG;$(GtkPrefixDefine);%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <MinimalRebuild Condition="'$(Configuration)' == 'Debug'">true</MinimalRebuild>
+      <BasicRuntimeChecks Condition="'$(Configuration)' == 'Debug'">EnableFastChecks</BasicRuntimeChecks>
+      <RuntimeLibrary Condition="'$(Configuration)' == 'Debug'">MultiThreadedDebugDLL</RuntimeLibrary>
+      <DebugInformationFormat Condition="'$(Configuration)|$(Platform)'== 'Debug|Win32'">EditAndContinue</DebugInformationFormat>
+      <DebugInformationFormat Condition="'$(Configuration)|$(Platform)'== 'Debug|x64'">ProgramDatabase</DebugInformationFormat>
+
+      <!-- For Release -->
+      <PreprocessorDefinitions Condition="'$(Configuration)' == 'Release'">$(GtkPrefixDefine);%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary Condition="'$(Configuration)' == 'Release'">MultiThreadedDLL</RuntimeLibrary>
+      <DebugInformationFormat Condition="'$(Configuration)' == 'Release'">ProgramDatabase</DebugInformationFormat>
     </ClCompile>
     <Link>
       <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
       <GenerateDebugInformation>true</GenerateDebugInformation>
       <SubSystem>Console</SubSystem>
-      <FunctionLevelLinking>false</FunctionLevelLinking>
-      <OptimizeReferences>true</OptimizeReferences>
-      <EnableCOMDATFolding>true</EnableCOMDATFolding>
-      <DataExecutionPrevention>
-      </DataExecutionPrevention>
-      <TargetMachine>MachineX64</TargetMachine>
+      <DataExecutionPrevention></DataExecutionPrevention>
+
+      <!-- For Release -->
+      <FunctionLevelLinking Condition="'$(Configuration)' == 'Release'">false</FunctionLevelLinking>
+      <OptimizeReferences Condition="'$(Configuration)' == 'Release'">true</OptimizeReferences>
+      <EnableCOMDATFolding Condition="'$(Configuration)' == 'Release'">true</EnableCOMDATFolding>
+
+      <TargetMachine Condition="'$(Platform)'=='Win32'">MachineX86</TargetMachine>
+      <TargetMachine Condition="'$(Platform)'=='x64'">MachineX64</TargetMachine>
     </Link>
   </ItemDefinitionGroup>
   <ItemGroup>
 #include "gtk3-demo.vs10.sourcefiles"
+    <ClCompile Include="..\..\demos\gtk-demo\demo_resources.c" />
   </ItemGroup>
   <ItemGroup>
     <ProjectReference Include="gdk-3.vcxproj">
diff --git a/win32/vs10/gtk3-icon-browser.vcxproj.filtersin b/win32/vs10/gtk3-icon-browser.vcxproj.filtersin
index 2063a07e95..1822eb1e0a 100644
--- a/win32/vs10/gtk3-icon-browser.vcxproj.filtersin
+++ b/win32/vs10/gtk3-icon-browser.vcxproj.filtersin
@@ -16,5 +16,6 @@
   </ItemGroup>
   <ItemGroup>
 #include "gtk3-icon-browser.vs10.sourcefiles.filters"
+    <ClCompile Include="..\..\demos\icon-browser\resources.c"><Filter>Source Files</Filter></ClCompile>
   </ItemGroup>
 </Project>
diff --git a/win32/vs10/gtk3-icon-browser.vcxprojin b/win32/vs10/gtk3-icon-browser.vcxprojin
index 70f76d8ccf..098d566e4a 100644
--- a/win32/vs10/gtk3-icon-browser.vcxprojin
+++ b/win32/vs10/gtk3-icon-browser.vcxprojin
@@ -24,142 +24,65 @@
     <Keyword>Win32Proj</Keyword>
   </PropertyGroup>
   <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
-    <ConfigurationType>Application</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
-    <ConfigurationType>Application</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
-    <ConfigurationType>Application</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
+  <PropertyGroup Label="Configuration">
     <ConfigurationType>Application</ConfigurationType>
     <CharacterSet>MultiByte</CharacterSet>
+    <WholeProgramOptimization Condition="'$(Configuration)' == 'Release'">true</WholeProgramOptimization>
     <PlatformToolset>v100</PlatformToolset>
   </PropertyGroup>
   <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
   <ImportGroup Label="ExtensionSettings">
   </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="PropertySheets">
+  <ImportGroup Label="PropertySheets">
     <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
+    <Import Project="..\vs1x-props\gtk3-build-defines.props" />
   </ImportGroup>
   <PropertyGroup Label="UserMacros" />
   <PropertyGroup>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</LinkIncremental>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkIncremental>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</LinkIncremental>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkIncremental>
+    <LinkIncremental Condition="'$(Configuration)' == 'Debug'">true</LinkIncremental>
+    <LinkIncremental Condition="'$(Configuration)' == 'Release'">false</LinkIncremental>
   </PropertyGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
-    <ClCompile>
-      <Optimization>Disabled</Optimization>
-      <AdditionalIncludeDirectories>..\..\demos\icon-browser;$(BaseConfigIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <MinimalRebuild>true</MinimalRebuild>
-      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
-      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>
-    </ClCompile>
-    <Link>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <SubSystem>Console</SubSystem>
-      <TargetMachine>MachineX86</TargetMachine>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
-    <ClCompile>
-      <Optimization>MaxSpeed</Optimization>
-      <AdditionalIncludeDirectories>..\..\demos\icon-browser;$(BaseConfigIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <IntrinsicFunctions>true</IntrinsicFunctions>
-      <PreprocessorDefinitions>%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <FunctionLevelLinking>false</FunctionLevelLinking>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-    </ClCompile>
-    <Link>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <SubSystem>Console</SubSystem>
-      <OptimizeReferences>true</OptimizeReferences>
-      <EnableCOMDATFolding>true</EnableCOMDATFolding>
-      <TargetMachine>MachineX86</TargetMachine>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
-    <Midl>
-      <TargetEnvironment>X64</TargetEnvironment>
-    </Midl>
-    <ClCompile>
-      <Optimization>Disabled</Optimization>
-      <AdditionalIncludeDirectories>..\..\demos\icon-browser;$(BaseConfigIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <MinimalRebuild>true</MinimalRebuild>
-      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
-      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-    </ClCompile>
-    <Link>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <SubSystem>Console</SubSystem>
-      <TargetMachine>MachineX64</TargetMachine>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
+  <ItemDefinitionGroup>
     <Midl>
-      <TargetEnvironment>X64</TargetEnvironment>
+      <TargetEnvironment Condition="'$(Platform)'=='x64'">X64</TargetEnvironment>
     </Midl>
     <ClCompile>
-      <Optimization>MaxSpeed</Optimization>
       <AdditionalIncludeDirectories>..\..\demos\icon-browser;$(BaseConfigIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <IntrinsicFunctions>true</IntrinsicFunctions>
-      <PreprocessorDefinitions>%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <FunctionLevelLinking>false</FunctionLevelLinking>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
+      <PrecompiledHeader></PrecompiledHeader>
       <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+
+      <!-- For Debug -->
+      <Optimization Condition="'$(Configuration)' == 'Debug|Win32'">Disabled</Optimization>
+      <PreprocessorDefinitions Condition="'$(Configuration)' == 'Debug'">_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <MinimalRebuild Condition="'$(Configuration)' == 'Debug'">true</MinimalRebuild>
+      <BasicRuntimeChecks Condition="'$(Configuration)' == 'Debug'">EnableFastChecks</BasicRuntimeChecks>
+      <RuntimeLibrary Condition="'$(Configuration)' == 'Debug'">MultiThreadedDebugDLL</RuntimeLibrary>
+      <DebugInformationFormat Condition="'$(Configuration)|$(Platform)'== 'Debug|Win32'">EditAndContinue</DebugInformationFormat>
+      <DebugInformationFormat Condition="'$(Configuration)|$(Platform)'== 'Debug|x64'">ProgramDatabase</DebugInformationFormat>
+      
+      <!-- For Release -->
+      <Optimization Condition="'$(Configuration)' == 'Release'">MaxSpeed</Optimization>
+      <IntrinsicFunctions Condition="'$(Configuration)' == 'Release'">true</IntrinsicFunctions>
+      <PreprocessorDefinitions Condition="'$(Configuration)' == 'Release'">%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary Condition="'$(Configuration)' == 'Release'">MultiThreadedDLL</RuntimeLibrary>
+      <FunctionLevelLinking Condition="'$(Configuration)' == 'Release'">false</FunctionLevelLinking>
+      <DebugInformationFormat Condition="'$(Configuration)' == 'Release'">ProgramDatabase</DebugInformationFormat>
     </ClCompile>
     <Link>
       <GenerateDebugInformation>true</GenerateDebugInformation>
       <SubSystem>Console</SubSystem>
-      <OptimizeReferences>true</OptimizeReferences>
-      <EnableCOMDATFolding>true</EnableCOMDATFolding>
-      <TargetMachine>MachineX64</TargetMachine>
+
+      <!-- For Release -->
+      <OptimizeReferences Condition="'$(Configuration)' == 'Release'">true</OptimizeReferences>
+      <EnableCOMDATFolding Condition="'$(Configuration)' == 'Release'">true</EnableCOMDATFolding>
+
+      <TargetMachine Condition="'$(Platform)'=='Win32'">MachineX86</TargetMachine>
+      <TargetMachine Condition="'$(Platform)'=='x64'">MachineX64</TargetMachine>
     </Link>
   </ItemDefinitionGroup>
   <ItemGroup>
 #include "gtk3-icon-browser.vs10.sourcefiles"
+    <ClCompile Include="..\..\demos\icon-browser\resources.c" />
   </ItemGroup>
   <ItemGroup>
     <ProjectReference Include="gdk-3.vcxproj">
diff --git a/win32/vs10/gtk3-ignore-broadway.props b/win32/vs10/gtk3-ignore-broadway.props
deleted file mode 100644
index 0c97cf0de9..0000000000
--- a/win32/vs10/gtk3-ignore-broadway.props
+++ /dev/null
@@ -1,18 +0,0 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <ImportGroup Label="PropertySheets">
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <PropertyGroup>
-    <_PropertySheetDisplayName>gtk3ignorebroadwayprops</_PropertySheetDisplayName>
-  </PropertyGroup>
-  <ItemDefinitionGroup>
-    <ProjectReference>
-      <LinkLibraryDependencies>false</LinkLibraryDependencies>
-    </ProjectReference>
-    <Link>
-      <AdditionalDependencies>$(OutDir)\gdk3-win32.lib;%(AdditionalDependencies)</AdditionalDependencies>
-      <AdditionalOptions>/EXPORT:gdk_win32_display_manager_get_type</AdditionalOptions>
-    </Link>
-  </ItemDefinitionGroup>
-</Project>
diff --git a/win32/vs10/gtk3-install.propsin b/win32/vs10/gtk3-install.propsin
deleted file mode 100644
index 7e6cc466d3..0000000000
--- a/win32/vs10/gtk3-install.propsin
+++ /dev/null
@@ -1,222 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <ImportGroup Label="PropertySheets">
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <PropertyGroup Label="UserMacros">
-    <BinDir>$(SolutionDir)$(Configuration)\$(Platform)\bin</BinDir>
-    <GtkDoInstallBin>
-mkdir $(CopyDir)\bin
-mkdir $(CopyDir)\share\gir-1.0
-mkdir $(CopyDir)\lib\pkgconfig
-mkdir $(CopyDir)\lib\girepository-1.0
-
-copy "$(BinDir)\$(GtkDllPrefix)gdk-3$(GtkDllSuffix).dll" $(CopyDir)\bin
-copy "$(BinDir)\$(GtkDllPrefix)gdk-3$(GtkDllSuffix).pdb" $(CopyDir)\bin
-copy "$(BinDir)\gdk-$(ApiVersion).lib" $(CopyDir)\lib
-
-if "$(Configuration)" == "Release_Broadway" goto DO_BROADWAY_BIN
-if "$(Configuration)" == "Debug_Broadway" goto DO_BROADWAY_BIN
-copy "$(BinDir)\$(GtkDllPrefix)gtk-3$(GtkDllSuffix).dll" $(CopyDir)\bin
-copy "$(BinDir)\$(GtkDllPrefix)gtk-3$(GtkDllSuffix).pdb" $(CopyDir)\bin
-copy "$(BinDir)\$(GtkDllPrefix)gailutil-3$(GtkDllSuffix).dll" $(CopyDir)\bin
-copy "$(BinDir)\$(GtkDllPrefix)gailutil-3$(GtkDllSuffix).pdb" $(CopyDir)\bin
-copy "$(BinDir)\gtk-$(ApiVersion).lib" $(CopyDir)\lib
-copy "$(BinDir)\gailutil-$(ApiVersion).lib" $(CopyDir)\lib
-copy "$(BinDir)\gtk3-demo.exe" $(CopyDir)\bin
-copy "$(BinDir)\gtk3-demo.pdb" $(CopyDir)\bin
-copy "$(BinDir)\gtk3-demo-application.exe" $(CopyDir)\bin
-copy "$(BinDir)\gtk3-demo-application.pdb" $(CopyDir)\bin
-copy "$(BinDir)\gtk3-icon-browser.exe" $(CopyDir)\bin
-copy "$(BinDir)\gtk3-icon-browser.pdb" $(CopyDir)\bin
-copy "$(BinDir)\gtk-encode-symbolic-svg.exe" $(CopyDir)\bin
-copy "$(BinDir)\gtk-encode-symbolic-svg.pdb" $(CopyDir)\bin
-copy "$(BinDir)\gtk-update-icon-cache.exe" $(CopyDir)\bin
-copy "$(BinDir)\gtk-update-icon-cache.pdb" $(CopyDir)\bin
-copy "$(BinDir)\gtk-query-settings.exe" $(CopyDir)\bin
-copy "$(BinDir)\gtk-query-settings.pdb" $(CopyDir)\bin
-copy "$(BinDir)\gtk-builder-tool.exe" $(CopyDir)\bin
-copy "$(BinDir)\gtk-builder-tool.pdb" $(CopyDir)\bin
-if exist $(BinDir)\Gdk-3.0.gir copy "$(BinDir)\Gdk-3.0.gir" $(CopyDir)\share\gir-1.0
-if exist $(BinDir)\GdkWin32-3.0.gir copy "$(BinDir)\GdkWin32-3.0.gir" $(CopyDir)\share\gir-1.0
-if exist $(BinDir)\Gtk-3.0.gir copy "$(BinDir)\Gtk-3.0.gir" $(CopyDir)\share\gir-1.0
-if exist $(BinDir)\Gdk-3.0.typelib copy "$(BinDir)\Gdk-3.0.typelib" $(CopyDir)\lib\girepository-1.0
-if exist $(BinDir)\GdkWin32-3.0.typelib copy "$(BinDir)\GdkWin32-3.0.typelib" $(CopyDir)\lib\girepository-1.0
-if exist $(BinDir)\Gtk-3.0.typelib copy "$(BinDir)\Gtk-3.0.typelib" $(CopyDir)\lib\girepository-1.0
-goto DONE_BIN
-
-:DO_BROADWAY_BIN
-copy "$(BinDir)\broadwayd.exe" $(CopyDir)\bin
-copy "$(BinDir)\broadwayd.pdb" $(CopyDir)\bin
-
-if "$(Configuration)" == "Release_Broadway" goto DO_BROADWAY_RELEASE
-if "$(Configuration)" == "Debug_Broadway" goto DO_BROADWAY_DEBUG
-:DO_BROADWAY_RELEASE
-copy .\Release\$(Platform)\bin\$(GtkDllPrefix)gtk-3$(GtkDllSuffix).dll $(CopyDir)\bin
-copy .\Release\$(Platform)\bin\$(GtkDllPrefix)gtk-3$(GtkDllSuffix).pdb $(CopyDir)\bin
-copy .\Release\$(Platform)\bin\$(GtkDllPrefix)gailutil-3$(GtkDllSuffix).dll $(CopyDir)\bin
-copy .\Release\$(Platform)\bin\$(GtkDllPrefix)gailutil-3$(GtkDllSuffix).pdb $(CopyDir)\bin
-copy .\Release\$(Platform)\bin\gtk-$(ApiVersion).lib $(CopyDir)\lib
-copy .\Release\$(Platform)\bin\gailutil-$(ApiVersion).lib $(CopyDir)\lib
-copy .\Release\$(Platform)\bin\gtk3-demo.exe $(CopyDir)\bin
-copy .\Release\$(Platform)\bin\gtk3-demo.pdb $(CopyDir)\bin
-copy .\Release\$(Platform)\bin\gtk3-demo-application.exe $(CopyDir)\bin
-copy .\Release\$(Platform)\bin\gtk3-demo-application.pdb $(CopyDir)\bin
-copy .\Release\$(Platform)\bin\gtk3-icon-browser.exe $(CopyDir)\bin
-copy .\Release\$(Platform)\bin\gtk3-icon-browser.pdb $(CopyDir)\bin
-copy .\Release\$(Platform)\bin\gtk-encode-symbolic-svg.exe $(CopyDir)\bin
-copy .\Release\$(Platform)\bin\gtk-encode-symbolic-svg.pdb $(CopyDir)\bin
-copy .\Release\$(Platform)\bin\gtk-update-icon-cache.exe $(CopyDir)\bin
-copy .\Release\$(Platform)\bin\gtk-update-icon-cache.pdb $(CopyDir)\bin
-copy .\Release\$(Platform)\bin\gtk-query-settings.exe $(CopyDir)\bin
-copy .\Release\$(Platform)\bin\gtk-query-settings.pdb $(CopyDir)\bin
-copy .\Release\$(Platform)\bin\gtk-builder-tool.exe $(CopyDir)\bin
-copy .\Release\$(Platform)\bin\gtk-builder-tool.pdb $(CopyDir)\bin
-if exist .\Release\$(Platform)\bin\Gdk-3.0.gir copy .\Release\$(Platform)\bin\Gdk-3.0.gir $(CopyDir)\share\gir-1.0
-if exist .\Release\$(Platform)\bin\GdkWin32-3.0.gir copy .\Release\$(Platform)\bin\GdkWin32-3.0.gir $(CopyDir)\share\gir-1.0
-if exist .\Release\$(Platform)\bin\Gtk-3.0.gir copy .\Release\$(Platform)\bin\Gtk-3.0.gir $(CopyDir)\share\gir-1.0
-if exist .\Release\$(Platform)\bin\Gdk-3.0.typelib copy .\Release\$(Platform)\bin\Gdk-3.0.typelib $(CopyDir)\lib\girepository-1.0
-if exist .\Release\$(Platform)\bin\GdkWin32-3.0.typelib copy .\Release\$(Platform)\bin\GdkWin32-3.0.typelib $(CopyDir)\lib\girepository-1.0
-if exist .\Release\$(Platform)\bin\Gtk-3.0.typelib copy .\Release\$(Platform)\bin\Gtk-3.0.typelib $(CopyDir)\lib\girepository-1.0
-
-goto DONE_BIN
-
-:DO_BROADWAY_DEBUG
-copy .\Debug\$(Platform)\bin\$(GtkDllPrefix)gtk-3$(GtkDllSuffix).dll $(CopyDir)\bin
-copy .\Debug\$(Platform)\bin\$(GtkDllPrefix)gtk-3$(GtkDllSuffix).pdb $(CopyDir)\bin
-copy .\Debug\$(Platform)\bin\$(GtkDllPrefix)gailutil-3$(GtkDllSuffix).dll $(CopyDir)\bin
-copy .\Debug\$(Platform)\bin\$(GtkDllPrefix)gailutil-3$(GtkDllSuffix).pdb $(CopyDir)\bin
-copy .\Debug\$(Platform)\bin\gtk-$(ApiVersion).lib $(CopyDir)\lib
-copy .\Debug\$(Platform)\bin\gailutil-$(ApiVersion).lib $(CopyDir)\lib
-copy .\Debug\$(Platform)\bin\gtk3-demo.exe $(CopyDir)\bin
-copy .\Debug\$(Platform)\bin\gtk3-demo.pdb $(CopyDir)\bin
-copy .\Debug\$(Platform)\bin\gtk3-demo-application.exe $(CopyDir)\bin
-copy .\Debug\$(Platform)\bin\gtk3-demo-application.pdb $(CopyDir)\bin
-copy .\Debug\$(Platform)\bin\gtk3-icon-browser.exe $(CopyDir)\bin
-copy .\Debug\$(Platform)\bin\gtk3-icon-browser.pdb $(CopyDir)\bin
-copy .\Debug\$(Platform)\bin\gtk-encode-symbolic-svg.exe $(CopyDir)\bin
-copy .\Debug\$(Platform)\bin\gtk-encode-symbolic-svg.pdb $(CopyDir)\bin
-copy .\Debug\$(Platform)\bin\gtk-update-icon-cache.exe $(CopyDir)\bin
-copy .\Debug\$(Platform)\bin\gtk-update-icon-cache.pdb $(CopyDir)\bin
-copy .\Debug\$(Platform)\bin\gtk-query-settings.exe $(CopyDir)\bin
-copy .\Debug\$(Platform)\bin\gtk-query-settings.pdb $(CopyDir)\bin
-copy .\Debug\$(Platform)\bin\gtk-builder-tool.exe $(CopyDir)\bin
-copy .\Debug\$(Platform)\bin\gtk-builder-tool.pdb $(CopyDir)\bin
-if exist .\Debug\$(Platform)\bin\Gdk-3.0.gir copy .\Debug\$(Platform)\bin\Gdk-3.0.gir $(CopyDir)\share\gir-1.0
-if exist .\Debug\$(Platform)\bin\GdkWin32-3.0.gir copy .\Debug\$(Platform)\bin\GdkWin32-3.0.gir $(CopyDir)\share\gir-1.0
-if exist .\Debug\$(Platform)\bin\Gtk-3.0.gir copy .\Debug\$(Platform)\bin\Gtk-3.0.gir $(CopyDir)\share\gir-1.0
-if exist .\Debug\$(Platform)\bin\Gdk-3.0.typelib copy .\Debug\$(Platform)\bin\Gdk-3.0.typelib $(CopyDir)\lib\girepository-1.0
-if exist .\Debug\$(Platform)\bin\GdkWin32-3.0.typelib copy .\Debug\$(Platform)\bin\GdkWin32-3.0.typelib $(CopyDir)\lib\girepository-1.0
-if exist .\Debug\$(Platform)\bin\Gtk-3.0.typelib copy .\Debug\$(Platform)\bin\Gtk-3.0.typelib $(CopyDir)\lib\girepository-1.0
-
-:DONE_BIN
-
-copy ..\gdk-3.0.pc $(CopyDir)\lib\pkgconfig
-copy ..\gdk-3.0.pc $(CopyDir)\lib\pkgconfig\gdk-win32-3.0.pc
-copy "..\gtk+-3.0.pc" $(CopyDir)\lib\pkgconfig
-copy "..\gtk+-3.0.pc" "$(CopyDir)\lib\pkgconfig\gtk+-win32-3.0.pc"
-copy ..\gail-3.0.pc $(CopyDir)\lib\pkgconfig
-    </GtkDoInstallBin>
-    <GtkDoInstall>
-echo off
-mkdir $(CopyDir)\include\gtk-$(ApiVersion)\gdk\win32
-mkdir $(CopyDir)\include\gtk-$(ApiVersion)\gdk\deprecated
-mkdir $(CopyDir)\include\gtk-$(ApiVersion)\gtk\a11y
-mkdir $(CopyDir)\include\gtk-$(ApiVersion)\gtk\deprecated
-copy ..\..\gdk\win32\gdkwin32.h $(CopyDir)\include\gtk-$(ApiVersion)\gdk
-
-if "$(Configuration)" == "Release" goto COPY_RELEASE_BUILT_HEADERS
-if "$(Configuration)" == "Release_Broadway" goto COPY_RELEASE_BUILT_HEADERS
-if "$(Configuration)" == "Debug" goto COPY_DEBUG_BUILT_HEADERS
-if "$(Configuration)" == "Debug_Broadway" goto COPY_DEBUG_BUILT_HEADERS
-
-:COPY_DEBUG_BUILT_HEADERS
-copy .\Debug\$(Platform)\obj\gdk-3\gdk\gdkconfig.h $(CopyDir)\include\gtk-$(ApiVersion)\gdk
-copy .\Debug\$(Platform)\obj\gdk-3\gdk\gdkenumtypes.h $(CopyDir)\include\gtk-$(ApiVersion)\gdk
-copy .\Debug\$(Platform)\obj\gdk-3\gdk\gdkversionmacros.h $(CopyDir)\include\gtk-$(ApiVersion)\gdk
-copy .\Debug\$(Platform)\obj\gtk-3\gtk\gtktypebuiltins.h $(CopyDir)\include\gtk-$(ApiVersion)\gtk
-copy .\Debug\$(Platform)\obj\gtk-3\gtk\gtkversion.h $(CopyDir)\include\gtk-$(ApiVersion)\gtk
-goto CONTINUE_HEADERS
-
-:COPY_RELEASE_BUILT_HEADERS
-copy .\Release\$(Platform)\obj\gdk-3\gdk\gdkconfig.h $(CopyDir)\include\gtk-$(ApiVersion)\gdk
-copy .\Release\$(Platform)\obj\gdk-3\gdk\gdkenumtypes.h $(CopyDir)\include\gtk-$(ApiVersion)\gdk
-copy .\Release\$(Platform)\obj\gdk-3\gdk\gdkversionmacros.h $(CopyDir)\include\gtk-$(ApiVersion)\gdk
-copy .\Release\$(Platform)\obj\gtk-3\gtk\gtktypebuiltins.h $(CopyDir)\include\gtk-$(ApiVersion)\gtk
-copy .\Release\$(Platform)\obj\gtk-3\gtk\gtkversion.h $(CopyDir)\include\gtk-$(ApiVersion)\gtk
-goto CONTINUE_HEADERS
-
-:CONTINUE_HEADERS
-#include "gdk-3.vs10.headers"
-#include "gdk3-win32.vs10.headers"
-
-#include "gtk-3.vs10.headers"
-
-mkdir $(CopyDir)\include\gail-$(ApiVersion)\libgail-util
-#include "gailutil-3.vs10.headers"
-
-
-for &#37;&#37;s in (16 22 24 32 48 256) do ((mkdir $(CopyDir)\share\icons\hicolor\&#37;&#37;sx&#37;&#37;s\apps) &amp; (copy /b ..\..\demos\gtk-demo\data\&#37;&#37;sx&#37;&#37;s\gtk3-demo.png $(CopyDir)\share\icons\hicolor\&#37;&#37;sx&#37;&#37;s\apps))
-
-mkdir $(CopyDir)\share\glib-2.0\schemas
-copy ..\..\gtk\org.gtk.Settings.ColorChooser.gschema.xml $(CopyDir)\share\glib-2.0\schemas
-copy ..\..\gtk\org.gtk.Settings.Debug.gschema.xml $(CopyDir)\share\glib-2.0\schemas
-copy ..\..\gtk\org.gtk.Settings.EmojiChooser.gschema.xml $(CopyDir)\share\glib-2.0\schemas
-copy ..\..\gtk\org.gtk.Settings.FileChooser.gschema.xml $(CopyDir)\share\glib-2.0\schemas
-copy ..\..\demos\gtk-demo\org.gtk.Demo.gschema.xml $(CopyDir)\share\glib-2.0\schemas
-    </GtkDoInstall>
-    <GtkDoInstallBroadwayHeaders>
-copy ..\..\gdk\broadway\gdkbroadway.h $(CopyDir)\include\gtk-$(ApiVersion)\gdk
-mkdir $(CopyDir)\include\gtk-$(ApiVersion)\gdk\broadway
-#include "gdk3-broadway.vs10.headers"
-    </GtkDoInstallBroadwayHeaders>
-    <GtkPostInstall>
-echo "Compiling gsettings XML Files..."
-$(GlibEtcInstallRoot)\bin\glib-compile-schemas.exe $(CopyDir)\share\glib-2.0\schemas
-
-echo "Generating icon cache......"
-$(CopyDir)\bin\gtk-update-icon-cache.exe --ignore-theme-index --force "$(CopyDir)\share\icons\hicolor"
-    </GtkPostInstall>
-    <GenerateGtkPC>$(PythonDir)\python ..\gtkpc.py --prefix=$(CopyDir) --version=$(GtkVersion) --host=i686-pc-vs$(VSVer)</GenerateGtkPC>
-    <GenerateGtkPCX64>$(PythonDir)\python ..\gtkpc.py --prefix=$(CopyDir) --version=$(GtkVersion) --host=x86_64-pc-vs$(VSVer)</GenerateGtkPCX64>
-    <GtkPCFiles>..\gdk-3.0.pc;..\gtk+-3.0.pc;..\gail-3.0.pc</GtkPCFiles>
-  </PropertyGroup>
-  <PropertyGroup>
-    <_PropertySheetDisplayName>gtk3installsprops</_PropertySheetDisplayName>
-  </PropertyGroup>
-  <ItemGroup>
-    <BuildMacro Include="BinDir">
-      <Value>$(BinDir)</Value>
-    </BuildMacro>
-    <BuildMacro Include="InstalledDlls">
-      <Value>$(InstalledDlls)</Value>
-    </BuildMacro>
-    <BuildMacro Include="InstalledBins">
-      <Value>$(InstalledBins)</Value>
-    </BuildMacro>
-    <BuildMacro Include="InstalledBroadwayBins">
-      <Value>$(InstalledBroadwayBins)</Value>
-    </BuildMacro>
-    <BuildMacro Include="GtkDoInstallBin">
-      <Value>$(GtkDoInstallBin)</Value>
-    </BuildMacro>
-    <BuildMacro Include="GtkDoInstall">
-      <Value>$(GtkDoInstall)</Value>
-    </BuildMacro>
-    <BuildMacro Include="GtkDoInstallBroadwayHeaders">
-      <Value>$(GtkDoInstallBroadwayHeaders)</Value>
-    </BuildMacro>
-    <BuildMacro Include="GtkPostInstall">
-      <Value>$(GtkPostInstall)</Value>
-    </BuildMacro>
-    <BuildMacro Include="GenerateGtkPC">
-      <Value>$(GenerateGtkPC)</Value>
-    </BuildMacro>
-    <BuildMacro Include="GenerateGtkPCX64">
-      <Value>$(GenerateGtkPCX64)</Value>
-    </BuildMacro>
-    <BuildMacro Include="GtkPCFiles">
-      <Value>$(GtkPCFiles)</Value>
-    </BuildMacro>
-  </ItemGroup>
-</Project>
diff --git a/win32/vs10/gtk3-install.vcxproj b/win32/vs10/gtk3-install.vcxproj
index 290efb11a7..588515d8aa 100644
--- a/win32/vs10/gtk3-install.vcxproj
+++ b/win32/vs10/gtk3-install.vcxproj
@@ -40,182 +40,25 @@
     <Keyword>Win32Proj</Keyword>
   </PropertyGroup>
   <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
-    <ConfigurationType>Utility</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
-    <ConfigurationType>Utility</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
-    <ConfigurationType>Utility</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
-    <ConfigurationType>Utility</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|Win32'" Label="Configuration">
-    <ConfigurationType>Utility</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|Win32'" Label="Configuration">
-    <ConfigurationType>Utility</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|x64'" Label="Configuration">
-    <ConfigurationType>Utility</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|x64'" Label="Configuration">
-    <ConfigurationType>Utility</ConfigurationType>
+  <PropertyGroup Label="Configuration">
+    <ConfigurationType>Makefile</ConfigurationType>
     <CharacterSet>MultiByte</CharacterSet>
     <PlatformToolset>v100</PlatformToolset>
   </PropertyGroup>
   <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
   <ImportGroup Label="ExtensionSettings">
   </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-install.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-install.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-install.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-install.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|Win32'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-install.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|Win32'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-install.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|x64'" Label="PropertySheets">
+  <ImportGroup Label="PropertySheets">
     <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-install.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-install.props" />
+    <Import Project="..\vs1x-props\gtk3-build-defines.props" />
   </ImportGroup>
   <PropertyGroup Label="UserMacros" />
   <PropertyGroup>
-    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(GlibEtcInstallRoot)\</OutDir>
-    <ExtensionsToDeleteOnClean Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" />
-    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(GlibEtcInstallRoot)\</OutDir>
-    <ExtensionsToDeleteOnClean Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" />
-    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(GlibEtcInstallRoot)\</OutDir>
-    <ExtensionsToDeleteOnClean Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" />
-    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(GlibEtcInstallRoot)\</OutDir>
-    <ExtensionsToDeleteOnClean Condition="'$(Configuration)|$(Platform)'=='Release|x64'" />
-    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|Win32'">$(GlibEtcInstallRoot)\</OutDir>
-    <ExtensionsToDeleteOnClean Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|Win32'" />
-    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|x64'">$(GlibEtcInstallRoot)\</OutDir>
-    <ExtensionsToDeleteOnClean Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|x64'" />
-    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|Win32'">$(GlibEtcInstallRoot)\</OutDir>
-    <ExtensionsToDeleteOnClean Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|Win32'" />
-    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|x64'">$(GlibEtcInstallRoot)\</OutDir>
-    <ExtensionsToDeleteOnClean Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|x64'" />
+    <NMakeBuildCommandLine Condition="'$(Configuration)' == 'Debug_Broadway'">$(InstallBuildsBase) CFG=Debug BROADWAY=1 $(IntrospectPythonParam) GTK_VERSION=$(GtkVersion)</NMakeBuildCommandLine>
+    <NMakeBuildCommandLine Condition="'$(Configuration)' == 'Release_Broadway'">$(InstallBuildsBase) CFG=Release BROADWAY=1 $(IntrospectPythonParam) GTK_VERSION=$(GtkVersion)</NMakeBuildCommandLine>
+    <NMakeBuildCommandLine Condition="'$(Configuration)' == 'Debug'">$(InstallBuildsBase) CFG=$(Configuration) $(IntrospectPythonParam) GTK_VERSION=$(GtkVersion)</NMakeBuildCommandLine>
+    <NMakeBuildCommandLine Condition="'$(Configuration)' == 'Release'">$(InstallBuildsBase) CFG=$(Configuration) $(IntrospectPythonParam) GTK_VERSION=$(GtkVersion)</NMakeBuildCommandLine>
   </PropertyGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|Win32'">
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|x64'">
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|Win32'">
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|x64'">
-  </ItemDefinitionGroup>
-  <ItemGroup>
-    <CustomBuild Include="..\..\config.h.win32">
-      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Installing Build Results...</Message>
-      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(GtkPCFiles)</AdditionalInputs>
-      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(GtkDoInstallBin)$(GtkDoInstall)$(GtkPostInstall)</Command>
-      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">blah;%(Outputs)</Outputs>
-      <Message Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|Win32'">Installing Build Results...</Message>
-      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|Win32'">$(GtkPCFiles)</AdditionalInputs>
-      <Command Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|Win32'">$(GtkDoInstallBin)$(GtkDoInstall)$(GtkDoInstallBroadwayHeaders)$(GtkPostInstall)</Command>
-      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|Win32'">blah;%(Outputs)</Outputs>
-      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Installing Build Results...</Message>
-      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(GtkPCFiles)</AdditionalInputs>
-      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(GtkDoInstallBin)$(GtkDoInstall)$(GtkPostInstall)</Command>
-      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">blah;%(Outputs)</Outputs>
-      <Message Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|x64'">Installing Build Results...</Message>
-      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|x64'">$(GtkPCFiles)</AdditionalInputs>
-      <Command Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|x64'">$(GtkDoInstallBin)$(GtkDoInstall)$(GtkDoInstallBroadwayHeaders)$(GtkPostInstall)</Command>
-      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|x64'">blah;%(Outputs)</Outputs>
-      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Installing Build Results...</Message>
-      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(GtkPCFiles)</AdditionalInputs>
-      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(GtkDoInstallBin)$(GtkDoInstall)$(GtkPostInstall)</Command>
-      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">blah;%(Outputs)</Outputs>
-      <Message Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|Win32'">Installing Build Results...</Message>
-      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|Win32'">$(GtkPCFiles)</AdditionalInputs>
-      <Command Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|Win32'">$(GtkDoInstallBin)$(GtkDoInstall)$(GtkDoInstallBroadwayHeaders)$(GtkPostInstall)</Command>
-      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|Win32'">blah;%(Outputs)</Outputs>
-      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Installing Build Results...</Message>
-      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(GtkPCFiles)</AdditionalInputs>
-      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(GtkDoInstallBin)$(GtkDoInstall)$(GtkPostInstall)</Command>
-      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">blah;%(Outputs)</Outputs>
-      <Message Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|x64'">Installing Build Results...</Message>
-      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|x64'">$(GtkPCFiles)</AdditionalInputs>
-      <Command Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|x64'">$(GtkDoInstallBin)$(GtkDoInstall)$(GtkDoInstallBroadwayHeaders)$(GtkPostInstall)</Command>
-      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|x64'">blah;%(Outputs)</Outputs>
-    </CustomBuild>
-    <CustomBuild Include="..\gtkpc.py">
-      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Generating .pc files...</Message>
-      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(GenerateGtkPC)</Command>
-      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(GtkPCFiles);%(Outputs)</Outputs>
-      <Message Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|Win32'">Generating .pc files...</Message>
-      <Command Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|Win32'">$(GenerateGtkPC) --broadway</Command>
-      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|Win32'">$(GtkPCFiles);%(Outputs)</Outputs>
-      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Generating .pc files...</Message>
-      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(GenerateGtkPCX64)</Command>
-      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(GtkPCFiles);%(Outputs)</Outputs>
-      <Message Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|x64'">Generating .pc files...</Message>
-      <Command Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|x64'">$(GenerateGtkPCX64) --broadway</Command>
-      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|x64'">$(GtkPCFiles);%(Outputs)</Outputs>
-      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Generating .pc files...</Message>
-      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(GenerateGtkPC)</Command>
-      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(GtkPCFiles);%(Outputs)</Outputs>
-      <Message Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|Win32'">Generating .pc files...</Message>
-      <Command Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|Win32'">$(GenerateGtkPC) --broadway</Command>
-      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|Win32'">$(GtkPCFiles);%(Outputs)</Outputs>
-      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Generating .pc files...</Message>
-      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(GenerateGtkPCX64)</Command>
-      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(GtkPCFiles);%(Outputs)</Outputs>
-      <Message Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|x64'">Generating .pc files...</Message>
-      <Command Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|x64'">$(GenerateGtkPCX64) --broadway</Command>
-      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|x64'">$(GtkPCFiles);%(Outputs)</Outputs>
-    </CustomBuild>
-  </ItemGroup>
   <ItemGroup>
     <ProjectReference Include="gdk-3.vcxproj">
       <Project>{5ae8f5ce-9103-4951-aede-ea2f3b573be8}</Project>
diff --git a/win32/vs10/gtk3-install.vcxproj.filters b/win32/vs10/gtk3-install.vcxproj.filters
deleted file mode 100644
index 6be701aa89..0000000000
--- a/win32/vs10/gtk3-install.vcxproj.filters
+++ /dev/null
@@ -1,13 +0,0 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <ItemGroup>
-    <Filter Include="Resource Files">
-      <UniqueIdentifier>{67DA6AB6-F800-4c08-8B7A-83BB121AAD01}</UniqueIdentifier>
-      <Extensions>rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx;tiff;tif;png;wav</Extensions>
-    </Filter>
-  </ItemGroup>
-  <ItemGroup>
-    <CustomBuild Include="..\..\config.h.win32"><Filter>Resource Files</Filter></CustomBuild>
-    <CustomBuild Include="..\gtkpc.py"><Filter>Resource Files</Filter></CustomBuild>
-  </ItemGroup>
-</Project>
diff --git a/win32/vs10/gtk3-introspect.vcxproj b/win32/vs10/gtk3-introspect.vcxproj
index cba81df3c2..1a4409aa16 100644
--- a/win32/vs10/gtk3-introspect.vcxproj
+++ b/win32/vs10/gtk3-introspect.vcxproj
@@ -23,69 +23,20 @@
     <RootNamespace>gtk3introspect</RootNamespace>
   </PropertyGroup>
   <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
+  <PropertyGroup Label="Configuration">
     <ConfigurationType>Makefile</ConfigurationType>
-    <UseDebugLibraries>true</UseDebugLibraries>
     <CharacterSet>MultiByte</CharacterSet>
     <PlatformToolset>v100</PlatformToolset>
   </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
-    <ConfigurationType>Makefile</ConfigurationType>
-    <UseDebugLibraries>false</UseDebugLibraries>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-    <CharacterSet>MultiByte</CharacterSet>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
-    <ConfigurationType>Makefile</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
-    <ConfigurationType>Makefile</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
   <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
   <ImportGroup Label="ExtensionSettings">
   </ImportGroup>
-  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
+  <ImportGroup Label="PropertySheets">
     <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
+    <Import Project="..\vs1x-props\gtk3-build-defines.props" />
   </ImportGroup>
   <PropertyGroup Label="UserMacros" />
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
-    <NMakeBuildCommandLine>$(GtkIntrospectNMakeCmd) $(IntrospectPythonParam) introspect</NMakeBuildCommandLine>
-    <NMakeReBuildCommandLine>$(GtkIntrospectNMakeCmd) $(IntrospectPythonParam) introspect-clean introspect</NMakeReBuildCommandLine>
-    <NMakeCleanCommandLine>$(GtkIntrospectNMakeCmd) $(IntrospectPythonParam) introspect-clean</NMakeCleanCommandLine>
-    <NMakeOutput>$(GtkIntrospectBuiltFiles)</NMakeOutput>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
-    <NMakeBuildCommandLine>$(GtkIntrospectNMakeCmd) $(IntrospectPythonParam) introspect</NMakeBuildCommandLine>
-    <NMakeReBuildCommandLine>$(GtkIntrospectNMakeCmd) $(IntrospectPythonParam) introspect-clean introspect</NMakeReBuildCommandLine>
-    <NMakeCleanCommandLine>$(GtkIntrospectNMakeCmd) $(IntrospectPythonParam) introspect-clean</NMakeCleanCommandLine>
-    <NMakeOutput>$(GtkIntrospectBuiltFiles)</NMakeOutput>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
-    <NMakeBuildCommandLine>$(GtkIntrospectNMakeCmd) $(IntrospectPythonParam) introspect</NMakeBuildCommandLine>
-    <NMakeReBuildCommandLine>$(GtkIntrospectNMakeCmd) $(IntrospectPythonParam) introspect-clean introspect</NMakeReBuildCommandLine>
-    <NMakeCleanCommandLine>$(GtkIntrospectNMakeCmd) $(IntrospectPythonParam) introspect-clean</NMakeCleanCommandLine>
-    <NMakeOutput>$(GtkIntrospectBuiltFiles)</NMakeOutput>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
+  <PropertyGroup>
     <NMakeBuildCommandLine>$(GtkIntrospectNMakeCmd) $(IntrospectPythonParam) introspect</NMakeBuildCommandLine>
     <NMakeReBuildCommandLine>$(GtkIntrospectNMakeCmd) $(IntrospectPythonParam) introspect-clean introspect</NMakeReBuildCommandLine>
     <NMakeCleanCommandLine>$(GtkIntrospectNMakeCmd) $(IntrospectPythonParam) introspect-clean</NMakeCleanCommandLine>
@@ -104,4 +55,4 @@
   <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
   <ImportGroup Label="ExtensionTargets">
   </ImportGroup>
-</Project>
\ No newline at end of file
+</Project>
diff --git a/win32/vs10/gtk3-prebuild.vcxproj b/win32/vs10/gtk3-prebuild.vcxproj
index b73d9802cc..a0b5829ae8 100644
--- a/win32/vs10/gtk3-prebuild.vcxproj
+++ b/win32/vs10/gtk3-prebuild.vcxproj
@@ -40,46 +40,7 @@
     <Keyword>Win32Proj</Keyword>
   </PropertyGroup>
   <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
-    <ConfigurationType>Makefile</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
-    <ConfigurationType>Makefile</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
-    <ConfigurationType>Makefile</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
-    <ConfigurationType>Makefile</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|Win32'" Label="Configuration">
-    <ConfigurationType>Makefile</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|Win32'" Label="Configuration">
-    <ConfigurationType>Makefile</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|x64'" Label="Configuration">
-    <ConfigurationType>Makefile</ConfigurationType>
-    <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-    <PlatformToolset>v100</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|x64'" Label="Configuration">
+  <PropertyGroup Label="Configuration">
     <ConfigurationType>Makefile</ConfigurationType>
     <CharacterSet>MultiByte</CharacterSet>
     <PlatformToolset>v100</PlatformToolset>
@@ -87,52 +48,31 @@
   <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
   <ImportGroup Label="ExtensionSettings">
   </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="PropertySheets">
+  <ImportGroup Label="PropertySheets">
     <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|Win32'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|Win32'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release_Broadway|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug_Broadway|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="gtk3-build-defines.props" />
+    <Import Project="..\vs1x-props\gtk3-build-defines.props" />
   </ImportGroup>
   <PropertyGroup Label="UserMacros" />
   <PropertyGroup>
-    <NMakeBuildCommandLine Condition="'$(Configuration)' == 'Debug_Broadway'">$(GenerateRequiredSourcesBase) CFG=Debug BROADWAY=1 $(IntrospectPythonParam) generate-base-sources</NMakeBuildCommandLine>
-    <NMakeBuildCommandLine Condition="'$(Configuration)' == 'Release_Broadway'">$(GenerateRequiredSourcesBase) CFG=Release BROADWAY=1 $(IntrospectPythonParam) generate-base-sources</NMakeBuildCommandLine>
+    <!-- Debug -->
     <NMakeBuildCommandLine Condition="'$(Configuration)' == 'Debug'">$(GenerateRequiredSourcesBase) CFG=$(Configuration) $(IntrospectPythonParam) generate-base-sources</NMakeBuildCommandLine>
-    <NMakeBuildCommandLine Condition="'$(Configuration)' == 'Release'">$(GenerateRequiredSourcesBase) CFG=$(Configuration) $(IntrospectPythonParam) generate-base-sources</NMakeBuildCommandLine>
-    <NMakeReBuildCommandLine Condition="'$(Configuration)' == 'Debug_Broadway'">$(GenerateRequiredSourcesBase) CFG=Debug BROADWAY=1 $(IntrospectPythonParam) clean generate-base-sources</NMakeReBuildCommandLine>
-    <NMakeReBuildCommandLine Condition="'$(Configuration)' == 'Release_Broadway'">$(GenerateRequiredSourcesBase) CFG=Release BROADWAY=1 $(IntrospectPythonParam) clean generate-base-sources</NMakeReBuildCommandLine>
     <NMakeReBuildCommandLine Condition="'$(Configuration)' == 'Debug'">$(GenerateRequiredSourcesBase) CFG=$(Configuration) $(IntrospectPythonParam) clean generate-base-sources</NMakeReBuildCommandLine>
+    <NMakeCleanCommandLine Condition="'$(Configuration)' == 'Debug'">$(GenerateRequiredSourcesBase) CFG=$(Configuration) $(IntrospectPythonParam) clean</NMakeCleanCommandLine>
+
+    <!-- Release -->
+    <NMakeBuildCommandLine Condition="'$(Configuration)' == 'Release'">$(GenerateRequiredSourcesBase) CFG=$(Configuration) $(IntrospectPythonParam) generate-base-sources</NMakeBuildCommandLine>
     <NMakeReBuildCommandLine Condition="'$(Configuration)' == 'Release'">$(GenerateRequiredSourcesBase) CFG=$(Configuration) $(IntrospectPythonParam) clean generate-base-sources</NMakeReBuildCommandLine>
+    <NMakeCleanCommandLine Condition="'$(Configuration)' == 'Release'">$(GenerateRequiredSourcesBase) CFG=$(Configuration) $(IntrospectPythonParam) clean</NMakeCleanCommandLine>
+
+    <!-- Debug_Broadway -->
+    <NMakeBuildCommandLine Condition="'$(Configuration)' == 'Debug_Broadway'">$(GenerateRequiredSourcesBase) CFG=Debug BROADWAY=1 $(IntrospectPythonParam) generate-base-sources</NMakeBuildCommandLine>
+    <NMakeReBuildCommandLine Condition="'$(Configuration)' == 'Debug_Broadway'">$(GenerateRequiredSourcesBase) CFG=Debug BROADWAY=1 $(IntrospectPythonParam) clean generate-base-sources</NMakeReBuildCommandLine>
     <NMakeCleanCommandLine Condition="'$(Configuration)' == 'Debug_Broadway'">$(GenerateRequiredSourcesBase) CFG=Debug BROADWAY=1 $(IntrospectPythonParam) clean</NMakeCleanCommandLine>
+
+    <!-- Release_Broadway -->
+    <NMakeBuildCommandLine Condition="'$(Configuration)' == 'Release_Broadway'">$(GenerateRequiredSourcesBase) CFG=Release BROADWAY=1 $(IntrospectPythonParam) generate-base-sources</NMakeBuildCommandLine>
+    <NMakeReBuildCommandLine Condition="'$(Configuration)' == 'Release_Broadway'">$(GenerateRequiredSourcesBase) CFG=Release BROADWAY=1 $(IntrospectPythonParam) clean generate-base-sources</NMakeReBuildCommandLine>
     <NMakeCleanCommandLine Condition="'$(Configuration)' == 'Release_Broadway'">$(GenerateRequiredSourcesBase) CFG=Release BROADWAY=1 $(IntrospectPythonParam) clean</NMakeCleanCommandLine>
-    <NMakeCleanCommandLine Condition="'$(Configuration)' == 'Debug'">$(GenerateRequiredSourcesBase) CFG=$(Configuration) $(IntrospectPythonParam) clean</NMakeCleanCommandLine>
-    <NMakeCleanCommandLine Condition="'$(Configuration)' == 'Release'">$(GenerateRequiredSourcesBase) CFG=$(Configuration) $(IntrospectPythonParam) clean</NMakeCleanCommandLine>
   </PropertyGroup>
   <ItemGroup>
   </ItemGroup>
diff --git a/win32/vs11/Makefile.am b/win32/vs11/Makefile.am
index becafd26c1..c95331e099 100644
--- a/win32/vs11/Makefile.am
+++ b/win32/vs11/Makefile.am
@@ -27,17 +27,11 @@ EXTRA_DIST +=	\
 	gailutil-3.vcxproj	\
 	gailutil-3.vcxproj.filters	\
 	gtk3-install.vcxproj	\
-	gtk3-install.vcxproj.filters	\
 	gtk3-introspect.vcxproj		\
 	broadwayd.vcxproj	\
 	broadwayd.vcxproj.filters	\
 	gdk3-broadway.vcxproj	\
-	gdk3-broadway.vcxproj.filters	\
-	gtk3-build-defines.props	\
-	gtk3-copy-gdk-broadway.props	\
-	gtk3-ignore-broadway.props	\
-	gtk3-install.props	\
-	gtk3-version-paths.props
+	gdk3-broadway.vcxproj.filters
 
 DISTCLEANFILES = $(EXTRA_DIST)
 
diff --git a/win32/vs12/Makefile.am b/win32/vs12/Makefile.am
index 1dd4ba7674..4e669865be 100644
--- a/win32/vs12/Makefile.am
+++ b/win32/vs12/Makefile.am
@@ -27,17 +27,11 @@ EXTRA_DIST +=	\
 	gailutil-3.vcxproj	\
 	gailutil-3.vcxproj.filters	\
 	gtk3-install.vcxproj	\
-	gtk3-install.vcxproj.filters	\
 	gtk3-introspect.vcxproj		\
 	broadwayd.vcxproj	\
 	broadwayd.vcxproj.filters	\
 	gdk3-broadway.vcxproj	\
-	gdk3-broadway.vcxproj.filters	\
-	gtk3-build-defines.props	\
-	gtk3-copy-gdk-broadway.props	\
-	gtk3-ignore-broadway.props	\
-	gtk3-install.props	\
-	gtk3-version-paths.props
+	gdk3-broadway.vcxproj.filters
 
 DISTCLEANFILES = $(EXTRA_DIST)
 
diff --git a/win32/vs14/Makefile.am b/win32/vs14/Makefile.am
index 318c87b7a9..ac099944c3 100644
--- a/win32/vs14/Makefile.am
+++ b/win32/vs14/Makefile.am
@@ -27,17 +27,11 @@ EXTRA_DIST +=	\
 	gailutil-3.vcxproj	\
 	gailutil-3.vcxproj.filters	\
 	gtk3-install.vcxproj	\
-	gtk3-install.vcxproj.filters	\
 	gtk3-introspect.vcxproj		\
 	broadwayd.vcxproj	\
 	broadwayd.vcxproj.filters	\
 	gdk3-broadway.vcxproj	\
-	gdk3-broadway.vcxproj.filters	\
-	gtk3-build-defines.props	\
-	gtk3-copy-gdk-broadway.props	\
-	gtk3-ignore-broadway.props	\
-	gtk3-install.props	\
-	gtk3-version-paths.props
+	gdk3-broadway.vcxproj.filters
 
 DISTCLEANFILES = $(EXTRA_DIST)
 
diff --git a/win32/vs15/Makefile.am b/win32/vs15/Makefile.am
index 619128e42c..8a95e9eae9 100644
--- a/win32/vs15/Makefile.am
+++ b/win32/vs15/Makefile.am
@@ -27,17 +27,11 @@ EXTRA_DIST_COPIED =	\
 	gailutil-3.vcxproj	\
 	gailutil-3.vcxproj.filters	\
 	gtk3-install.vcxproj	\
-	gtk3-install.vcxproj.filters	\
 	gtk3-introspect.vcxproj		\
 	broadwayd.vcxproj	\
 	broadwayd.vcxproj.filters	\
 	gdk3-broadway.vcxproj	\
-	gdk3-broadway.vcxproj.filters	\
-	gtk3-build-defines.props	\
-	gtk3-copy-gdk-broadway.props	\
-	gtk3-ignore-broadway.props	\
-	gtk3-install.props	\
-	gtk3-version-paths.props
+	gdk3-broadway.vcxproj.filters
 
 DISTCLEANFILES = $(EXTRA_DIST_COPIED)
 EXTRA_DIST += $(EXTRA_DIST_COPIED) Directory.Build.props
diff --git a/win32/vs16/Makefile.am b/win32/vs16/Makefile.am
index 64ca7a6c8c..6bdff1695a 100644
--- a/win32/vs16/Makefile.am
+++ b/win32/vs16/Makefile.am
@@ -27,17 +27,11 @@ EXTRA_DIST +=	\
 	gailutil-3.vcxproj	\
 	gailutil-3.vcxproj.filters	\
 	gtk3-install.vcxproj	\
-	gtk3-install.vcxproj.filters	\
 	gtk3-introspect.vcxproj		\
 	broadwayd.vcxproj	\
 	broadwayd.vcxproj.filters	\
 	gdk3-broadway.vcxproj	\
-	gdk3-broadway.vcxproj.filters	\
-	gtk3-build-defines.props	\
-	gtk3-copy-gdk-broadway.props	\
-	gtk3-ignore-broadway.props	\
-	gtk3-install.props	\
-	gtk3-version-paths.props
+	gdk3-broadway.vcxproj.filters
 
 DISTCLEANFILES = $(EXTRA_DIST)
 
diff --git a/win32/vs17/Makefile.am b/win32/vs17/Makefile.am
index 35d581e313..0ddde0d50e 100644
--- a/win32/vs17/Makefile.am
+++ b/win32/vs17/Makefile.am
@@ -27,17 +27,11 @@ EXTRA_DIST +=	\
 	gailutil-3.vcxproj	\
 	gailutil-3.vcxproj.filters	\
 	gtk3-install.vcxproj	\
-	gtk3-install.vcxproj.filters	\
 	gtk3-introspect.vcxproj		\
 	broadwayd.vcxproj	\
 	broadwayd.vcxproj.filters	\
 	gdk3-broadway.vcxproj	\
-	gdk3-broadway.vcxproj.filters	\
-	gtk3-build-defines.props	\
-	gtk3-copy-gdk-broadway.props	\
-	gtk3-ignore-broadway.props	\
-	gtk3-install.props	\
-	gtk3-version-paths.props
+	gdk3-broadway.vcxproj.filters
 
 DISTCLEANFILES = $(EXTRA_DIST)
 
diff --git a/win32/vs1x-props/Makefile.am b/win32/vs1x-props/Makefile.am
new file mode 100644
index 0000000000..7f3bbf6c9e
--- /dev/null
+++ b/win32/vs1x-props/Makefile.am
@@ -0,0 +1,13 @@
+include $(top_srcdir)/Makefile.decl
+
+GENERATED_ITEMS = gtk3-version-paths.props
+
+EXTRA_DIST += \
+	gtk3-build-defines.props		\
+	gtk3-version-paths.props.in		\
+	$(GENERATED_ITEMS)
+
+DISTCLEANFILES = \
+	$(GENERATED_ITEMS)
+
+-include $(top_srcdir)/git.mk
diff --git a/win32/vs10/gtk3-build-defines.props b/win32/vs1x-props/gtk3-build-defines.props
similarity index 97%
rename from win32/vs10/gtk3-build-defines.props
rename to win32/vs1x-props/gtk3-build-defines.props
index c8c511b9bd..0198734e79 100644
--- a/win32/vs10/gtk3-build-defines.props
+++ b/win32/vs1x-props/gtk3-build-defines.props
@@ -32,6 +32,9 @@ nmake -f gtk-introspection-msvc.mak CFG=$(Configuration) PREFIX=$(GlibEtcInstall
     <GenerateRequiredSourcesBase>cd ..
 set VCInstallDir=$(VCInstallDir)
 nmake -f generate-msvc.mak PREFIX=$(GlibEtcInstallRoot)</GenerateRequiredSourcesBase>
+    <InstallBuildsBase>cd ..
+set VCInstallDir=$(VCInstallDir)
+nmake -f install-msvc.mak PREFIX=$(GlibEtcInstallRoot)</InstallBuildsBase>
   </PropertyGroup>
   <PropertyGroup>
     <_PropertySheetDisplayName>gtk3builddefinesprops</_PropertySheetDisplayName>
@@ -117,5 +120,8 @@ nmake -f generate-msvc.mak PREFIX=$(GlibEtcInstallRoot)</GenerateRequiredSources
     <BuildMacro Include="GenerateRequiredSourcesBase">
       <Value>$(GenerateRequiredSourcesBase)</Value>
     </BuildMacro>
+    <BuildMacro Include="InstallBuildsBase">
+      <Value>$(InstallBuildsBase)</Value>
+    </BuildMacro>
   </ItemGroup>
 </Project>
diff --git a/win32/vs10/gtk3-version-paths.props.in b/win32/vs1x-props/gtk3-version-paths.props.in
similarity index 87%
rename from win32/vs10/gtk3-version-paths.props.in
rename to win32/vs1x-props/gtk3-version-paths.props.in
index f8c0a16bba..5c34e804d5 100644
--- a/win32/vs10/gtk3-version-paths.props.in
+++ b/win32/vs1x-props/gtk3-version-paths.props.in
@@ -1,7 +1,14 @@
 ﻿<?xml version="1.0" encoding="utf-8"?>
 <Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
   <PropertyGroup Label="UserMacros">
-    <VSVer>10</VSVer>
+    <VSVer Condition="'$(VisualStudioVersion)' == ''">10</VSVer>
+    <VSVer Condition="'$(VisualStudioVersion)' == '10.0'">10</VSVer>
+    <VSVer Condition="'$(VisualStudioVersion)' == '11.0'">11</VSVer>
+    <VSVer Condition="'$(VisualStudioVersion)' == '12.0'">12</VSVer>
+    <VSVer Condition="'$(VisualStudioVersion)' == '14.0'">14</VSVer>
+    <VSVer Condition="'$(VisualStudioVersion)' == '15.0'">15</VSVer>
+    <VSVer Condition="'$(VisualStudioVersion)' == '16.0'">16</VSVer>
+    <VSVer Condition="'$(VisualStudioVersion)' == '17.0'">17</VSVer>
     <GlibEtcInstallRoot>$(SolutionDir)\..\..\..\vs$(VSVer)\$(Platform)</GlibEtcInstallRoot>
     <CopyDir>..\..\..\vs$(VSVer)\$(Platform)</CopyDir>
     <ApiVersion>3.0</ApiVersion>
diff --git a/win32/vs9/Makefile.am b/win32/vs9/Makefile.am
index eded327a89..f19e52c9f2 100644
--- a/win32/vs9/Makefile.am
+++ b/win32/vs9/Makefile.am
@@ -1,12 +1,5 @@
 include $(top_srcdir)/Makefile.decl
 
-MSVC_HEADERS_LISTS =	\
-	gdk3-win32.headers	\
-	gdk3-broadway.headers	\
-	gdk-3.headers		\
-	gtk-3.headers		\
-	gailutil-3.headers
-
 GENERATED_ITEMS = \
 	gdk3-win32.vcproj		\
 	gdk3-broadway.vcproj		\
@@ -17,7 +10,6 @@ GENERATED_ITEMS = \
 	gtk3-demo-application.vcproj	\
 	gtk3-icon-browser.vcproj	\
 	gailutil-3.vcproj		\
-	gtk3-install.vsprops		\
 	gtk3-version-paths.vsprops
 
 EXTRA_DIST += \
@@ -42,14 +34,9 @@ EXTRA_DIST += \
 	gtk3-build-defines.vsprops	\
 	gtk3-copy-gdk-broadway.vsprops	\
 	gtk3-ignore-broadway.vsprops	\
-	gtk3-install.vspropsin		\
 	gtk3-version-paths.vsprops.in	\
 	$(GENERATED_ITEMS)
 
-gtk3-install.vsprops: $(top_srcdir)/win32/vs9/gtk3-install.vspropsin $(MSVC_HEADERS_LISTS)
-	$(CPP) -P - <$(top_srcdir)/win32/vs9/gtk3-install.vspropsin >$@
-	rm $(MSVC_HEADERS_LISTS)
-
 DISTCLEANFILES = $(GENERATED_ITEMS)
 
 -include $(top_srcdir)/git.mk
diff --git a/win32/vs9/gtk3-build-defines.vsprops b/win32/vs9/gtk3-build-defines.vsprops
index 449a3cba1f..561a5952b1 100644
--- a/win32/vs9/gtk3-build-defines.vsprops
+++ b/win32/vs9/gtk3-build-defines.vsprops
@@ -99,4 +99,8 @@
 		Name="GenerateRequiredSourcesBase"
 		Value="cd ..&#x0D;&#x0A;set VCInstallDir=$(VCInstallDir)&#x0D;&#x0A;nmake -f generate-msvc.mak PREFIX=$(GlibEtcInstallRoot)"
 	/>
+	<UserMacro
+		Name="InstallBuildsBase"
+		Value="cd ..&#x0D;&#x0A;set VCInstallDir=$(VCInstallDir)&#x0D;&#x0A;nmake -f install-msvc.mak PREFIX=$(GlibEtcInstallRoot)"
+	/>
 </VisualStudioPropertySheet>
diff --git a/win32/vs9/gtk3-demo-application.vcprojin b/win32/vs9/gtk3-demo-application.vcprojin
index 41a2d3367b..b9eb1577e7 100644
--- a/win32/vs9/gtk3-demo-application.vcprojin
+++ b/win32/vs9/gtk3-demo-application.vcprojin
@@ -153,6 +153,7 @@
 			UniqueIdentifier="{4FC737F1-C7A5-4376-A066-2A32D752A2FF}"
 			>
 #include "gtk3-demo-application.sourcefiles"
+			<File RelativePath="..\..\demos\gtk-demo\demo_resources.c" />
 		</Filter>
 		<Filter
 			Name="Headers"
diff --git a/win32/vs9/gtk3-demo.vcprojin b/win32/vs9/gtk3-demo.vcprojin
index 48e1f9f60a..50d279c442 100644
--- a/win32/vs9/gtk3-demo.vcprojin
+++ b/win32/vs9/gtk3-demo.vcprojin
@@ -157,6 +157,7 @@
 			UniqueIdentifier="{4FC737F1-C7A5-4376-A066-2A32D752A2FF}"
 			>
 #include "gtk3-demo.sourcefiles"
+			<File RelativePath="..\..\demos\gtk-demo\demo_resources.c" />
 		</Filter>
 		<Filter
 			Name="Header Files"
diff --git a/win32/vs9/gtk3-icon-browser.vcprojin b/win32/vs9/gtk3-icon-browser.vcprojin
index 971235aff8..cc2c8b7782 100644
--- a/win32/vs9/gtk3-icon-browser.vcprojin
+++ b/win32/vs9/gtk3-icon-browser.vcprojin
@@ -157,6 +157,7 @@
 			UniqueIdentifier="{4FC737F1-C7A5-4376-A066-2A32D752A2FF}"
 			>
 #include "gtk3-icon-browser.sourcefiles"
+			<File RelativePath="..\..\demos\icon-browser\resources.c" />
 		</Filter>
 		<Filter
 			Name="Headers"
diff --git a/win32/vs9/gtk3-install.vcproj b/win32/vs9/gtk3-install.vcproj
index 01f7bbc83d..764397e502 100644
--- a/win32/vs9/gtk3-install.vcproj
+++ b/win32/vs9/gtk3-install.vcproj
@@ -21,113 +21,98 @@
 	<Configurations>
 		<Configuration
 			Name="Debug|Win32"
-			OutputDirectory="$(GlibEtcInstallRoot)"
-			ConfigurationType="10"
-			InheritedPropertySheets=".\gtk3-install.vsprops"
+			ConfigurationType="0"
+			InheritedPropertySheets=".\gtk3-build-defines.vsprops"
 			CharacterSet="2"
 			DeleteExtensionsOnClean=""
 			>
 			<Tool
-				Name="VCPostBuildEventTool"
-				CommandLine="$(GtkDoInstallBin)$(GtkDoInstall)$(GtkPostInstall)"
+				Name="VCNMakeTool"
+				BuildCommandLine="$(InstallBuildsBase) CFG=$(ConfigurationName) $(IntrospectPythonParam) GTK_VERSION=$(GtkVersion)"
 			/>
 		</Configuration>
 		<Configuration
 			Name="Debug|x64"
-			OutputDirectory="$(GlibEtcInstallRoot)"
-			ConfigurationType="10"
-			InheritedPropertySheets=".\gtk3-install.vsprops"
+			ConfigurationType="0"
+			InheritedPropertySheets=".\gtk3-build-defines.vsprops"
 			CharacterSet="2"
 			DeleteExtensionsOnClean=""
 			>
 			<Tool
-				Name="VCPostBuildEventTool"
-				CommandLine="$(GtkDoInstallBin)$(GtkDoInstall)$(GtkPostInstall)"
+				Name="VCNMakeTool"
+				BuildCommandLine="$(InstallBuildsBase) CFG=$(ConfigurationName) $(IntrospectPythonParam) GTK_VERSION=$(GtkVersion)"
 			/>
 		</Configuration>
 		<Configuration
 			Name="Debug_Broadway|Win32"
-			OutputDirectory="$(GlibEtcInstallRoot)"
-			IntermediateDirectory="$(ConfigurationName)"
-			ConfigurationType="10"
-			InheritedPropertySheets=".\gtk3-install.vsprops"
+			ConfigurationType="0"
+			InheritedPropertySheets=".\gtk3-build-defines.vsprops"
 			CharacterSet="2"
 			DeleteExtensionsOnClean=""
 			>
 			<Tool
-				Name="VCPostBuildEventTool"
-				CommandLine="$(GtkDoInstallBin)$(GtkDoInstall)$(GtkDoInstallBroadwayHeaders)$(GtkPostInstall)"
+				Name="VCNMakeTool"
+				BuildCommandLine="$(InstallBuildsBase) CFG=Debug $(IntrospectPythonParam) GTK_VERSION=$(GtkVersion) BROADWAY=1"
 			/>
 		</Configuration>
 		<Configuration
 			Name="Debug_Broadway|x64"
-			OutputDirectory="$(GlibEtcInstallRoot)"
-			ConfigurationType="10"
-			InheritedPropertySheets=".\gtk3-install.vsprops"
+			ConfigurationType="0"
+			InheritedPropertySheets=".\gtk3-build-defines.vsprops"
 			CharacterSet="2"
 			DeleteExtensionsOnClean=""
 			>
 			<Tool
-				Name="VCPostBuildEventTool"
-				CommandLine="$(GtkDoInstallBin)$(GtkDoInstall)$(GtkDoInstallBroadwayHeaders)$(GtkPostInstall)"
+				Name="VCNMakeTool"
+				BuildCommandLine="$(InstallBuildsBase) CFG=Debug $(IntrospectPythonParam) GTK_VERSION=$(GtkVersion) BROADWAY=1"
 			/>
 		</Configuration>
 		<Configuration
 			Name="Release|Win32"
-			OutputDirectory="$(GlibEtcInstallRoot)"
-			IntermediateDirectory="$(ConfigurationName)"
-			ConfigurationType="10"
-			InheritedPropertySheets=".\gtk3-install.vsprops"
+			ConfigurationType="0"
+			InheritedPropertySheets=".\gtk3-build-defines.vsprops"
 			CharacterSet="2"
 			DeleteExtensionsOnClean=""
-			WholeProgramOptimization="1"
 			>
 			<Tool
-				Name="VCPostBuildEventTool"
-				CommandLine="$(GtkDoInstallBin)$(GtkDoInstall)$(GtkPostInstall)"
+				Name="VCNMakeTool"
+				BuildCommandLine="$(InstallBuildsBase) CFG=$(ConfigurationName) $(IntrospectPythonParam) GTK_VERSION=$(GtkVersion)"
 			/>
 		</Configuration>
 		<Configuration
 			Name="Release|x64"
-			OutputDirectory="$(GlibEtcInstallRoot)"
-			ConfigurationType="10"
-			InheritedPropertySheets=".\gtk3-install.vsprops"
+			ConfigurationType="0"
+			InheritedPropertySheets=".\gtk3-build-defines.vsprops"
 			CharacterSet="2"
 			DeleteExtensionsOnClean=""
-			WholeProgramOptimization="1"
 			>
 			<Tool
-				Name="VCPostBuildEventTool"
-				CommandLine="$(GtkDoInstallBin)$(GtkDoInstall)$(GtkPostInstall)"
+				Name="VCNMakeTool"
+				BuildCommandLine="$(InstallBuildsBase) CFG=$(ConfigurationName) $(IntrospectPythonParam) GTK_VERSION=$(GtkVersion)"
 			/>
 		</Configuration>
 		<Configuration
 			Name="Release_Broadway|Win32"
-			OutputDirectory="$(GlibEtcInstallRoot)"
-			IntermediateDirectory="$(ConfigurationName)"
-			ConfigurationType="10"
-			InheritedPropertySheets=".\gtk3-install.vsprops"
+			ConfigurationType="0"
+			InheritedPropertySheets=".\gtk3-build-defines.vsprops"
 			CharacterSet="2"
 			DeleteExtensionsOnClean=""
-			WholeProgramOptimization="1"
 			>
 			<Tool
-				Name="VCPostBuildEventTool"
-				CommandLine="$(GtkDoInstallBin)$(GtkDoInstall)$(GtkDoInstallBroadwayHeaders)$(GtkPostInstall)"
+				Name="VCNMakeTool"
+				BuildCommandLine="$(InstallBuildsBase) CFG=Release $(IntrospectPythonParam) GTK_VERSION=$(GtkVersion) BROADWAY=1"
 			/>
 		</Configuration>
 		<Configuration
 			Name="Release_Broadway|x64"
-			OutputDirectory="$(GlibEtcInstallRoot)"
-			ConfigurationType="10"
-			InheritedPropertySheets=".\gtk3-install.vsprops"
+			ConfigurationType="0"
+			InheritedPropertySheets=".\gtk3-build-defines.vsprops"
 			CharacterSet="2"
 			DeleteExtensionsOnClean=""
-			WholeProgramOptimization="1"
 			>
 			<Tool
-				Name="VCPostBuildEventTool"
-				CommandLine="$(GtkDoInstallBin)$(GtkDoInstall)$(GtkDoInstallBroadwayHeaders)$(GtkPostInstall)"
+				Name="VCNMakeTool"
+				BuildCommandLine="$(InstallBuildsBase) CFG=Release $(IntrospectPythonParam) GTK_VERSION=$(GtkVersion) BROADWAY=1"
 			/>
 		</Configuration>
 	</Configurations>
diff --git a/win32/vs9/gtk3-install.vspropsin b/win32/vs9/gtk3-install.vspropsin
deleted file mode 100644
index 4fb97df337..0000000000
--- a/win32/vs9/gtk3-install.vspropsin
+++ /dev/null
@@ -1,208 +0,0 @@
-<?xml version="1.0" encoding="Windows-1252"?>
-<VisualStudioPropertySheet
-	ProjectType="Visual C++"
-	Version="8.00"
-	Name="gtkinstallprops"
-	InheritedPropertySheets=".\gtk3-build-defines.vsprops"
-	>
-	<UserMacro
-		Name="GtkDoInstallBin"
-		Value="
-mkdir $(CopyDir)\bin&#x0D;&#x0A;
-mkdir $(CopyDir)\share\gir-1.0&#x0D;&#x0A;
-mkdir $(CopyDir)\lib\pkgconfig&#x0D;&#x0A;
-mkdir $(CopyDir)\lib\girepository-1.0&#x0D;&#x0A;
-
-copy $(ConfigurationName)\$(PlatformName)\bin\$(GtkDllPrefix)gdk-3$(GtkDllSuffix).dll $(CopyDir)\bin&#x0D;&#x0A;
-copy $(ConfigurationName)\$(PlatformName)\bin\$(GtkDllPrefix)gdk-3$(GtkDllSuffix).pdb $(CopyDir)\bin&#x0D;&#x0A;
-copy $(ConfigurationName)\$(PlatformName)\bin\gdk-$(ApiVersion).lib $(CopyDir)\lib&#x0D;&#x0A;
-
-if &quot;$(ConfigurationName)&quot; == &quot;Release_Broadway&quot; goto DO_BROADWAY_BIN&#x0D;&#x0A;
-if &quot;$(ConfigurationName)&quot; == &quot;Debug_Broadway&quot; goto DO_BROADWAY_BIN&#x0D;&#x0A;
-copy $(ConfigurationName)\$(PlatformName)\bin\$(GtkDllPrefix)gtk-3$(GtkDllSuffix).dll $(CopyDir)\bin&#x0D;&#x0A;
-copy $(ConfigurationName)\$(PlatformName)\bin\$(GtkDllPrefix)gtk-3$(GtkDllSuffix).pdb $(CopyDir)\bin&#x0D;&#x0A;
-copy $(ConfigurationName)\$(PlatformName)\bin\$(GtkDllPrefix)gailutil-3$(GtkDllSuffix).dll $(CopyDir)\bin&#x0D;&#x0A;
-copy $(ConfigurationName)\$(PlatformName)\bin\$(GtkDllPrefix)gailutil-3$(GtkDllSuffix).pdb $(CopyDir)\bin&#x0D;&#x0A;
-copy $(ConfigurationName)\$(PlatformName)\bin\gtk-$(ApiVersion).lib $(CopyDir)\lib&#x0D;&#x0A;
-copy $(ConfigurationName)\$(PlatformName)\bin\gailutil-$(ApiVersion).lib $(CopyDir)\lib&#x0D;&#x0A;
-copy $(ConfigurationName)\$(PlatformName)\bin\gtk3-demo.exe $(CopyDir)\bin&#x0D;&#x0A;
-copy $(ConfigurationName)\$(PlatformName)\bin\gtk3-demo.pdb $(CopyDir)\bin&#x0D;&#x0A;
-copy $(ConfigurationName)\$(PlatformName)\bin\gtk3-demo-application.exe $(CopyDir)\bin&#x0D;&#x0A;
-copy $(ConfigurationName)\$(PlatformName)\bin\gtk3-demo-application.pdb $(CopyDir)\bin&#x0D;&#x0A;
-copy $(ConfigurationName)\$(PlatformName)\bin\gtk3-icon-browser.exe $(CopyDir)\bin&#x0D;&#x0A;
-copy $(ConfigurationName)\$(PlatformName)\bin\gtk3-icon-browser.pdb $(CopyDir)\bin&#x0D;&#x0A;
-copy $(ConfigurationName)\$(PlatformName)\bin\gtk-encode-symbolic-svg.exe $(CopyDir)\bin&#x0D;&#x0A;
-copy $(ConfigurationName)\$(PlatformName)\bin\gtk-encode-symbolic-svg.pdb $(CopyDir)\bin&#x0D;&#x0A;
-copy $(ConfigurationName)\$(PlatformName)\bin\gtk-update-icon-cache.exe $(CopyDir)\bin&#x0D;&#x0A;
-copy $(ConfigurationName)\$(PlatformName)\bin\gtk-update-icon-cache.pdb $(CopyDir)\bin&#x0D;&#x0A;
-copy $(ConfigurationName)\$(PlatformName)\bin\gtk-query-settings.exe $(CopyDir)\bin&#x0D;&#x0A;
-copy $(ConfigurationName)\$(PlatformName)\bin\gtk-query-settings.pdb $(CopyDir)\bin&#x0D;&#x0A;
-copy $(ConfigurationName)\$(PlatformName)\bin\gtk-builder-tool.exe $(CopyDir)\bin&#x0D;&#x0A;
-copy $(ConfigurationName)\$(PlatformName)\bin\gtk-builder-tool.pdb $(CopyDir)\bin&#x0D;&#x0A;
-if exist $(ConfigurationName)\$(PlatformName)\bin\Gdk-3.0.gir copy $(ConfigurationName)\$(PlatformName)\bin\Gdk-3.0.gir $(CopyDir)\share\gir-1.0&#x0D;&#x0A;
-if exist $(ConfigurationName)\$(PlatformName)\bin\GdkWin32-3.0.gir copy $(ConfigurationName)\$(PlatformName)\bin\GdkWin32-3.0.gir $(CopyDir)\share\gir-1.0&#x0D;&#x0A;
-if exist $(ConfigurationName)\$(PlatformName)\bin\Gtk-3.0.gir copy $(ConfigurationName)\$(PlatformName)\bin\Gtk-3.0.gir $(CopyDir)\share\gir-1.0&#x0D;&#x0A;
-if exist $(ConfigurationName)\$(PlatformName)\bin\Gdk-3.0.typelib copy $(ConfigurationName)\$(PlatformName)\bin\Gdk-3.0.typelib $(CopyDir)\lib\girepository-1.0&#x0D;&#x0A;
-if exist $(ConfigurationName)\$(PlatformName)\bin\GdkWin32-3.0.typelib copy $(ConfigurationName)\$(PlatformName)\bin\GdkWin32-3.0.typelib $(CopyDir)\lib\girepository-1.0&#x0D;&#x0A;
-if exist $(ConfigurationName)\$(PlatformName)\bin\Gtk-3.0.typelib copy $(ConfigurationName)\$(PlatformName)\bin\Gtk-3.0.typelib $(CopyDir)\lib\girepository-1.0&#x0D;&#x0A;
-goto DONE_BIN&#x0D;&#x0A;
-
-:DO_BROADWAY_BIN&#x0D;&#x0A;
-copy $(ConfigurationName)\$(PlatformName)\bin\broadwayd.exe $(CopyDir)\bin&#x0D;&#x0A;
-copy $(ConfigurationName)\$(PlatformName)\bin\broadwayd.pdb $(CopyDir)\bin&#x0D;&#x0A;
-
-if &quot;$(ConfigurationName)&quot; == &quot;Release_Broadway&quot; goto DO_BROADWAY_RELEASE&#x0D;&#x0A;
-if &quot;$(ConfigurationName)&quot; == &quot;Debug_Broadway&quot; goto DO_BROADWAY_DEBUG&#x0D;&#x0A;
-:DO_BROADWAY_RELEASE&#x0D;&#x0A;
-copy .\Release\$(PlatformName)\bin\$(GtkDllPrefix)gtk-3$(GtkDllSuffix).dll $(CopyDir)\bin&#x0D;&#x0A;
-copy .\Release\$(PlatformName)\bin\$(GtkDllPrefix)gtk-3$(GtkDllSuffix).pdb $(CopyDir)\bin&#x0D;&#x0A;
-copy .\Release\$(PlatformName)\bin\$(GtkDllPrefix)gailutil-3$(GtkDllSuffix).dll $(CopyDir)\bin&#x0D;&#x0A;
-copy .\Release\$(PlatformName)\bin\$(GtkDllPrefix)gailutil-3$(GtkDllSuffix).pdb $(CopyDir)\bin&#x0D;&#x0A;
-copy .\Release\$(PlatformName)\bin\gtk-$(ApiVersion).lib $(CopyDir)\lib&#x0D;&#x0A;
-copy .\Release\$(PlatformName)\bin\gailutil-$(ApiVersion).lib $(CopyDir)\lib&#x0D;&#x0A;
-copy .\Release\$(PlatformName)\bin\gtk3-demo.exe $(CopyDir)\bin&#x0D;&#x0A;
-copy .\Release\$(PlatformName)\bin\gtk3-demo.pdb $(CopyDir)\bin&#x0D;&#x0A;
-copy .\Release\$(PlatformName)\bin\gtk3-demo-application.exe $(CopyDir)\bin&#x0D;&#x0A;
-copy .\Release\$(PlatformName)\bin\gtk3-demo-application.pdb $(CopyDir)\bin&#x0D;&#x0A;
-copy .\Release\$(PlatformName)\bin\gtk3-icon-browser.exe $(CopyDir)\bin&#x0D;&#x0A;
-copy .\Release\$(PlatformName)\bin\gtk3-icon-browser.pdb $(CopyDir)\bin&#x0D;&#x0A;
-copy .\Release\$(PlatformName)\bin\gtk-encode-symbolic-svg.exe $(CopyDir)\bin&#x0D;&#x0A;
-copy .\Release\$(PlatformName)\bin\gtk-encode-symbolic-svg.pdb $(CopyDir)\bin&#x0D;&#x0A;
-copy .\Release\$(PlatformName)\bin\gtk-update-icon-cache.exe $(CopyDir)\bin&#x0D;&#x0A;
-copy .\Release\$(PlatformName)\bin\gtk-update-icon-cache.pdb $(CopyDir)\bin&#x0D;&#x0A;
-copy .\Release\$(PlatformName)\bin\gtk-query-settings.exe $(CopyDir)\bin&#x0D;&#x0A;
-copy .\Release\$(PlatformName)\bin\gtk-query-settings.pdb $(CopyDir)\bin&#x0D;&#x0A;
-copy .\Release\$(PlatformName)\bin\gtk-builder-tool.exe $(CopyDir)\bin&#x0D;&#x0A;
-copy .\Release\$(PlatformName)\bin\gtk-builder-tool.pdb $(CopyDir)\bin&#x0D;&#x0A;
-if exist .\Release\$(PlatformName)\bin\Gdk-3.0.gir copy .\Release\$(PlatformName)\bin\Gdk-3.0.gir $(CopyDir)\share\gir-1.0&#x0D;&#x0A;
-if exist .\Release\$(PlatformName)\bin\GdkWin32-3.0.gir copy .\Release\$(PlatformName)\bin\GdkWin32-3.0.gir $(CopyDir)\share\gir-1.0&#x0D;&#x0A;
-if exist .\Release\$(PlatformName)\bin\Gtk-3.0.gir copy .\Release\$(PlatformName)\bin\Gtk-3.0.gir $(CopyDir)\share\gir-1.0&#x0D;&#x0A;
-if exist .\Release\$(PlatformName)\bin\Gdk-3.0.typelib copy .\Release\$(PlatformName)\bin\Gdk-3.0.typelib $(CopyDir)\lib\girepository-1.0&#x0D;&#x0A;
-if exist .\Release\$(PlatformName)\bin\GdkWin32-3.0.typelib copy .\Release\$(PlatformName)\bin\GdkWin32-3.0.typelib $(CopyDir)\lib\girepository-1.0&#x0D;&#x0A;
-if exist .\Release\$(PlatformName)\bin\Gtk-3.0.typelib copy .\Release\$(PlatformName)\bin\Gtk-3.0.typelib $(CopyDir)\lib\girepository-1.0&#x0D;&#x0A;
-goto DONE_BIN&#x0D;&#x0A;
-
-:DO_BROADWAY_DEBUG&#x0D;&#x0A;
-copy .\Debug\$(PlatformName)\bin\$(GtkDllPrefix)gtk-3$(GtkDllSuffix).dll $(CopyDir)\bin&#x0D;&#x0A;
-copy .\Debug\$(PlatformName)\bin\$(GtkDllPrefix)gtk-3$(GtkDllSuffix).pdb $(CopyDir)\bin&#x0D;&#x0A;
-copy .\Debug\$(PlatformName)\bin\$(GtkDllPrefix)gailutil-3$(GtkDllSuffix).dll $(CopyDir)\bin&#x0D;&#x0A;
-copy .\Debug\$(PlatformName)\bin\$(GtkDllPrefix)gailutil-3$(GtkDllSuffix).pdb $(CopyDir)\bin&#x0D;&#x0A;
-copy .\Debug\$(PlatformName)\bin\gtk-$(ApiVersion).lib $(CopyDir)\lib&#x0D;&#x0A;
-copy .\Debug\$(PlatformName)\bin\gailutil-$(ApiVersion).lib $(CopyDir)\lib&#x0D;&#x0A;
-copy .\Debug\$(PlatformName)\bin\gtk3-demo.exe $(CopyDir)\bin&#x0D;&#x0A;
-copy .\Debug\$(PlatformName)\bin\gtk3-demo.pdb $(CopyDir)\bin&#x0D;&#x0A;
-copy .\Debug\$(PlatformName)\bin\gtk3-demo-application.exe $(CopyDir)\bin&#x0D;&#x0A;
-copy .\Debug\$(PlatformName)\bin\gtk3-demo-application.pdb $(CopyDir)\bin&#x0D;&#x0A;
-copy .\Debug\$(PlatformName)\bin\gtk3-icon-browser.exe $(CopyDir)\bin&#x0D;&#x0A;
-copy .\Debug\$(PlatformName)\bin\gtk3-icon-browser.pdb $(CopyDir)\bin&#x0D;&#x0A;
-copy .\Debug\$(PlatformName)\bin\gtk-encode-symbolic-svg.exe $(CopyDir)\bin&#x0D;&#x0A;
-copy .\Debug\$(PlatformName)\bin\gtk-encode-symbolic-svg.pdb $(CopyDir)\bin&#x0D;&#x0A;
-copy .\Debug\$(PlatformName)\bin\gtk-update-icon-cache.exe $(CopyDir)\bin&#x0D;&#x0A;
-copy .\Debug\$(PlatformName)\bin\gtk-update-icon-cache.pdb $(CopyDir)\bin&#x0D;&#x0A;
-copy .\Debug\$(PlatformName)\bin\gtk-query-settings.exe $(CopyDir)\bin&#x0D;&#x0A;
-copy .\Debug\$(PlatformName)\bin\gtk-query-settings.pdb $(CopyDir)\bin&#x0D;&#x0A;
-copy .\Debug\$(PlatformName)\bin\gtk-builder-tool.exe $(CopyDir)\bin&#x0D;&#x0A;
-copy .\Debug\$(PlatformName)\bin\gtk-builder-tool.pdb $(CopyDir)\bin&#x0D;&#x0A;
-if exist .\Debug\$(PlatformName)\bin\Gdk-3.0.gir copy .\Debug\$(PlatformName)\bin\Gdk-3.0.gir $(CopyDir)\share\gir-1.0&#x0D;&#x0A;
-if exist .\Debug\$(PlatformName)\bin\GdkWin32-3.0.gir copy .\Debug\$(PlatformName)\bin\GdkWin32-3.0.gir $(CopyDir)\share\gir-1.0&#x0D;&#x0A;
-if exist .\Debug\$(PlatformName)\bin\Gtk-3.0.gir copy .\Debug\$(PlatformName)\bin\Gtk-3.0.gir $(CopyDir)\share\gir-1.0&#x0D;&#x0A;
-if exist .\Debug\$(PlatformName)\bin\Gdk-3.0.typelib copy .\Debug\$(PlatformName)\bin\Gdk-3.0.typelib $(CopyDir)\lib\girepository-1.0&#x0D;&#x0A;
-if exist .\Debug\$(PlatformName)\bin\GdkWin32-3.0.typelib copy .\Debug\$(PlatformName)\bin\GdkWin32-3.0.typelib $(CopyDir)\lib\girepository-1.0&#x0D;&#x0A;
-if exist .\Debug\$(PlatformName)\bin\Gtk-3.0.typelib copy .\Debug\$(PlatformName)\bin\Gtk-3.0.typelib $(CopyDir)\lib\girepository-1.0&#x0D;&#x0A;
-:DONE_BIN&#x0D;&#x0A;
-
-copy ..\gdk-3.0.pc $(CopyDir)\lib\pkgconfig&#x0D;&#x0A;
-copy ..\gdk-3.0.pc $(CopyDir)\lib\pkgconfig\gdk-win32-3.0.pc&#x0D;&#x0A;
-copy &quot;..\gtk+-3.0.pc&quot; $(CopyDir)\lib\pkgconfig&#x0D;&#x0A;
-copy &quot;..\gtk+-3.0.pc&quot; &quot;$(CopyDir)\lib\pkgconfig\gtk+-win32-3.0.pc&quot;&#x0D;&#x0A;
-copy ..\gail-3.0.pc $(CopyDir)\lib\pkgconfig&#x0D;&#x0A;
-			  "
-	/>
-	<UserMacro
-		Name="GtkDoInstall"
-		Value="
-echo off&#x0D;&#x0A;
-mkdir $(CopyDir)\include\gtk-$(ApiVersion)\gdk\win32&#x0D;&#x0A;
-mkdir $(CopyDir)\include\gtk-$(ApiVersion)\gdk\deprecated&#x0D;&#x0A;
-mkdir $(CopyDir)\include\gtk-$(ApiVersion)\gtk\a11y&#x0D;&#x0A;
-mkdir $(CopyDir)\include\gtk-$(ApiVersion)\gtk\deprecated&#x0D;&#x0A;
-
-copy ..\..\gdk\win32\gdkwin32.h $(CopyDir)\include\gtk-$(ApiVersion)\gdk&#x0D;&#x0A;
-
-if &quot;$(ConfigurationName)&quot; == &quot;Release&quot; goto COPY_RELEASE_BUILT_HEADERS&#x0D;&#x0A;
-if &quot;$(ConfigurationName)&quot; == &quot;Release_Broadway&quot; goto COPY_RELEASE_BUILT_HEADERS&#x0D;&#x0A;
-if &quot;$(ConfigurationName)&quot; == &quot;Debug&quot; goto COPY_DEBUG_BUILT_HEADERS&#x0D;&#x0A;
-if &quot;$(ConfigurationName)&quot; == &quot;Debug_Broadway&quot; goto COPY_DEBUG_BUILT_HEADERS&#x0D;&#x0A;
-
-:COPY_DEBUG_BUILT_HEADERS&#x0D;&#x0A;
-copy .\Debug\$(PlatformName)\obj\gdk-3\gdk\gdkconfig.h $(CopyDir)\include\gtk-$(ApiVersion)\gdk&#x0D;&#x0A;
-copy .\Debug\$(PlatformName)\obj\gdk-3\gdk\gdkenumtypes.h $(CopyDir)\include\gtk-$(ApiVersion)\gdk&#x0D;&#x0A;
-copy .\Debug\$(PlatformName)\obj\gdk-3\gdk\gdkversionmacros.h $(CopyDir)\include\gtk-$(ApiVersion)\gdk&#x0D;&#x0A;
-copy .\Debug\$(PlatformName)\obj\gtk-3\gtk\gtktypebuiltins.h $(CopyDir)\include\gtk-$(ApiVersion)\gtk&#x0D;&#x0A;
-copy .\Debug\$(PlatformName)\obj\gtk-3\gtk\gtkversion.h $(CopyDir)\include\gtk-$(ApiVersion)\gtk&#x0D;&#x0A;
-goto CONTINUE_HEADERS&#x0D;&#x0A;
-
-:COPY_RELEASE_BUILT_HEADERS&#x0D;&#x0A;
-copy .\Release\$(PlatformName)\obj\gdk-3\gdk\gdkconfig.h $(CopyDir)\include\gtk-$(ApiVersion)\gdk&#x0D;&#x0A;
-copy .\Release\$(PlatformName)\obj\gdk-3\gdk\gdkenumtypes.h $(CopyDir)\include\gtk-$(ApiVersion)\gdk&#x0D;&#x0A;
-copy .\Release\$(PlatformName)\obj\gdk-3\gdk\gdkversionmacros.h $(CopyDir)\include\gtk-$(ApiVersion)\gdk&#x0D;&#x0A;
-copy .\Release\$(PlatformName)\obj\gtk-3\gtk\gtktypebuiltins.h $(CopyDir)\include\gtk-$(ApiVersion)\gtk&#x0D;&#x0A;
-copy .\Release\$(PlatformName)\obj\gtk-3\gtk\gtkversion.h $(CopyDir)\include\gtk-$(ApiVersion)\gtk&#x0D;&#x0A;
-goto CONTINUE_HEADERS&#x0D;&#x0A;
-
-:CONTINUE_HEADERS&#x0D;&#x0A;
-#include "gdk-3.headers"
-#include "gdk3-win32.headers"
-#include "gtk-3.headers"
-
-mkdir $(CopyDir)\include\gail-$(ApiVersion)\libgail-util&#x0D;&#x0A;
-#include "gailutil-3.headers"
-
-mkdir $(CopyDir)\share\icons\hicolor\16x16\apps&#x0D;&#x0A;
-copy ..\..\demos\gtk-demo\data\16x16\gtk3-demo.png $(CopyDir)\share\icons\hicolor\16x16\apps\&#x0D;&#x0A;
-mkdir $(CopyDir)\share\icons\hicolor\22x22\apps&#x0D;&#x0A;
-copy ..\..\demos\gtk-demo\data\22x22\gtk3-demo.png $(CopyDir)\share\icons\hicolor\22x22\apps\&#x0D;&#x0A;
-mkdir $(CopyDir)\share\icons\hicolor\24x24\apps&#x0D;&#x0A;
-copy ..\..\demos\gtk-demo\data\24x24\gtk3-demo.png $(CopyDir)\share\icons\hicolor\24x24\apps\&#x0D;&#x0A;
-mkdir $(CopyDir)\share\icons\hicolor\32x32\apps&#x0D;&#x0A;
-copy ..\..\demos\gtk-demo\data\32x32\gtk3-demo.png $(CopyDir)\share\icons\hicolor\32x32\apps\&#x0D;&#x0A;
-mkdir $(CopyDir)\share\icons\hicolor\48x48\apps&#x0D;&#x0A;
-copy ..\..\demos\gtk-demo\data\48x48\gtk3-demo.png $(CopyDir)\share\icons\hicolor\48x48\apps\&#x0D;&#x0A;
-mkdir $(CopyDir)\share\icons\hicolor\256x256\apps&#x0D;&#x0A;
-copy ..\..\demos\gtk-demo\data\256x256\gtk3-demo.png $(CopyDir)\share\icons\hicolor\256x256\apps\&#x0D;&#x0A;
-
-mkdir $(CopyDir)\share\glib-2.0\schemas&#x0D;&#x0A;
-copy ..\..\gtk\org.gtk.Settings.ColorChooser.gschema.xml $(CopyDir)\share\glib-2.0\schemas&#x0D;&#x0A;
-copy ..\..\gtk\org.gtk.Settings.Debug.gschema.xml $(CopyDir)\share\glib-2.0\schemas&#x0D;&#x0A;
-copy ..\..\gtk\org.gtk.Settings.EmojiChooser.gschema.xml $(CopyDir)\share\glib-2.0\schemas&#x0D;&#x0A;
-copy ..\..\gtk\org.gtk.Settings.FileChooser.gschema.xml $(CopyDir)\share\glib-2.0\schemas&#x0D;&#x0A;
-copy ..\..\demos\gtk-demo\org.gtk.Demo.gschema.xml $(CopyDir)\share\glib-2.0\schemas&#x0D;&#x0A;
-		      "
-	/>
-	<UserMacro
-		Name="GtkPostInstall"
-		Value="
-echo &quot;Compiling gsettings XML Files...&quot;&#x0D;&#x0A;
-$(GlibEtcInstallRoot)\bin\glib-compile-schemas.exe $(CopyDir)\share\glib-2.0\schemas&#x0D;&#x0A;
-
-echo &quot;Generating icon cache...&quot;&#x0D;&#x0A;
-$(CopyDir)\bin\gtk-update-icon-cache.exe --ignore-theme-index --force &quot;$(CopyDir)\share\icons\hicolor&quot;
-		      "
-	/>
-	<UserMacro
-		Name="GtkDoInstallBroadwayHeaders"
-		Value="
-copy ..\..\gdk\broadway\gdkbroadway.h $(CopyDir)\include\gtk-$(ApiVersion)\gdk&#x0D;&#x0A;
-mkdir $(CopyDir)\include\gtk-$(ApiVersion)\gdk\broadway&#x0D;&#x0A;
-#include "gdk3-broadway.headers"
-        "
-	/>
-	<UserMacro
-		Name="GenerateGtkPC"
-		Value="$(PythonDir)\python ..\gtkpc.py --prefix=$(CopyDir) --version=$(GtkVersion) --host=i686-pc-vs$(VSVer)"
-	/>
-	<UserMacro
-		Name="GenerateGtkPCX64"
-		Value="$(PythonDirX64)\python ..\gtkpc.py --prefix=$(CopyDir) --version=$(GtkVersion) --host=x86_64-pc-vs$(VSVer)"
-	/>
-</VisualStudioPropertySheet>
